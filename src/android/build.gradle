buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.0'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.4'
    }
}

plugins {
  id "com.google.protobuf" version "0.9.4"
}

repositories {
    google()
    jcenter()
    maven { url 'https://jitpack.io' }
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

def amazon = System.getenv('AMAZON')
println(amazon)

// SEMPLIFICATO: Rimuovi la configurazione globale aggressiva per ora
configurations.all {
    resolutionStrategy {
        // Usa solo la versione che funzionava
        force 'com.google.protobuf:protobuf-javalite:3.25.1'
    }
}

dependencies {
    implementation "androidx.core:core:1.12.0"
    implementation "androidx.core:core-ktx:1.12.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0"
    
    // CAMBIATO: Usa la stessa versione del gradle.kts funzionante
    implementation 'com.google.protobuf:protobuf-javalite:3.25.1'
    
    // RIMOSSO: Non includere gRPC qui, aggiungilo solo se necessario
    // implementation('io.grpc:grpc-okhttp:1.63.0') { ... }
    // implementation('io.grpc:grpc-protobuf-lite:1.63.0') { ... }
    // implementation('io.grpc:grpc-stub:1.63.0') { ... }
    // implementation 'javax.annotation:javax.annotation-api:1.3.2'
		
    if(amazon == "1") {
        // amazon app store - exclude protobuf to prevent conflicts
        implementation('com.google.mlkit:text-recognition:16.0.0-beta6') {
            exclude group: 'com.google.protobuf', module: 'protobuf-java'
        }
    } else {
        // google play store - exclude protobuf to prevent conflicts
        implementation('com.google.android.gms:play-services-mlkit-text-recognition:18.0.2') {
            exclude group: 'com.google.protobuf', module: 'protobuf-java'
        }
    }

    implementation 'com.google.android.play:core:1.8.2'

    def appcompat_version = "1.3.1"
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation "com.android.billingclient:billing:6.0.1"
    implementation 'com.android.support:appcompat-v7:28.0.0'

    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.appcompat:appcompat-resources:$appcompat_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation files('libs/usb-serial-for-android-3.8.1.aar')
    androidTestImplementation "com.android.support:support-annotations:28.0.0"
    implementation 'com.google.android.gms:play-services-wearable:+'

    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.60'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.60'
}

import org.apache.tools.ant.taskdefs.condition.Os

// Compatible with macOS on Apple Silicon
def archSuffix = Os.isFamily(Os.FAMILY_MAC) ? ':osx-x86_64' : ''

protobuf {
    protoc {
      artifact = "com.google.protobuf:protoc:3.25.1$archSuffix"
    }
    // RIMOSSO: Non configurare gRPC se non lo usi ancora
    // plugins {
    //     grpc {
    //         artifact = "io.grpc:protoc-gen-grpc-java:1.63.0"
    //     }
    // }
    generateProtoTasks {
      all().configureEach { task ->
        task.builtins {
          java {
            option "lite"
          }
        }
        // RIMOSSO: Plugin gRPC non necessario per ora
        // task.plugins {
        //     grpc {
        //         option "lite"
        //     }
        // }
      }
    }
}

android {
    /*******************************************************
     * The following variables:
     * - androidBuildToolsVersion,
     * - androidCompileSdkVersion
     * - qt5AndroidDir - holds the path to qt android files
     *                   needed to build any Qt application
     *                   on Android.
     *
     * are defined in gradle.properties file. This file is
     * updated by QtCreator and androiddeployqt tools.
     * Changing them manually might break the compilation!
     *******************************************************/

    compileSdkVersion androidCompileSdkVersion.toInteger()

    buildToolsVersion '29.0.2'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = [qt5AndroidDir + '/src', 'src', 'java']
            aidl.srcDirs = [qt5AndroidDir + '/src', 'src', 'aidl']
            res.srcDirs = [qt5AndroidDir + '/res', 'res']
            resources.srcDirs = ['resources']
            renderscript.srcDirs = ['src']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
       }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    // Do not compress Qt binary resources file
    aaptOptions {
        noCompress 'rcc'
    }

    defaultConfig {
        resConfig "en"
        compileSdkVersion 33
        minSdkVersion = 21
        targetSdkVersion = 34
        multiDexEnabled true
        
        // NUOVO: Aggiungi dexOptions per gestire meglio i conflitti
        dexOptions {
            javaMaxHeapSize "4g"
            preDexLibraries false
        }
    }

    // SEMPLIFICATO: packagingOptions di base
    packagingOptions {
        // Risolvi solo il conflitto specifico delle classi protobuf
        pickFirst '**/com/google/protobuf/**'
        pickFirst '**/META-INF/*.kotlin_module'
    }

    tasks.all { task ->
         if (task.name == 'compileDebugJavaWithJavac' && amazon == "1") {
            task.dependsOn copyArm64Directory
            task.dependsOn copyArm32Directory
            }
    }
}

task copyArm64Directory(type: Copy) {
    from "libs/arm64-v8a/"
    include '*arm64-v8a.so'
    into "libs/armeabi-v7a/"
}

task copyArm32Directory(type: Copy) {
    from "libs/armeabi-v7a/"
    include '*armeabi-v7a.so'
    into "libs/arm64-v8a/"
}