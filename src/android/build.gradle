buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.0'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.4'
    }
}

plugins {
  id "com.google.protobuf" version "0.9.4"
}

repositories {
    google()
    jcenter()
    maven { url 'https://jitpack.io' }
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

def amazon = System.getenv('AMAZON')
def nordictrack = System.getenv('NORDICTRACK')
println(amazon)
println(nordictrack)

// Global exclusion strategy - apply to all configurations
configurations.all {
    // Exclude all protobuf variants except the one we want
    exclude group: 'com.google.protobuf', module: 'protobuf-java'
    exclude group: 'com.google.protobuf', module: 'protobuf-lite'
    exclude group: 'com.google.protobuf', module: 'protobuf-java-util'
}

dependencies {
    implementation "androidx.core:core:1.12.0"
    implementation "androidx.core:core-ktx:1.12.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0"
    
    // CRITICAL: Only one protobuf dependency - must be first
    implementation 'com.google.protobuf:protobuf-javalite:3.25.1'

    // Core gRPC dependencies with aggressive exclusions
    implementation('io.grpc:grpc-okhttp:1.63.0') {
        exclude group: 'com.google.protobuf' // Exclude ALL protobuf from gRPC
        exclude group: 'io.grpc', module: 'grpc-protobuf'
        exclude group: 'com.google.guava'
    }
    implementation('io.grpc:grpc-protobuf-lite:1.63.0') {
        exclude group: 'com.google.protobuf' // Exclude ALL protobuf from gRPC
    }
    implementation('io.grpc:grpc-stub:1.63.0') {
        exclude group: 'com.google.protobuf' // Exclude ALL protobuf from gRPC
    }
    
    // Required for gRPC annotations
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    if(amazon == "1") {
        // amazon app store
        implementation('com.google.mlkit:text-recognition:16.0.0-beta6') {
            exclude group: 'com.google.protobuf' // Exclude ALL protobuf from ML Kit
        }
    } else if(nordictrack != "1") {
        // google play store
        implementation('com.google.android.gms:play-services-mlkit-text-recognition:18.0.2') {
            exclude group: 'com.google.protobuf' // Exclude ALL protobuf from Play Services
        }
    }
    // NordicTrack build: no ML Kit dependency included

    implementation('com.google.android.play:core:1.8.2') {
        exclude group: 'com.google.protobuf' // Exclude ALL protobuf from Play Core
    }

    def appcompat_version = "1.3.1"
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation("com.android.billingclient:billing:6.0.1") {
        exclude group: 'com.google.protobuf' // Exclude ALL protobuf from Billing
    }
    implementation 'com.android.support:appcompat-v7:28.0.0'

    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.appcompat:appcompat-resources:$appcompat_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation files('libs/usb-serial-for-android-3.8.1.aar')
    androidTestImplementation "com.android.support:support-annotations:28.0.0"
    implementation('com.google.android.gms:play-services-wearable:+') {
        exclude group: 'com.google.protobuf' // Exclude ALL protobuf from Wearable
    }

    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.60'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.60'
}

import org.apache.tools.ant.taskdefs.condition.Os

// Compatible with macOS on Apple Silicon
def archSuffix = Os.isFamily(Os.FAMILY_MAC) ? ':osx-x86_64' : ''

protobuf {
    protoc {
      artifact = "com.google.protobuf:protoc:3.25.1$archSuffix"
    }
    // Add gRPC plugin configuration
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.63.0"
        }
    }
    generateProtoTasks {
      all().configureEach { task ->
        // Add gRPC plugin to task
        task.plugins {
            grpc {
                option "lite"  // Essential for Android
            }
        }
        task.builtins {
          java {
            option "lite"
          }
        }
      }
    }
}

android {
    /*******************************************************
     * The following variables:
     * - androidBuildToolsVersion,
     * - androidCompileSdkVersion
     * - qt5AndroidDir - holds the path to qt android files
     *                   needed to build any Qt application
     *                   on Android.
     *
     * are defined in gradle.properties file. This file is
     * updated by QtCreator and androiddeployqt tools.
     * Changing them manually might break the compilation!
     *******************************************************/

    compileSdkVersion androidCompileSdkVersion.toInteger()

    buildToolsVersion '29.0.2'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        pickFirst '**/META-INF/okio.kotlin_module'
        pickFirst '**/META-INF/kotlinx-coroutines-core.kotlin_module'
        pickFirst '**/META-INF/atomicfu.kotlin_module'
        pickFirst '**/META-INF/kotlinx-coroutines-io.kotlin_module'
        pickFirst '**/META-INF/kotlinx-io.kotlin_module'
        pickFirst '**/META-INF/kotlinx-coroutines-debug.kotlin_module'
        
        // AGGRESSIVE protobuf conflict resolution - pick first of everything
        pickFirst '**/com/google/protobuf/**'
        pickFirst '**/google/protobuf/**'
        pickFirst '**/*.proto'
        pickFirst '**/META-INF/com.google.protobuf*'
        
        // Exclude other potentially conflicting files
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = [qt5AndroidDir + '/src', 'src', 'java']
            aidl.srcDirs = [qt5AndroidDir + '/src', 'src', 'aidl']
            res.srcDirs = [qt5AndroidDir + '/res', 'res']
            resources.srcDirs = ['resources']
            renderscript.srcDirs = ['src']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']            
       }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    // Do not compress Qt binary resources file
    aaptOptions {
        noCompress 'rcc'
    }

    defaultConfig {
        resConfig "en"
        compileSdkVersion 33
        minSdkVersion = 21
        targetSdkVersion = 34
        
        // Add multiDex support if needed due to large number of methods
        multiDexEnabled true
    }

    // Add this to help with duplicate class issues
    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }

tasks.all { task ->
     if (task.name == 'compileDebugJavaWithJavac' && amazon == "1") {
        task.dependsOn copyArm64Directory
        task.dependsOn copyArm32Directory
        }
}
}

// MOST AGGRESSIVE resolution strategy
configurations.all {
    resolutionStrategy {
        // Force the single protobuf version we want
        force 'com.google.protobuf:protobuf-javalite:3.25.1'
        
        // Force AndroidX versions to prevent conflicts
        force 'androidx.core:core:1.12.0'
        force 'androidx.appcompat:appcompat:1.3.1'
        force 'androidx.annotation:annotation:1.6.0'
        
        // Substitute all protobuf variants with our chosen one
        dependencySubstitution {
            substitute module('com.google.protobuf:protobuf-java') with module('com.google.protobuf:protobuf-javalite:3.25.1')
            substitute module('com.google.protobuf:protobuf-lite') with module('com.google.protobuf:protobuf-javalite:3.25.1')
            substitute module('com.google.protobuf:protobuf-java-util') with module('com.google.protobuf:protobuf-javalite:3.25.1')
        }
        
        // Component selection to reject unwanted protobuf versions
        componentSelection {
            all { ComponentSelection selection ->
                if (selection.candidate.group == 'com.google.protobuf') {
                    if (selection.candidate.module != 'protobuf-javalite') {
                        selection.reject("Only protobuf-javalite allowed for Android")
                    }
                }
            }
        }
        
        // Catch-all replacement for any remaining protobuf dependencies
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'com.google.protobuf') {
                if (details.requested.name != 'protobuf-javalite') {
                    details.useTarget group: 'com.google.protobuf', 
                                    name: 'protobuf-javalite', 
                                    version: '3.25.1'
                    details.because 'Force single protobuf-javalite version for Android'
                }
            }
        }
    }
}

task copyArm64Directory(type: Copy) {
    from "libs/arm64-v8a/"
    include '*arm64-v8a.so'
    into "libs/armeabi-v7a/"
}

task copyArm32Directory(type: Copy) {
    from "libs/armeabi-v7a/"
    include '*armeabi-v7a.so'
    into "libs/arm64-v8a/"
}