// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: console/calibration/ThrottleCalibration.proto

// Protobuf Java Version: 3.25.3
package com.ifit.glassos.console.calibration;

/**
 * Protobuf enum {@code com.ifit.glassos.ThrottleCalibrationState}
 */
public enum ThrottleCalibrationState
    implements com.google.protobuf.Internal.EnumLite {
  /**
   * <code>CALIBRATE_THROTTLE_STATE_IDLE = 0;</code>
   */
  CALIBRATE_THROTTLE_STATE_IDLE(0),
  /**
   * <code>CALIBRATE_THROTTLE_STATE_FAILED = 1;</code>
   */
  CALIBRATE_THROTTLE_STATE_FAILED(1),
  /**
   * <code>CALIBRATE_THROTTLE_STATE_WAITING_FOR_NEUTRAL = 2;</code>
   */
  CALIBRATE_THROTTLE_STATE_WAITING_FOR_NEUTRAL(2),
  /**
   * <code>CALIBRATE_THROTTLE_STATE_WAITING_FOR_GRADE_FORWARD = 3;</code>
   */
  CALIBRATE_THROTTLE_STATE_WAITING_FOR_GRADE_FORWARD(3),
  /**
   * <code>CALIBRATE_THROTTLE_STATE_WAITING_FOR_GRADE_BACKWARD = 4;</code>
   */
  CALIBRATE_THROTTLE_STATE_WAITING_FOR_GRADE_BACKWARD(4),
  /**
   * <code>CALIBRATE_THROTTLE_STATE_WAITING_FOR_SPEED_FORWARD = 5;</code>
   */
  CALIBRATE_THROTTLE_STATE_WAITING_FOR_SPEED_FORWARD(5),
  /**
   * <code>CALIBRATE_THROTTLE_STATE_WAITING_FOR_SPEED_BACKWARD = 6;</code>
   */
  CALIBRATE_THROTTLE_STATE_WAITING_FOR_SPEED_BACKWARD(6),
  /**
   * <code>CALIBRATE_THROTTLE_STATE_DONE = 7;</code>
   */
  CALIBRATE_THROTTLE_STATE_DONE(7),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>CALIBRATE_THROTTLE_STATE_IDLE = 0;</code>
   */
  public static final int CALIBRATE_THROTTLE_STATE_IDLE_VALUE = 0;
  /**
   * <code>CALIBRATE_THROTTLE_STATE_FAILED = 1;</code>
   */
  public static final int CALIBRATE_THROTTLE_STATE_FAILED_VALUE = 1;
  /**
   * <code>CALIBRATE_THROTTLE_STATE_WAITING_FOR_NEUTRAL = 2;</code>
   */
  public static final int CALIBRATE_THROTTLE_STATE_WAITING_FOR_NEUTRAL_VALUE = 2;
  /**
   * <code>CALIBRATE_THROTTLE_STATE_WAITING_FOR_GRADE_FORWARD = 3;</code>
   */
  public static final int CALIBRATE_THROTTLE_STATE_WAITING_FOR_GRADE_FORWARD_VALUE = 3;
  /**
   * <code>CALIBRATE_THROTTLE_STATE_WAITING_FOR_GRADE_BACKWARD = 4;</code>
   */
  public static final int CALIBRATE_THROTTLE_STATE_WAITING_FOR_GRADE_BACKWARD_VALUE = 4;
  /**
   * <code>CALIBRATE_THROTTLE_STATE_WAITING_FOR_SPEED_FORWARD = 5;</code>
   */
  public static final int CALIBRATE_THROTTLE_STATE_WAITING_FOR_SPEED_FORWARD_VALUE = 5;
  /**
   * <code>CALIBRATE_THROTTLE_STATE_WAITING_FOR_SPEED_BACKWARD = 6;</code>
   */
  public static final int CALIBRATE_THROTTLE_STATE_WAITING_FOR_SPEED_BACKWARD_VALUE = 6;
  /**
   * <code>CALIBRATE_THROTTLE_STATE_DONE = 7;</code>
   */
  public static final int CALIBRATE_THROTTLE_STATE_DONE_VALUE = 7;


  @java.lang.Override
  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The number of the enum to look for.
   * @return The enum associated with the given number.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ThrottleCalibrationState valueOf(int value) {
    return forNumber(value);
  }

  public static ThrottleCalibrationState forNumber(int value) {
    switch (value) {
      case 0: return CALIBRATE_THROTTLE_STATE_IDLE;
      case 1: return CALIBRATE_THROTTLE_STATE_FAILED;
      case 2: return CALIBRATE_THROTTLE_STATE_WAITING_FOR_NEUTRAL;
      case 3: return CALIBRATE_THROTTLE_STATE_WAITING_FOR_GRADE_FORWARD;
      case 4: return CALIBRATE_THROTTLE_STATE_WAITING_FOR_GRADE_BACKWARD;
      case 5: return CALIBRATE_THROTTLE_STATE_WAITING_FOR_SPEED_FORWARD;
      case 6: return CALIBRATE_THROTTLE_STATE_WAITING_FOR_SPEED_BACKWARD;
      case 7: return CALIBRATE_THROTTLE_STATE_DONE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ThrottleCalibrationState>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ThrottleCalibrationState> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ThrottleCalibrationState>() {
          @java.lang.Override
          public ThrottleCalibrationState findValueByNumber(int number) {
            return ThrottleCalibrationState.forNumber(number);
          }
        };

  public static com.google.protobuf.Internal.EnumVerifier 
      internalGetVerifier() {
    return ThrottleCalibrationStateVerifier.INSTANCE;
  }

  private static final class ThrottleCalibrationStateVerifier implements 
       com.google.protobuf.Internal.EnumVerifier { 
          static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ThrottleCalibrationStateVerifier();
          @java.lang.Override
          public boolean isInRange(int number) {
            return ThrottleCalibrationState.forNumber(number) != null;
          }
        };

  private final int value;

  private ThrottleCalibrationState(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.ifit.glassos.ThrottleCalibrationState)
}

