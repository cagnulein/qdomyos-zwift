// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: featuregates/FeatureGateRule.proto

// Protobuf Java Version: 3.25.3
package com.ifit.glassos.featuregates;

/**
 * Protobuf type {@code com.ifit.glassos.FeatureGateRule}
 */
public  final class FeatureGateRule extends
    com.google.protobuf.GeneratedMessageLite<
        FeatureGateRule, FeatureGateRule.Builder> implements
    // @@protoc_insertion_point(message_implements:com.ifit.glassos.FeatureGateRule)
    FeatureGateRuleOrBuilder {
  private FeatureGateRule() {
    featureGateFacet_ = emptyProtobufList();
  }
  public static final int GATEDFEATURE_FIELD_NUMBER = 1;
  private int gatedFeature_;
  /**
   * <code>.com.ifit.glassos.GatedFeature gatedFeature = 1;</code>
   * @return The enum numeric value on the wire for gatedFeature.
   */
  @java.lang.Override
  public int getGatedFeatureValue() {
    return gatedFeature_;
  }
  /**
   * <code>.com.ifit.glassos.GatedFeature gatedFeature = 1;</code>
   * @return The gatedFeature.
   */
  @java.lang.Override
  public com.ifit.glassos.featuregates.GatedFeature getGatedFeature() {
    com.ifit.glassos.featuregates.GatedFeature result = com.ifit.glassos.featuregates.GatedFeature.forNumber(gatedFeature_);
    return result == null ? com.ifit.glassos.featuregates.GatedFeature.UNRECOGNIZED : result;
  }
  /**
   * <code>.com.ifit.glassos.GatedFeature gatedFeature = 1;</code>
   * @param value The enum numeric value on the wire for gatedFeature to set.
   */
  private void setGatedFeatureValue(int value) {
      gatedFeature_ = value;
  }
  /**
   * <code>.com.ifit.glassos.GatedFeature gatedFeature = 1;</code>
   * @param value The gatedFeature to set.
   */
  private void setGatedFeature(com.ifit.glassos.featuregates.GatedFeature value) {
    gatedFeature_ = value.getNumber();

  }
  /**
   * <code>.com.ifit.glassos.GatedFeature gatedFeature = 1;</code>
   */
  private void clearGatedFeature() {

    gatedFeature_ = 0;
  }

  public static final int INCOMPLETE_FIELD_NUMBER = 2;
  private boolean incomplete_;
  /**
   * <code>bool incomplete = 2;</code>
   * @return The incomplete.
   */
  @java.lang.Override
  public boolean getIncomplete() {
    return incomplete_;
  }
  /**
   * <code>bool incomplete = 2;</code>
   * @param value The incomplete to set.
   */
  private void setIncomplete(boolean value) {
    
    incomplete_ = value;
  }
  /**
   * <code>bool incomplete = 2;</code>
   */
  private void clearIncomplete() {

    incomplete_ = false;
  }

  public static final int FEATUREGATEFACET_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.featuregates.FacetMessage> featureGateFacet_;
  /**
   * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.ifit.glassos.featuregates.FacetMessage> getFeatureGateFacetList() {
    return featureGateFacet_;
  }
  /**
   * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
   */
  public java.util.List<? extends com.ifit.glassos.featuregates.FacetMessageOrBuilder> 
      getFeatureGateFacetOrBuilderList() {
    return featureGateFacet_;
  }
  /**
   * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
   */
  @java.lang.Override
  public int getFeatureGateFacetCount() {
    return featureGateFacet_.size();
  }
  /**
   * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.featuregates.FacetMessage getFeatureGateFacet(int index) {
    return featureGateFacet_.get(index);
  }
  /**
   * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
   */
  public com.ifit.glassos.featuregates.FacetMessageOrBuilder getFeatureGateFacetOrBuilder(
      int index) {
    return featureGateFacet_.get(index);
  }
  private void ensureFeatureGateFacetIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.featuregates.FacetMessage> tmp = featureGateFacet_;
    if (!tmp.isModifiable()) {
      featureGateFacet_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
   */
  private void setFeatureGateFacet(
      int index, com.ifit.glassos.featuregates.FacetMessage value) {
    value.getClass();
  ensureFeatureGateFacetIsMutable();
    featureGateFacet_.set(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
   */
  private void addFeatureGateFacet(com.ifit.glassos.featuregates.FacetMessage value) {
    value.getClass();
  ensureFeatureGateFacetIsMutable();
    featureGateFacet_.add(value);
  }
  /**
   * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
   */
  private void addFeatureGateFacet(
      int index, com.ifit.glassos.featuregates.FacetMessage value) {
    value.getClass();
  ensureFeatureGateFacetIsMutable();
    featureGateFacet_.add(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
   */
  private void addAllFeatureGateFacet(
      java.lang.Iterable<? extends com.ifit.glassos.featuregates.FacetMessage> values) {
    ensureFeatureGateFacetIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, featureGateFacet_);
  }
  /**
   * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
   */
  private void clearFeatureGateFacet() {
    featureGateFacet_ = emptyProtobufList();
  }
  /**
   * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
   */
  private void removeFeatureGateFacet(int index) {
    ensureFeatureGateFacetIsMutable();
    featureGateFacet_.remove(index);
  }

  public static com.ifit.glassos.featuregates.FeatureGateRule parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.featuregates.FeatureGateRule parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.featuregates.FeatureGateRule parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.featuregates.FeatureGateRule parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.featuregates.FeatureGateRule parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.featuregates.FeatureGateRule parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.featuregates.FeatureGateRule parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.ifit.glassos.featuregates.FeatureGateRule parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.ifit.glassos.featuregates.FeatureGateRule parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.ifit.glassos.featuregates.FeatureGateRule parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.ifit.glassos.featuregates.FeatureGateRule parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.ifit.glassos.featuregates.FeatureGateRule parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.ifit.glassos.featuregates.FeatureGateRule prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code com.ifit.glassos.FeatureGateRule}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.ifit.glassos.featuregates.FeatureGateRule, Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ifit.glassos.FeatureGateRule)
      com.ifit.glassos.featuregates.FeatureGateRuleOrBuilder {
    // Construct using com.ifit.glassos.featuregates.FeatureGateRule.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>.com.ifit.glassos.GatedFeature gatedFeature = 1;</code>
     * @return The enum numeric value on the wire for gatedFeature.
     */
    @java.lang.Override
    public int getGatedFeatureValue() {
      return instance.getGatedFeatureValue();
    }
    /**
     * <code>.com.ifit.glassos.GatedFeature gatedFeature = 1;</code>
     * @param value The gatedFeature to set.
     * @return This builder for chaining.
     */
    public Builder setGatedFeatureValue(int value) {
      copyOnWrite();
      instance.setGatedFeatureValue(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.GatedFeature gatedFeature = 1;</code>
     * @return The gatedFeature.
     */
    @java.lang.Override
    public com.ifit.glassos.featuregates.GatedFeature getGatedFeature() {
      return instance.getGatedFeature();
    }
    /**
     * <code>.com.ifit.glassos.GatedFeature gatedFeature = 1;</code>
     * @param value The enum numeric value on the wire for gatedFeature to set.
     * @return This builder for chaining.
     */
    public Builder setGatedFeature(com.ifit.glassos.featuregates.GatedFeature value) {
      copyOnWrite();
      instance.setGatedFeature(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.GatedFeature gatedFeature = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearGatedFeature() {
      copyOnWrite();
      instance.clearGatedFeature();
      return this;
    }

    /**
     * <code>bool incomplete = 2;</code>
     * @return The incomplete.
     */
    @java.lang.Override
    public boolean getIncomplete() {
      return instance.getIncomplete();
    }
    /**
     * <code>bool incomplete = 2;</code>
     * @param value The incomplete to set.
     * @return This builder for chaining.
     */
    public Builder setIncomplete(boolean value) {
      copyOnWrite();
      instance.setIncomplete(value);
      return this;
    }
    /**
     * <code>bool incomplete = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearIncomplete() {
      copyOnWrite();
      instance.clearIncomplete();
      return this;
    }

    /**
     * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.ifit.glassos.featuregates.FacetMessage> getFeatureGateFacetList() {
      return java.util.Collections.unmodifiableList(
          instance.getFeatureGateFacetList());
    }
    /**
     * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
     */
    @java.lang.Override
    public int getFeatureGateFacetCount() {
      return instance.getFeatureGateFacetCount();
    }/**
     * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.featuregates.FacetMessage getFeatureGateFacet(int index) {
      return instance.getFeatureGateFacet(index);
    }
    /**
     * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
     */
    public Builder setFeatureGateFacet(
        int index, com.ifit.glassos.featuregates.FacetMessage value) {
      copyOnWrite();
      instance.setFeatureGateFacet(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
     */
    public Builder setFeatureGateFacet(
        int index, com.ifit.glassos.featuregates.FacetMessage.Builder builderForValue) {
      copyOnWrite();
      instance.setFeatureGateFacet(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
     */
    public Builder addFeatureGateFacet(com.ifit.glassos.featuregates.FacetMessage value) {
      copyOnWrite();
      instance.addFeatureGateFacet(value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
     */
    public Builder addFeatureGateFacet(
        int index, com.ifit.glassos.featuregates.FacetMessage value) {
      copyOnWrite();
      instance.addFeatureGateFacet(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
     */
    public Builder addFeatureGateFacet(
        com.ifit.glassos.featuregates.FacetMessage.Builder builderForValue) {
      copyOnWrite();
      instance.addFeatureGateFacet(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
     */
    public Builder addFeatureGateFacet(
        int index, com.ifit.glassos.featuregates.FacetMessage.Builder builderForValue) {
      copyOnWrite();
      instance.addFeatureGateFacet(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
     */
    public Builder addAllFeatureGateFacet(
        java.lang.Iterable<? extends com.ifit.glassos.featuregates.FacetMessage> values) {
      copyOnWrite();
      instance.addAllFeatureGateFacet(values);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
     */
    public Builder clearFeatureGateFacet() {
      copyOnWrite();
      instance.clearFeatureGateFacet();
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.FacetMessage featureGateFacet = 3;</code>
     */
    public Builder removeFeatureGateFacet(int index) {
      copyOnWrite();
      instance.removeFeatureGateFacet(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:com.ifit.glassos.FeatureGateRule)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.ifit.glassos.featuregates.FeatureGateRule();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "gatedFeature_",
            "incomplete_",
            "featureGateFacet_",
            com.ifit.glassos.featuregates.FacetMessage.class,
          };
          java.lang.String info =
              "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0001\u0000\u0001\f\u0002\u0007" +
              "\u0003\u001b";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.ifit.glassos.featuregates.FeatureGateRule> parser = PARSER;
        if (parser == null) {
          synchronized (com.ifit.glassos.featuregates.FeatureGateRule.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.ifit.glassos.featuregates.FeatureGateRule>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:com.ifit.glassos.FeatureGateRule)
  private static final com.ifit.glassos.featuregates.FeatureGateRule DEFAULT_INSTANCE;
  static {
    FeatureGateRule defaultInstance = new FeatureGateRule();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      FeatureGateRule.class, defaultInstance);
  }

  public static com.ifit.glassos.featuregates.FeatureGateRule getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<FeatureGateRule> PARSER;

  public static com.google.protobuf.Parser<FeatureGateRule> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

