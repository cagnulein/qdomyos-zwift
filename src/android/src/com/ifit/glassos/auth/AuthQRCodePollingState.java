// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auth/AuthService.proto

// Protobuf Java Version: 3.25.8
package com.ifit.glassos.auth;

/**
 * Protobuf type {@code com.ifit.glassos.AuthQRCodePollingState}
 */
public  final class AuthQRCodePollingState extends
    com.google.protobuf.GeneratedMessageLite<
        AuthQRCodePollingState, AuthQRCodePollingState.Builder> implements
    // @@protoc_insertion_point(message_implements:com.ifit.glassos.AuthQRCodePollingState)
    AuthQRCodePollingStateOrBuilder {
  private AuthQRCodePollingState() {
  }
  private int stateCase_ = 0;
  private java.lang.Object state_;
  public enum StateCase {
    POLLINGIDLE(1),
    POLLINGACTIVE(2),
    POLLINGEXPIRED(3),
    POLLINGUSERAUTHED(4),
    POLLINGERROR(5),
    POLLINGAUTHERROR(6),
    STATE_NOT_SET(0);
    private final int value;
    private StateCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static StateCase valueOf(int value) {
      return forNumber(value);
    }

    public static StateCase forNumber(int value) {
      switch (value) {
        case 1: return POLLINGIDLE;
        case 2: return POLLINGACTIVE;
        case 3: return POLLINGEXPIRED;
        case 4: return POLLINGUSERAUTHED;
        case 5: return POLLINGERROR;
        case 6: return POLLINGAUTHERROR;
        case 0: return STATE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public StateCase
  getStateCase() {
    return StateCase.forNumber(
        stateCase_);
  }

  private void clearState() {
    stateCase_ = 0;
    state_ = null;
  }

  public static final int POLLINGIDLE_FIELD_NUMBER = 1;
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_IDLE pollingIdle = 1;</code>
   */
  @java.lang.Override
  public boolean hasPollingIdle() {
    return stateCase_ == 1;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_IDLE pollingIdle = 1;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_IDLE getPollingIdle() {
    if (stateCase_ == 1) {
       return (com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_IDLE) state_;
    }
    return com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_IDLE.getDefaultInstance();
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_IDLE pollingIdle = 1;</code>
   */
  private void setPollingIdle(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_IDLE value) {
    value.getClass();
  state_ = value;
    stateCase_ = 1;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_IDLE pollingIdle = 1;</code>
   */
  private void mergePollingIdle(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_IDLE value) {
    value.getClass();
  if (stateCase_ == 1 &&
        state_ != com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_IDLE.getDefaultInstance()) {
      state_ = com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_IDLE.newBuilder((com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_IDLE) state_)
          .mergeFrom(value).buildPartial();
    } else {
      state_ = value;
    }
    stateCase_ = 1;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_IDLE pollingIdle = 1;</code>
   */
  private void clearPollingIdle() {
    if (stateCase_ == 1) {
      stateCase_ = 0;
      state_ = null;
    }
  }

  public static final int POLLINGACTIVE_FIELD_NUMBER = 2;
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ACTIVE pollingActive = 2;</code>
   */
  @java.lang.Override
  public boolean hasPollingActive() {
    return stateCase_ == 2;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ACTIVE pollingActive = 2;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ACTIVE getPollingActive() {
    if (stateCase_ == 2) {
       return (com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ACTIVE) state_;
    }
    return com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ACTIVE.getDefaultInstance();
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ACTIVE pollingActive = 2;</code>
   */
  private void setPollingActive(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ACTIVE value) {
    value.getClass();
  state_ = value;
    stateCase_ = 2;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ACTIVE pollingActive = 2;</code>
   */
  private void mergePollingActive(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ACTIVE value) {
    value.getClass();
  if (stateCase_ == 2 &&
        state_ != com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ACTIVE.getDefaultInstance()) {
      state_ = com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ACTIVE.newBuilder((com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ACTIVE) state_)
          .mergeFrom(value).buildPartial();
    } else {
      state_ = value;
    }
    stateCase_ = 2;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ACTIVE pollingActive = 2;</code>
   */
  private void clearPollingActive() {
    if (stateCase_ == 2) {
      stateCase_ = 0;
      state_ = null;
    }
  }

  public static final int POLLINGEXPIRED_FIELD_NUMBER = 3;
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_EXPIRED pollingExpired = 3;</code>
   */
  @java.lang.Override
  public boolean hasPollingExpired() {
    return stateCase_ == 3;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_EXPIRED pollingExpired = 3;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_EXPIRED getPollingExpired() {
    if (stateCase_ == 3) {
       return (com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_EXPIRED) state_;
    }
    return com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_EXPIRED.getDefaultInstance();
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_EXPIRED pollingExpired = 3;</code>
   */
  private void setPollingExpired(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_EXPIRED value) {
    value.getClass();
  state_ = value;
    stateCase_ = 3;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_EXPIRED pollingExpired = 3;</code>
   */
  private void mergePollingExpired(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_EXPIRED value) {
    value.getClass();
  if (stateCase_ == 3 &&
        state_ != com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_EXPIRED.getDefaultInstance()) {
      state_ = com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_EXPIRED.newBuilder((com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_EXPIRED) state_)
          .mergeFrom(value).buildPartial();
    } else {
      state_ = value;
    }
    stateCase_ = 3;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_EXPIRED pollingExpired = 3;</code>
   */
  private void clearPollingExpired() {
    if (stateCase_ == 3) {
      stateCase_ = 0;
      state_ = null;
    }
  }

  public static final int POLLINGUSERAUTHED_FIELD_NUMBER = 4;
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_USER_AUTHED pollingUserAuthed = 4;</code>
   */
  @java.lang.Override
  public boolean hasPollingUserAuthed() {
    return stateCase_ == 4;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_USER_AUTHED pollingUserAuthed = 4;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_USER_AUTHED getPollingUserAuthed() {
    if (stateCase_ == 4) {
       return (com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_USER_AUTHED) state_;
    }
    return com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_USER_AUTHED.getDefaultInstance();
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_USER_AUTHED pollingUserAuthed = 4;</code>
   */
  private void setPollingUserAuthed(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_USER_AUTHED value) {
    value.getClass();
  state_ = value;
    stateCase_ = 4;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_USER_AUTHED pollingUserAuthed = 4;</code>
   */
  private void mergePollingUserAuthed(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_USER_AUTHED value) {
    value.getClass();
  if (stateCase_ == 4 &&
        state_ != com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_USER_AUTHED.getDefaultInstance()) {
      state_ = com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_USER_AUTHED.newBuilder((com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_USER_AUTHED) state_)
          .mergeFrom(value).buildPartial();
    } else {
      state_ = value;
    }
    stateCase_ = 4;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_USER_AUTHED pollingUserAuthed = 4;</code>
   */
  private void clearPollingUserAuthed() {
    if (stateCase_ == 4) {
      stateCase_ = 0;
      state_ = null;
    }
  }

  public static final int POLLINGERROR_FIELD_NUMBER = 5;
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ERROR pollingError = 5;</code>
   */
  @java.lang.Override
  public boolean hasPollingError() {
    return stateCase_ == 5;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ERROR pollingError = 5;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ERROR getPollingError() {
    if (stateCase_ == 5) {
       return (com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ERROR) state_;
    }
    return com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ERROR.getDefaultInstance();
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ERROR pollingError = 5;</code>
   */
  private void setPollingError(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ERROR value) {
    value.getClass();
  state_ = value;
    stateCase_ = 5;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ERROR pollingError = 5;</code>
   */
  private void mergePollingError(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ERROR value) {
    value.getClass();
  if (stateCase_ == 5 &&
        state_ != com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ERROR.getDefaultInstance()) {
      state_ = com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ERROR.newBuilder((com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ERROR) state_)
          .mergeFrom(value).buildPartial();
    } else {
      state_ = value;
    }
    stateCase_ = 5;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ERROR pollingError = 5;</code>
   */
  private void clearPollingError() {
    if (stateCase_ == 5) {
      stateCase_ = 0;
      state_ = null;
    }
  }

  public static final int POLLINGAUTHERROR_FIELD_NUMBER = 6;
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_AUTH_ERROR pollingAuthError = 6;</code>
   */
  @java.lang.Override
  public boolean hasPollingAuthError() {
    return stateCase_ == 6;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_AUTH_ERROR pollingAuthError = 6;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_AUTH_ERROR getPollingAuthError() {
    if (stateCase_ == 6) {
       return (com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_AUTH_ERROR) state_;
    }
    return com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_AUTH_ERROR.getDefaultInstance();
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_AUTH_ERROR pollingAuthError = 6;</code>
   */
  private void setPollingAuthError(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_AUTH_ERROR value) {
    value.getClass();
  state_ = value;
    stateCase_ = 6;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_AUTH_ERROR pollingAuthError = 6;</code>
   */
  private void mergePollingAuthError(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_AUTH_ERROR value) {
    value.getClass();
  if (stateCase_ == 6 &&
        state_ != com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_AUTH_ERROR.getDefaultInstance()) {
      state_ = com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_AUTH_ERROR.newBuilder((com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_AUTH_ERROR) state_)
          .mergeFrom(value).buildPartial();
    } else {
      state_ = value;
    }
    stateCase_ = 6;
  }
  /**
   * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_AUTH_ERROR pollingAuthError = 6;</code>
   */
  private void clearPollingAuthError() {
    if (stateCase_ == 6) {
      stateCase_ = 0;
      state_ = null;
    }
  }

  public static com.ifit.glassos.auth.AuthQRCodePollingState parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.auth.AuthQRCodePollingState parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.auth.AuthQRCodePollingState parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.auth.AuthQRCodePollingState parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.auth.AuthQRCodePollingState parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.auth.AuthQRCodePollingState parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.auth.AuthQRCodePollingState parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.ifit.glassos.auth.AuthQRCodePollingState parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.ifit.glassos.auth.AuthQRCodePollingState parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.ifit.glassos.auth.AuthQRCodePollingState parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.ifit.glassos.auth.AuthQRCodePollingState parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.ifit.glassos.auth.AuthQRCodePollingState parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.ifit.glassos.auth.AuthQRCodePollingState prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code com.ifit.glassos.AuthQRCodePollingState}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.ifit.glassos.auth.AuthQRCodePollingState, Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ifit.glassos.AuthQRCodePollingState)
      com.ifit.glassos.auth.AuthQRCodePollingStateOrBuilder {
    // Construct using com.ifit.glassos.auth.AuthQRCodePollingState.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public StateCase
        getStateCase() {
      return instance.getStateCase();
    }

    public Builder clearState() {
      copyOnWrite();
      instance.clearState();
      return this;
    }


    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_IDLE pollingIdle = 1;</code>
     */
    @java.lang.Override
    public boolean hasPollingIdle() {
      return instance.hasPollingIdle();
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_IDLE pollingIdle = 1;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_IDLE getPollingIdle() {
      return instance.getPollingIdle();
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_IDLE pollingIdle = 1;</code>
     */
    public Builder setPollingIdle(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_IDLE value) {
      copyOnWrite();
      instance.setPollingIdle(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_IDLE pollingIdle = 1;</code>
     */
    public Builder setPollingIdle(
        com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_IDLE.Builder builderForValue) {
      copyOnWrite();
      instance.setPollingIdle(builderForValue.build());
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_IDLE pollingIdle = 1;</code>
     */
    public Builder mergePollingIdle(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_IDLE value) {
      copyOnWrite();
      instance.mergePollingIdle(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_IDLE pollingIdle = 1;</code>
     */
    public Builder clearPollingIdle() {
      copyOnWrite();
      instance.clearPollingIdle();
      return this;
    }

    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ACTIVE pollingActive = 2;</code>
     */
    @java.lang.Override
    public boolean hasPollingActive() {
      return instance.hasPollingActive();
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ACTIVE pollingActive = 2;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ACTIVE getPollingActive() {
      return instance.getPollingActive();
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ACTIVE pollingActive = 2;</code>
     */
    public Builder setPollingActive(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ACTIVE value) {
      copyOnWrite();
      instance.setPollingActive(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ACTIVE pollingActive = 2;</code>
     */
    public Builder setPollingActive(
        com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ACTIVE.Builder builderForValue) {
      copyOnWrite();
      instance.setPollingActive(builderForValue.build());
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ACTIVE pollingActive = 2;</code>
     */
    public Builder mergePollingActive(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ACTIVE value) {
      copyOnWrite();
      instance.mergePollingActive(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ACTIVE pollingActive = 2;</code>
     */
    public Builder clearPollingActive() {
      copyOnWrite();
      instance.clearPollingActive();
      return this;
    }

    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_EXPIRED pollingExpired = 3;</code>
     */
    @java.lang.Override
    public boolean hasPollingExpired() {
      return instance.hasPollingExpired();
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_EXPIRED pollingExpired = 3;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_EXPIRED getPollingExpired() {
      return instance.getPollingExpired();
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_EXPIRED pollingExpired = 3;</code>
     */
    public Builder setPollingExpired(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_EXPIRED value) {
      copyOnWrite();
      instance.setPollingExpired(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_EXPIRED pollingExpired = 3;</code>
     */
    public Builder setPollingExpired(
        com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_EXPIRED.Builder builderForValue) {
      copyOnWrite();
      instance.setPollingExpired(builderForValue.build());
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_EXPIRED pollingExpired = 3;</code>
     */
    public Builder mergePollingExpired(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_EXPIRED value) {
      copyOnWrite();
      instance.mergePollingExpired(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_EXPIRED pollingExpired = 3;</code>
     */
    public Builder clearPollingExpired() {
      copyOnWrite();
      instance.clearPollingExpired();
      return this;
    }

    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_USER_AUTHED pollingUserAuthed = 4;</code>
     */
    @java.lang.Override
    public boolean hasPollingUserAuthed() {
      return instance.hasPollingUserAuthed();
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_USER_AUTHED pollingUserAuthed = 4;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_USER_AUTHED getPollingUserAuthed() {
      return instance.getPollingUserAuthed();
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_USER_AUTHED pollingUserAuthed = 4;</code>
     */
    public Builder setPollingUserAuthed(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_USER_AUTHED value) {
      copyOnWrite();
      instance.setPollingUserAuthed(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_USER_AUTHED pollingUserAuthed = 4;</code>
     */
    public Builder setPollingUserAuthed(
        com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_USER_AUTHED.Builder builderForValue) {
      copyOnWrite();
      instance.setPollingUserAuthed(builderForValue.build());
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_USER_AUTHED pollingUserAuthed = 4;</code>
     */
    public Builder mergePollingUserAuthed(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_USER_AUTHED value) {
      copyOnWrite();
      instance.mergePollingUserAuthed(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_USER_AUTHED pollingUserAuthed = 4;</code>
     */
    public Builder clearPollingUserAuthed() {
      copyOnWrite();
      instance.clearPollingUserAuthed();
      return this;
    }

    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ERROR pollingError = 5;</code>
     */
    @java.lang.Override
    public boolean hasPollingError() {
      return instance.hasPollingError();
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ERROR pollingError = 5;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ERROR getPollingError() {
      return instance.getPollingError();
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ERROR pollingError = 5;</code>
     */
    public Builder setPollingError(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ERROR value) {
      copyOnWrite();
      instance.setPollingError(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ERROR pollingError = 5;</code>
     */
    public Builder setPollingError(
        com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ERROR.Builder builderForValue) {
      copyOnWrite();
      instance.setPollingError(builderForValue.build());
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ERROR pollingError = 5;</code>
     */
    public Builder mergePollingError(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ERROR value) {
      copyOnWrite();
      instance.mergePollingError(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_ERROR pollingError = 5;</code>
     */
    public Builder clearPollingError() {
      copyOnWrite();
      instance.clearPollingError();
      return this;
    }

    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_AUTH_ERROR pollingAuthError = 6;</code>
     */
    @java.lang.Override
    public boolean hasPollingAuthError() {
      return instance.hasPollingAuthError();
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_AUTH_ERROR pollingAuthError = 6;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_AUTH_ERROR getPollingAuthError() {
      return instance.getPollingAuthError();
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_AUTH_ERROR pollingAuthError = 6;</code>
     */
    public Builder setPollingAuthError(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_AUTH_ERROR value) {
      copyOnWrite();
      instance.setPollingAuthError(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_AUTH_ERROR pollingAuthError = 6;</code>
     */
    public Builder setPollingAuthError(
        com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_AUTH_ERROR.Builder builderForValue) {
      copyOnWrite();
      instance.setPollingAuthError(builderForValue.build());
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_AUTH_ERROR pollingAuthError = 6;</code>
     */
    public Builder mergePollingAuthError(com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_AUTH_ERROR value) {
      copyOnWrite();
      instance.mergePollingAuthError(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.AUTH_QR_CODE_POLLING_AUTH_ERROR pollingAuthError = 6;</code>
     */
    public Builder clearPollingAuthError() {
      copyOnWrite();
      instance.clearPollingAuthError();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:com.ifit.glassos.AuthQRCodePollingState)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.ifit.glassos.auth.AuthQRCodePollingState();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "state_",
            "stateCase_",
            com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_IDLE.class,
            com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ACTIVE.class,
            com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_EXPIRED.class,
            com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_USER_AUTHED.class,
            com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_ERROR.class,
            com.ifit.glassos.auth.AUTH_QR_CODE_POLLING_AUTH_ERROR.class,
          };
          java.lang.String info =
              "\u0000\u0006\u0001\u0000\u0001\u0006\u0006\u0000\u0000\u0000\u0001<\u0000\u0002<" +
              "\u0000\u0003<\u0000\u0004<\u0000\u0005<\u0000\u0006<\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.ifit.glassos.auth.AuthQRCodePollingState> parser = PARSER;
        if (parser == null) {
          synchronized (com.ifit.glassos.auth.AuthQRCodePollingState.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.ifit.glassos.auth.AuthQRCodePollingState>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:com.ifit.glassos.AuthQRCodePollingState)
  private static final com.ifit.glassos.auth.AuthQRCodePollingState DEFAULT_INSTANCE;
  static {
    AuthQRCodePollingState defaultInstance = new AuthQRCodePollingState();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      AuthQRCodePollingState.class, defaultInstance);
  }

  public static com.ifit.glassos.auth.AuthQRCodePollingState getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<AuthQRCodePollingState> PARSER;

  public static com.google.protobuf.Parser<AuthQRCodePollingState> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

