// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appnavigation/ForegroundClasses.proto

// Protobuf Java Version: 3.25.3
package com.ifit.glassos.appnavigation;

/**
 * Protobuf type {@code com.ifit.glassos.ForegroundClasses}
 */
public  final class ForegroundClasses extends
    com.google.protobuf.GeneratedMessageLite<
        ForegroundClasses, ForegroundClasses.Builder> implements
    // @@protoc_insertion_point(message_implements:com.ifit.glassos.ForegroundClasses)
    ForegroundClassesOrBuilder {
  private ForegroundClasses() {
    foregroundHistory_ = emptyProtobufList();
  }
  private int bitField0_;
  public static final int CURRENTLYFOREGROUNDED_FIELD_NUMBER = 1;
  private com.ifit.glassos.appnavigation.ForegroundClass currentlyForegrounded_;
  /**
   * <code>.com.ifit.glassos.ForegroundClass currentlyForegrounded = 1;</code>
   */
  @java.lang.Override
  public boolean hasCurrentlyForegrounded() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.com.ifit.glassos.ForegroundClass currentlyForegrounded = 1;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.appnavigation.ForegroundClass getCurrentlyForegrounded() {
    return currentlyForegrounded_ == null ? com.ifit.glassos.appnavigation.ForegroundClass.getDefaultInstance() : currentlyForegrounded_;
  }
  /**
   * <code>.com.ifit.glassos.ForegroundClass currentlyForegrounded = 1;</code>
   */
  private void setCurrentlyForegrounded(com.ifit.glassos.appnavigation.ForegroundClass value) {
    value.getClass();
  currentlyForegrounded_ = value;
    bitField0_ |= 0x00000001;
    }
  /**
   * <code>.com.ifit.glassos.ForegroundClass currentlyForegrounded = 1;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeCurrentlyForegrounded(com.ifit.glassos.appnavigation.ForegroundClass value) {
    value.getClass();
  if (currentlyForegrounded_ != null &&
        currentlyForegrounded_ != com.ifit.glassos.appnavigation.ForegroundClass.getDefaultInstance()) {
      currentlyForegrounded_ =
        com.ifit.glassos.appnavigation.ForegroundClass.newBuilder(currentlyForegrounded_).mergeFrom(value).buildPartial();
    } else {
      currentlyForegrounded_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   * <code>.com.ifit.glassos.ForegroundClass currentlyForegrounded = 1;</code>
   */
  private void clearCurrentlyForegrounded() {  currentlyForegrounded_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int FOREGROUNDHISTORY_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.appnavigation.ForegroundClass> foregroundHistory_;
  /**
   * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.ifit.glassos.appnavigation.ForegroundClass> getForegroundHistoryList() {
    return foregroundHistory_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
   */
  public java.util.List<? extends com.ifit.glassos.appnavigation.ForegroundClassOrBuilder> 
      getForegroundHistoryOrBuilderList() {
    return foregroundHistory_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
   */
  @java.lang.Override
  public int getForegroundHistoryCount() {
    return foregroundHistory_.size();
  }
  /**
   * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.appnavigation.ForegroundClass getForegroundHistory(int index) {
    return foregroundHistory_.get(index);
  }
  /**
   * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
   */
  public com.ifit.glassos.appnavigation.ForegroundClassOrBuilder getForegroundHistoryOrBuilder(
      int index) {
    return foregroundHistory_.get(index);
  }
  private void ensureForegroundHistoryIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.appnavigation.ForegroundClass> tmp = foregroundHistory_;
    if (!tmp.isModifiable()) {
      foregroundHistory_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
   */
  private void setForegroundHistory(
      int index, com.ifit.glassos.appnavigation.ForegroundClass value) {
    value.getClass();
  ensureForegroundHistoryIsMutable();
    foregroundHistory_.set(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
   */
  private void addForegroundHistory(com.ifit.glassos.appnavigation.ForegroundClass value) {
    value.getClass();
  ensureForegroundHistoryIsMutable();
    foregroundHistory_.add(value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
   */
  private void addForegroundHistory(
      int index, com.ifit.glassos.appnavigation.ForegroundClass value) {
    value.getClass();
  ensureForegroundHistoryIsMutable();
    foregroundHistory_.add(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
   */
  private void addAllForegroundHistory(
      java.lang.Iterable<? extends com.ifit.glassos.appnavigation.ForegroundClass> values) {
    ensureForegroundHistoryIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, foregroundHistory_);
  }
  /**
   * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
   */
  private void clearForegroundHistory() {
    foregroundHistory_ = emptyProtobufList();
  }
  /**
   * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
   */
  private void removeForegroundHistory(int index) {
    ensureForegroundHistoryIsMutable();
    foregroundHistory_.remove(index);
  }

  public static com.ifit.glassos.appnavigation.ForegroundClasses parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.appnavigation.ForegroundClasses parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.appnavigation.ForegroundClasses parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.appnavigation.ForegroundClasses parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.appnavigation.ForegroundClasses parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.appnavigation.ForegroundClasses parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.appnavigation.ForegroundClasses parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.ifit.glassos.appnavigation.ForegroundClasses parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.ifit.glassos.appnavigation.ForegroundClasses parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.ifit.glassos.appnavigation.ForegroundClasses parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.ifit.glassos.appnavigation.ForegroundClasses parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.ifit.glassos.appnavigation.ForegroundClasses parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.ifit.glassos.appnavigation.ForegroundClasses prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code com.ifit.glassos.ForegroundClasses}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.ifit.glassos.appnavigation.ForegroundClasses, Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ifit.glassos.ForegroundClasses)
      com.ifit.glassos.appnavigation.ForegroundClassesOrBuilder {
    // Construct using com.ifit.glassos.appnavigation.ForegroundClasses.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>.com.ifit.glassos.ForegroundClass currentlyForegrounded = 1;</code>
     */
    @java.lang.Override
    public boolean hasCurrentlyForegrounded() {
      return instance.hasCurrentlyForegrounded();
    }
    /**
     * <code>.com.ifit.glassos.ForegroundClass currentlyForegrounded = 1;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.appnavigation.ForegroundClass getCurrentlyForegrounded() {
      return instance.getCurrentlyForegrounded();
    }
    /**
     * <code>.com.ifit.glassos.ForegroundClass currentlyForegrounded = 1;</code>
     */
    public Builder setCurrentlyForegrounded(com.ifit.glassos.appnavigation.ForegroundClass value) {
      copyOnWrite();
      instance.setCurrentlyForegrounded(value);
      return this;
      }
    /**
     * <code>.com.ifit.glassos.ForegroundClass currentlyForegrounded = 1;</code>
     */
    public Builder setCurrentlyForegrounded(
        com.ifit.glassos.appnavigation.ForegroundClass.Builder builderForValue) {
      copyOnWrite();
      instance.setCurrentlyForegrounded(builderForValue.build());
      return this;
    }
    /**
     * <code>.com.ifit.glassos.ForegroundClass currentlyForegrounded = 1;</code>
     */
    public Builder mergeCurrentlyForegrounded(com.ifit.glassos.appnavigation.ForegroundClass value) {
      copyOnWrite();
      instance.mergeCurrentlyForegrounded(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.ForegroundClass currentlyForegrounded = 1;</code>
     */
    public Builder clearCurrentlyForegrounded() {  copyOnWrite();
      instance.clearCurrentlyForegrounded();
      return this;
    }

    /**
     * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.ifit.glassos.appnavigation.ForegroundClass> getForegroundHistoryList() {
      return java.util.Collections.unmodifiableList(
          instance.getForegroundHistoryList());
    }
    /**
     * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
     */
    @java.lang.Override
    public int getForegroundHistoryCount() {
      return instance.getForegroundHistoryCount();
    }/**
     * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.appnavigation.ForegroundClass getForegroundHistory(int index) {
      return instance.getForegroundHistory(index);
    }
    /**
     * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
     */
    public Builder setForegroundHistory(
        int index, com.ifit.glassos.appnavigation.ForegroundClass value) {
      copyOnWrite();
      instance.setForegroundHistory(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
     */
    public Builder setForegroundHistory(
        int index, com.ifit.glassos.appnavigation.ForegroundClass.Builder builderForValue) {
      copyOnWrite();
      instance.setForegroundHistory(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
     */
    public Builder addForegroundHistory(com.ifit.glassos.appnavigation.ForegroundClass value) {
      copyOnWrite();
      instance.addForegroundHistory(value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
     */
    public Builder addForegroundHistory(
        int index, com.ifit.glassos.appnavigation.ForegroundClass value) {
      copyOnWrite();
      instance.addForegroundHistory(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
     */
    public Builder addForegroundHistory(
        com.ifit.glassos.appnavigation.ForegroundClass.Builder builderForValue) {
      copyOnWrite();
      instance.addForegroundHistory(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
     */
    public Builder addForegroundHistory(
        int index, com.ifit.glassos.appnavigation.ForegroundClass.Builder builderForValue) {
      copyOnWrite();
      instance.addForegroundHistory(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
     */
    public Builder addAllForegroundHistory(
        java.lang.Iterable<? extends com.ifit.glassos.appnavigation.ForegroundClass> values) {
      copyOnWrite();
      instance.addAllForegroundHistory(values);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
     */
    public Builder clearForegroundHistory() {
      copyOnWrite();
      instance.clearForegroundHistory();
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ForegroundClass foregroundHistory = 2;</code>
     */
    public Builder removeForegroundHistory(int index) {
      copyOnWrite();
      instance.removeForegroundHistory(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:com.ifit.glassos.ForegroundClasses)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.ifit.glassos.appnavigation.ForegroundClasses();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "currentlyForegrounded_",
            "foregroundHistory_",
            com.ifit.glassos.appnavigation.ForegroundClass.class,
          };
          java.lang.String info =
              "\u0000\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0001\u0000\u0001\u1009\u0000\u0002" +
              "\u001b";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.ifit.glassos.appnavigation.ForegroundClasses> parser = PARSER;
        if (parser == null) {
          synchronized (com.ifit.glassos.appnavigation.ForegroundClasses.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.ifit.glassos.appnavigation.ForegroundClasses>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:com.ifit.glassos.ForegroundClasses)
  private static final com.ifit.glassos.appnavigation.ForegroundClasses DEFAULT_INSTANCE;
  static {
    ForegroundClasses defaultInstance = new ForegroundClasses();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ForegroundClasses.class, defaultInstance);
  }

  public static com.ifit.glassos.appnavigation.ForegroundClasses getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ForegroundClasses> PARSER;

  public static com.google.protobuf.Parser<ForegroundClasses> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

