// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: workout/SpeedService.proto

// Protobuf Java Version: 3.25.3
package com.ifit.glassos.workout;

/**
 * Protobuf type {@code com.ifit.glassos.SpeedRequest}
 */
public  final class SpeedRequest extends
    com.google.protobuf.GeneratedMessageLite<
        SpeedRequest, SpeedRequest.Builder> implements
    // @@protoc_insertion_point(message_implements:com.ifit.glassos.SpeedRequest)
    SpeedRequestOrBuilder {
  private SpeedRequest() {
  }
  public static final int KPH_FIELD_NUMBER = 1;
  private double kph_;
  /**
   * <code>double kph = 1;</code>
   * @return The kph.
   */
  @java.lang.Override
  public double getKph() {
    return kph_;
  }
  /**
   * <code>double kph = 1;</code>
   * @param value The kph to set.
   */
  private void setKph(double value) {
    
    kph_ = value;
  }
  /**
   * <code>double kph = 1;</code>
   */
  private void clearKph() {

    kph_ = 0D;
  }

  public static com.ifit.glassos.workout.SpeedRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.workout.SpeedRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.workout.SpeedRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.workout.SpeedRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.workout.SpeedRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.workout.SpeedRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.workout.SpeedRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.ifit.glassos.workout.SpeedRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.ifit.glassos.workout.SpeedRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.ifit.glassos.workout.SpeedRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.ifit.glassos.workout.SpeedRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.ifit.glassos.workout.SpeedRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.ifit.glassos.workout.SpeedRequest prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code com.ifit.glassos.SpeedRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.ifit.glassos.workout.SpeedRequest, Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ifit.glassos.SpeedRequest)
      com.ifit.glassos.workout.SpeedRequestOrBuilder {
    // Construct using com.ifit.glassos.workout.SpeedRequest.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>double kph = 1;</code>
     * @return The kph.
     */
    @java.lang.Override
    public double getKph() {
      return instance.getKph();
    }
    /**
     * <code>double kph = 1;</code>
     * @param value The kph to set.
     * @return This builder for chaining.
     */
    public Builder setKph(double value) {
      copyOnWrite();
      instance.setKph(value);
      return this;
    }
    /**
     * <code>double kph = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearKph() {
      copyOnWrite();
      instance.clearKph();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:com.ifit.glassos.SpeedRequest)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.ifit.glassos.workout.SpeedRequest();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "kph_",
          };
          java.lang.String info =
              "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.ifit.glassos.workout.SpeedRequest> parser = PARSER;
        if (parser == null) {
          synchronized (com.ifit.glassos.workout.SpeedRequest.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.ifit.glassos.workout.SpeedRequest>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:com.ifit.glassos.SpeedRequest)
  private static final com.ifit.glassos.workout.SpeedRequest DEFAULT_INSTANCE;
  static {
    SpeedRequest defaultInstance = new SpeedRequest();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      SpeedRequest.class, defaultInstance);
  }

  public static com.ifit.glassos.workout.SpeedRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<SpeedRequest> PARSER;

  public static com.google.protobuf.Parser<SpeedRequest> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

