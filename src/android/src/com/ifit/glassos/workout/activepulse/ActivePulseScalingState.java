// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: workout/activepulse/ActivePulseScalingState.proto

// Protobuf Java Version: 3.25.3
package com.ifit.glassos.workout.activepulse;

/**
 * Protobuf enum {@code com.ifit.glassos.ActivePulseScalingState}
 */
public enum ActivePulseScalingState
    implements com.google.protobuf.Internal.EnumLite {
  /**
   * <code>WARMING_UP = 0;</code>
   */
  WARMING_UP(0),
  /**
   * <code>SCALING_DOWN = 1;</code>
   */
  SCALING_DOWN(1),
  /**
   * <code>SCALING_UP = 2;</code>
   */
  SCALING_UP(2),
  /**
   * <code>ON_TARGET = 3;</code>
   */
  ON_TARGET(3),
  /**
   * <code>TRENDING_DOWN = 4;</code>
   */
  TRENDING_DOWN(4),
  /**
   * <code>TRENDING_UP = 5;</code>
   */
  TRENDING_UP(5),
  /**
   * <code>MONITORING = 6;</code>
   */
  MONITORING(6),
  /**
   * <code>DISABLED = 7;</code>
   */
  DISABLED(7),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>WARMING_UP = 0;</code>
   */
  public static final int WARMING_UP_VALUE = 0;
  /**
   * <code>SCALING_DOWN = 1;</code>
   */
  public static final int SCALING_DOWN_VALUE = 1;
  /**
   * <code>SCALING_UP = 2;</code>
   */
  public static final int SCALING_UP_VALUE = 2;
  /**
   * <code>ON_TARGET = 3;</code>
   */
  public static final int ON_TARGET_VALUE = 3;
  /**
   * <code>TRENDING_DOWN = 4;</code>
   */
  public static final int TRENDING_DOWN_VALUE = 4;
  /**
   * <code>TRENDING_UP = 5;</code>
   */
  public static final int TRENDING_UP_VALUE = 5;
  /**
   * <code>MONITORING = 6;</code>
   */
  public static final int MONITORING_VALUE = 6;
  /**
   * <code>DISABLED = 7;</code>
   */
  public static final int DISABLED_VALUE = 7;


  @java.lang.Override
  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The number of the enum to look for.
   * @return The enum associated with the given number.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ActivePulseScalingState valueOf(int value) {
    return forNumber(value);
  }

  public static ActivePulseScalingState forNumber(int value) {
    switch (value) {
      case 0: return WARMING_UP;
      case 1: return SCALING_DOWN;
      case 2: return SCALING_UP;
      case 3: return ON_TARGET;
      case 4: return TRENDING_DOWN;
      case 5: return TRENDING_UP;
      case 6: return MONITORING;
      case 7: return DISABLED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ActivePulseScalingState>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ActivePulseScalingState> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ActivePulseScalingState>() {
          @java.lang.Override
          public ActivePulseScalingState findValueByNumber(int number) {
            return ActivePulseScalingState.forNumber(number);
          }
        };

  public static com.google.protobuf.Internal.EnumVerifier 
      internalGetVerifier() {
    return ActivePulseScalingStateVerifier.INSTANCE;
  }

  private static final class ActivePulseScalingStateVerifier implements 
       com.google.protobuf.Internal.EnumVerifier { 
          static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ActivePulseScalingStateVerifier();
          @java.lang.Override
          public boolean isInRange(int number) {
            return ActivePulseScalingState.forNumber(number) != null;
          }
        };

  private final int value;

  private ActivePulseScalingState(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.ifit.glassos.ActivePulseScalingState)
}

