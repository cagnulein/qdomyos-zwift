// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: workout/data/ControlType.proto

// Protobuf Java Version: 3.25.3
package com.ifit.glassos.workout.data;

/**
 * Protobuf enum {@code com.ifit.glassos.ControlType}
 */
public enum ControlType
    implements com.google.protobuf.Internal.EnumLite {
  /**
   * <code>CONTROL_TYPE_UNKNOWN = 0;</code>
   */
  CONTROL_TYPE_UNKNOWN(0),
  /**
   * <code>CONTROL_TYPE_INCLINE = 1;</code>
   */
  CONTROL_TYPE_INCLINE(1),
  /**
   * <code>CONTROL_TYPE_MPS = 2;</code>
   */
  CONTROL_TYPE_MPS(2),
  /**
   * <code>CONTROL_TYPE_RESISTANCE = 3;</code>
   */
  CONTROL_TYPE_RESISTANCE(3),
  /**
   * <code>CONTROL_TYPE_GEAR = 4;</code>
   */
  CONTROL_TYPE_GEAR(4),
  /**
   * <code>CONTROL_TYPE_AMPLITUDE = 5;</code>
   */
  CONTROL_TYPE_AMPLITUDE(5),
  /**
   * <code>CONTROL_TYPE_CALORIES = 6;</code>
   */
  CONTROL_TYPE_CALORIES(6),
  /**
   * <code>CONTROL_TYPE_FREQUENCY = 7;</code>
   */
  CONTROL_TYPE_FREQUENCY(7),
  /**
   * <code>CONTROL_TYPE_RELATIVERESISTANCE = 8;</code>
   */
  CONTROL_TYPE_RELATIVERESISTANCE(8),
  /**
   * <code>CONTROL_TYPE_RPM = 9;</code>
   */
  CONTROL_TYPE_RPM(9),
  /**
   * <code>CONTROL_TYPE_SPM = 10;</code>
   */
  CONTROL_TYPE_SPM(10),
  /**
   * <code>CONTROL_TYPE_WATTS = 11;</code>
   */
  CONTROL_TYPE_WATTS(11),
  /**
   * <code>CONTROL_TYPE_ZONE = 12;</code>
   */
  CONTROL_TYPE_ZONE(12),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>CONTROL_TYPE_UNKNOWN = 0;</code>
   */
  public static final int CONTROL_TYPE_UNKNOWN_VALUE = 0;
  /**
   * <code>CONTROL_TYPE_INCLINE = 1;</code>
   */
  public static final int CONTROL_TYPE_INCLINE_VALUE = 1;
  /**
   * <code>CONTROL_TYPE_MPS = 2;</code>
   */
  public static final int CONTROL_TYPE_MPS_VALUE = 2;
  /**
   * <code>CONTROL_TYPE_RESISTANCE = 3;</code>
   */
  public static final int CONTROL_TYPE_RESISTANCE_VALUE = 3;
  /**
   * <code>CONTROL_TYPE_GEAR = 4;</code>
   */
  public static final int CONTROL_TYPE_GEAR_VALUE = 4;
  /**
   * <code>CONTROL_TYPE_AMPLITUDE = 5;</code>
   */
  public static final int CONTROL_TYPE_AMPLITUDE_VALUE = 5;
  /**
   * <code>CONTROL_TYPE_CALORIES = 6;</code>
   */
  public static final int CONTROL_TYPE_CALORIES_VALUE = 6;
  /**
   * <code>CONTROL_TYPE_FREQUENCY = 7;</code>
   */
  public static final int CONTROL_TYPE_FREQUENCY_VALUE = 7;
  /**
   * <code>CONTROL_TYPE_RELATIVERESISTANCE = 8;</code>
   */
  public static final int CONTROL_TYPE_RELATIVERESISTANCE_VALUE = 8;
  /**
   * <code>CONTROL_TYPE_RPM = 9;</code>
   */
  public static final int CONTROL_TYPE_RPM_VALUE = 9;
  /**
   * <code>CONTROL_TYPE_SPM = 10;</code>
   */
  public static final int CONTROL_TYPE_SPM_VALUE = 10;
  /**
   * <code>CONTROL_TYPE_WATTS = 11;</code>
   */
  public static final int CONTROL_TYPE_WATTS_VALUE = 11;
  /**
   * <code>CONTROL_TYPE_ZONE = 12;</code>
   */
  public static final int CONTROL_TYPE_ZONE_VALUE = 12;


  @java.lang.Override
  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The number of the enum to look for.
   * @return The enum associated with the given number.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ControlType valueOf(int value) {
    return forNumber(value);
  }

  public static ControlType forNumber(int value) {
    switch (value) {
      case 0: return CONTROL_TYPE_UNKNOWN;
      case 1: return CONTROL_TYPE_INCLINE;
      case 2: return CONTROL_TYPE_MPS;
      case 3: return CONTROL_TYPE_RESISTANCE;
      case 4: return CONTROL_TYPE_GEAR;
      case 5: return CONTROL_TYPE_AMPLITUDE;
      case 6: return CONTROL_TYPE_CALORIES;
      case 7: return CONTROL_TYPE_FREQUENCY;
      case 8: return CONTROL_TYPE_RELATIVERESISTANCE;
      case 9: return CONTROL_TYPE_RPM;
      case 10: return CONTROL_TYPE_SPM;
      case 11: return CONTROL_TYPE_WATTS;
      case 12: return CONTROL_TYPE_ZONE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ControlType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ControlType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ControlType>() {
          @java.lang.Override
          public ControlType findValueByNumber(int number) {
            return ControlType.forNumber(number);
          }
        };

  public static com.google.protobuf.Internal.EnumVerifier 
      internalGetVerifier() {
    return ControlTypeVerifier.INSTANCE;
  }

  private static final class ControlTypeVerifier implements 
       com.google.protobuf.Internal.EnumVerifier { 
          static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ControlTypeVerifier();
          @java.lang.Override
          public boolean isInRange(int number) {
            return ControlType.forNumber(number) != null;
          }
        };

  private final int value;

  private ControlType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.ifit.glassos.ControlType)
}

