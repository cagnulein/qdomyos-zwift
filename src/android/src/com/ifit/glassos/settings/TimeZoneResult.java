// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: settings/TimeZoneService.proto

// Protobuf Java Version: 3.25.3
package com.ifit.glassos.settings;

/**
 * Protobuf type {@code com.ifit.glassos.TimeZoneResult}
 */
public  final class TimeZoneResult extends
    com.google.protobuf.GeneratedMessageLite<
        TimeZoneResult, TimeZoneResult.Builder> implements
    // @@protoc_insertion_point(message_implements:com.ifit.glassos.TimeZoneResult)
    TimeZoneResultOrBuilder {
  private TimeZoneResult() {
  }
  private int errorOrTimeZoneCase_ = 0;
  private java.lang.Object errorOrTimeZone_;
  public enum ErrorOrTimeZoneCase {
    ERROR(1),
    TIMEZONE(2),
    ERRORORTIMEZONE_NOT_SET(0);
    private final int value;
    private ErrorOrTimeZoneCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ErrorOrTimeZoneCase valueOf(int value) {
      return forNumber(value);
    }

    public static ErrorOrTimeZoneCase forNumber(int value) {
      switch (value) {
        case 1: return ERROR;
        case 2: return TIMEZONE;
        case 0: return ERRORORTIMEZONE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public ErrorOrTimeZoneCase
  getErrorOrTimeZoneCase() {
    return ErrorOrTimeZoneCase.forNumber(
        errorOrTimeZoneCase_);
  }

  private void clearErrorOrTimeZone() {
    errorOrTimeZoneCase_ = 0;
    errorOrTimeZone_ = null;
  }

  public static final int ERROR_FIELD_NUMBER = 1;
  /**
   * <code>.com.ifit.glassos.IFitError error = 1;</code>
   */
  @java.lang.Override
  public boolean hasError() {
    return errorOrTimeZoneCase_ == 1;
  }
  /**
   * <code>.com.ifit.glassos.IFitError error = 1;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.util.IFitError getError() {
    if (errorOrTimeZoneCase_ == 1) {
       return (com.ifit.glassos.util.IFitError) errorOrTimeZone_;
    }
    return com.ifit.glassos.util.IFitError.getDefaultInstance();
  }
  /**
   * <code>.com.ifit.glassos.IFitError error = 1;</code>
   */
  private void setError(com.ifit.glassos.util.IFitError value) {
    value.getClass();
  errorOrTimeZone_ = value;
    errorOrTimeZoneCase_ = 1;
  }
  /**
   * <code>.com.ifit.glassos.IFitError error = 1;</code>
   */
  private void mergeError(com.ifit.glassos.util.IFitError value) {
    value.getClass();
  if (errorOrTimeZoneCase_ == 1 &&
        errorOrTimeZone_ != com.ifit.glassos.util.IFitError.getDefaultInstance()) {
      errorOrTimeZone_ = com.ifit.glassos.util.IFitError.newBuilder((com.ifit.glassos.util.IFitError) errorOrTimeZone_)
          .mergeFrom(value).buildPartial();
    } else {
      errorOrTimeZone_ = value;
    }
    errorOrTimeZoneCase_ = 1;
  }
  /**
   * <code>.com.ifit.glassos.IFitError error = 1;</code>
   */
  private void clearError() {
    if (errorOrTimeZoneCase_ == 1) {
      errorOrTimeZoneCase_ = 0;
      errorOrTimeZone_ = null;
    }
  }

  public static final int TIMEZONE_FIELD_NUMBER = 2;
  /**
   * <code>.com.ifit.glassos.TimeZone timeZone = 2;</code>
   */
  @java.lang.Override
  public boolean hasTimeZone() {
    return errorOrTimeZoneCase_ == 2;
  }
  /**
   * <code>.com.ifit.glassos.TimeZone timeZone = 2;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.settings.TimeZone getTimeZone() {
    if (errorOrTimeZoneCase_ == 2) {
       return (com.ifit.glassos.settings.TimeZone) errorOrTimeZone_;
    }
    return com.ifit.glassos.settings.TimeZone.getDefaultInstance();
  }
  /**
   * <code>.com.ifit.glassos.TimeZone timeZone = 2;</code>
   */
  private void setTimeZone(com.ifit.glassos.settings.TimeZone value) {
    value.getClass();
  errorOrTimeZone_ = value;
    errorOrTimeZoneCase_ = 2;
  }
  /**
   * <code>.com.ifit.glassos.TimeZone timeZone = 2;</code>
   */
  private void mergeTimeZone(com.ifit.glassos.settings.TimeZone value) {
    value.getClass();
  if (errorOrTimeZoneCase_ == 2 &&
        errorOrTimeZone_ != com.ifit.glassos.settings.TimeZone.getDefaultInstance()) {
      errorOrTimeZone_ = com.ifit.glassos.settings.TimeZone.newBuilder((com.ifit.glassos.settings.TimeZone) errorOrTimeZone_)
          .mergeFrom(value).buildPartial();
    } else {
      errorOrTimeZone_ = value;
    }
    errorOrTimeZoneCase_ = 2;
  }
  /**
   * <code>.com.ifit.glassos.TimeZone timeZone = 2;</code>
   */
  private void clearTimeZone() {
    if (errorOrTimeZoneCase_ == 2) {
      errorOrTimeZoneCase_ = 0;
      errorOrTimeZone_ = null;
    }
  }

  public static com.ifit.glassos.settings.TimeZoneResult parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.settings.TimeZoneResult parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.settings.TimeZoneResult parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.settings.TimeZoneResult parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.settings.TimeZoneResult parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.settings.TimeZoneResult parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.settings.TimeZoneResult parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.ifit.glassos.settings.TimeZoneResult parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.ifit.glassos.settings.TimeZoneResult parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.ifit.glassos.settings.TimeZoneResult parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.ifit.glassos.settings.TimeZoneResult parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.ifit.glassos.settings.TimeZoneResult parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.ifit.glassos.settings.TimeZoneResult prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code com.ifit.glassos.TimeZoneResult}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.ifit.glassos.settings.TimeZoneResult, Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ifit.glassos.TimeZoneResult)
      com.ifit.glassos.settings.TimeZoneResultOrBuilder {
    // Construct using com.ifit.glassos.settings.TimeZoneResult.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public ErrorOrTimeZoneCase
        getErrorOrTimeZoneCase() {
      return instance.getErrorOrTimeZoneCase();
    }

    public Builder clearErrorOrTimeZone() {
      copyOnWrite();
      instance.clearErrorOrTimeZone();
      return this;
    }


    /**
     * <code>.com.ifit.glassos.IFitError error = 1;</code>
     */
    @java.lang.Override
    public boolean hasError() {
      return instance.hasError();
    }
    /**
     * <code>.com.ifit.glassos.IFitError error = 1;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.util.IFitError getError() {
      return instance.getError();
    }
    /**
     * <code>.com.ifit.glassos.IFitError error = 1;</code>
     */
    public Builder setError(com.ifit.glassos.util.IFitError value) {
      copyOnWrite();
      instance.setError(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.IFitError error = 1;</code>
     */
    public Builder setError(
        com.ifit.glassos.util.IFitError.Builder builderForValue) {
      copyOnWrite();
      instance.setError(builderForValue.build());
      return this;
    }
    /**
     * <code>.com.ifit.glassos.IFitError error = 1;</code>
     */
    public Builder mergeError(com.ifit.glassos.util.IFitError value) {
      copyOnWrite();
      instance.mergeError(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.IFitError error = 1;</code>
     */
    public Builder clearError() {
      copyOnWrite();
      instance.clearError();
      return this;
    }

    /**
     * <code>.com.ifit.glassos.TimeZone timeZone = 2;</code>
     */
    @java.lang.Override
    public boolean hasTimeZone() {
      return instance.hasTimeZone();
    }
    /**
     * <code>.com.ifit.glassos.TimeZone timeZone = 2;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.settings.TimeZone getTimeZone() {
      return instance.getTimeZone();
    }
    /**
     * <code>.com.ifit.glassos.TimeZone timeZone = 2;</code>
     */
    public Builder setTimeZone(com.ifit.glassos.settings.TimeZone value) {
      copyOnWrite();
      instance.setTimeZone(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.TimeZone timeZone = 2;</code>
     */
    public Builder setTimeZone(
        com.ifit.glassos.settings.TimeZone.Builder builderForValue) {
      copyOnWrite();
      instance.setTimeZone(builderForValue.build());
      return this;
    }
    /**
     * <code>.com.ifit.glassos.TimeZone timeZone = 2;</code>
     */
    public Builder mergeTimeZone(com.ifit.glassos.settings.TimeZone value) {
      copyOnWrite();
      instance.mergeTimeZone(value);
      return this;
    }
    /**
     * <code>.com.ifit.glassos.TimeZone timeZone = 2;</code>
     */
    public Builder clearTimeZone() {
      copyOnWrite();
      instance.clearTimeZone();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:com.ifit.glassos.TimeZoneResult)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.ifit.glassos.settings.TimeZoneResult();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "errorOrTimeZone_",
            "errorOrTimeZoneCase_",
            com.ifit.glassos.util.IFitError.class,
            com.ifit.glassos.settings.TimeZone.class,
          };
          java.lang.String info =
              "\u0000\u0002\u0001\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001<\u0000\u0002<" +
              "\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.ifit.glassos.settings.TimeZoneResult> parser = PARSER;
        if (parser == null) {
          synchronized (com.ifit.glassos.settings.TimeZoneResult.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.ifit.glassos.settings.TimeZoneResult>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:com.ifit.glassos.TimeZoneResult)
  private static final com.ifit.glassos.settings.TimeZoneResult DEFAULT_INSTANCE;
  static {
    TimeZoneResult defaultInstance = new TimeZoneResult();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      TimeZoneResult.class, defaultInstance);
  }

  public static com.ifit.glassos.settings.TimeZoneResult getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<TimeZoneResult> PARSER;

  public static com.google.protobuf.Parser<TimeZoneResult> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

