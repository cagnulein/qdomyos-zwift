// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: activitylog/ActivityLogStats.proto

// Protobuf Java Version: 3.25.8
package com.ifit.glassos.activitylog;

/**
 * Protobuf type {@code com.ifit.glassos.ActivityLogStats}
 */
public  final class ActivityLogStats extends
    com.google.protobuf.GeneratedMessageLite<
        ActivityLogStats, ActivityLogStats.Builder> implements
    // @@protoc_insertion_point(message_implements:com.ifit.glassos.ActivityLogStats)
    ActivityLogStatsOrBuilder {
  private ActivityLogStats() {
    bpm_ = emptyProtobufList();
    calories_ = emptyProtobufList();
    elevation_ = emptyProtobufList();
    fiveHundredSplit_ = emptyProtobufList();
    incline_ = emptyProtobufList();
    meters_ = emptyProtobufList();
    mps_ = emptyProtobufList();
    resistance_ = emptyProtobufList();
    rpm_ = emptyProtobufList();
    watts_ = emptyProtobufList();
    cadence_ = emptyProtobufList();
  }
  public static final int BPM_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> bpm_;
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
   */
  @java.lang.Override
  public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getBpmList() {
    return bpm_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
   */
  public java.util.List<? extends com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder> 
      getBpmOrBuilderList() {
    return bpm_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
   */
  @java.lang.Override
  public int getBpmCount() {
    return bpm_.size();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.activitylog.ActivityOffsetValue getBpm(int index) {
    return bpm_.get(index);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
   */
  public com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder getBpmOrBuilder(
      int index) {
    return bpm_.get(index);
  }
  private void ensureBpmIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> tmp = bpm_;
    if (!tmp.isModifiable()) {
      bpm_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
   */
  private void setBpm(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureBpmIsMutable();
    bpm_.set(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
   */
  private void addBpm(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureBpmIsMutable();
    bpm_.add(value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
   */
  private void addBpm(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureBpmIsMutable();
    bpm_.add(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
   */
  private void addAllBpm(
      java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
    ensureBpmIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, bpm_);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
   */
  private void clearBpm() {
    bpm_ = emptyProtobufList();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
   */
  private void removeBpm(int index) {
    ensureBpmIsMutable();
    bpm_.remove(index);
  }

  public static final int CALORIES_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> calories_;
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getCaloriesList() {
    return calories_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
   */
  public java.util.List<? extends com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder> 
      getCaloriesOrBuilderList() {
    return calories_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
   */
  @java.lang.Override
  public int getCaloriesCount() {
    return calories_.size();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.activitylog.ActivityOffsetValue getCalories(int index) {
    return calories_.get(index);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
   */
  public com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder getCaloriesOrBuilder(
      int index) {
    return calories_.get(index);
  }
  private void ensureCaloriesIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> tmp = calories_;
    if (!tmp.isModifiable()) {
      calories_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
   */
  private void setCalories(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureCaloriesIsMutable();
    calories_.set(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
   */
  private void addCalories(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureCaloriesIsMutable();
    calories_.add(value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
   */
  private void addCalories(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureCaloriesIsMutable();
    calories_.add(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
   */
  private void addAllCalories(
      java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
    ensureCaloriesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, calories_);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
   */
  private void clearCalories() {
    calories_ = emptyProtobufList();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
   */
  private void removeCalories(int index) {
    ensureCaloriesIsMutable();
    calories_.remove(index);
  }

  public static final int ELEVATION_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> elevation_;
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getElevationList() {
    return elevation_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
   */
  public java.util.List<? extends com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder> 
      getElevationOrBuilderList() {
    return elevation_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
   */
  @java.lang.Override
  public int getElevationCount() {
    return elevation_.size();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.activitylog.ActivityOffsetValue getElevation(int index) {
    return elevation_.get(index);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
   */
  public com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder getElevationOrBuilder(
      int index) {
    return elevation_.get(index);
  }
  private void ensureElevationIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> tmp = elevation_;
    if (!tmp.isModifiable()) {
      elevation_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
   */
  private void setElevation(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureElevationIsMutable();
    elevation_.set(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
   */
  private void addElevation(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureElevationIsMutable();
    elevation_.add(value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
   */
  private void addElevation(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureElevationIsMutable();
    elevation_.add(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
   */
  private void addAllElevation(
      java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
    ensureElevationIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, elevation_);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
   */
  private void clearElevation() {
    elevation_ = emptyProtobufList();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
   */
  private void removeElevation(int index) {
    ensureElevationIsMutable();
    elevation_.remove(index);
  }

  public static final int FIVEHUNDREDSPLIT_FIELD_NUMBER = 4;
  private com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> fiveHundredSplit_;
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
   */
  @java.lang.Override
  public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getFiveHundredSplitList() {
    return fiveHundredSplit_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
   */
  public java.util.List<? extends com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder> 
      getFiveHundredSplitOrBuilderList() {
    return fiveHundredSplit_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
   */
  @java.lang.Override
  public int getFiveHundredSplitCount() {
    return fiveHundredSplit_.size();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.activitylog.ActivityOffsetValue getFiveHundredSplit(int index) {
    return fiveHundredSplit_.get(index);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
   */
  public com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder getFiveHundredSplitOrBuilder(
      int index) {
    return fiveHundredSplit_.get(index);
  }
  private void ensureFiveHundredSplitIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> tmp = fiveHundredSplit_;
    if (!tmp.isModifiable()) {
      fiveHundredSplit_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
   */
  private void setFiveHundredSplit(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureFiveHundredSplitIsMutable();
    fiveHundredSplit_.set(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
   */
  private void addFiveHundredSplit(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureFiveHundredSplitIsMutable();
    fiveHundredSplit_.add(value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
   */
  private void addFiveHundredSplit(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureFiveHundredSplitIsMutable();
    fiveHundredSplit_.add(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
   */
  private void addAllFiveHundredSplit(
      java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
    ensureFiveHundredSplitIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, fiveHundredSplit_);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
   */
  private void clearFiveHundredSplit() {
    fiveHundredSplit_ = emptyProtobufList();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
   */
  private void removeFiveHundredSplit(int index) {
    ensureFiveHundredSplitIsMutable();
    fiveHundredSplit_.remove(index);
  }

  public static final int INCLINE_FIELD_NUMBER = 5;
  private com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> incline_;
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
   */
  @java.lang.Override
  public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getInclineList() {
    return incline_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
   */
  public java.util.List<? extends com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder> 
      getInclineOrBuilderList() {
    return incline_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
   */
  @java.lang.Override
  public int getInclineCount() {
    return incline_.size();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.activitylog.ActivityOffsetValue getIncline(int index) {
    return incline_.get(index);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
   */
  public com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder getInclineOrBuilder(
      int index) {
    return incline_.get(index);
  }
  private void ensureInclineIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> tmp = incline_;
    if (!tmp.isModifiable()) {
      incline_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
   */
  private void setIncline(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureInclineIsMutable();
    incline_.set(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
   */
  private void addIncline(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureInclineIsMutable();
    incline_.add(value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
   */
  private void addIncline(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureInclineIsMutable();
    incline_.add(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
   */
  private void addAllIncline(
      java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
    ensureInclineIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, incline_);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
   */
  private void clearIncline() {
    incline_ = emptyProtobufList();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
   */
  private void removeIncline(int index) {
    ensureInclineIsMutable();
    incline_.remove(index);
  }

  public static final int METERS_FIELD_NUMBER = 6;
  private com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> meters_;
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
   */
  @java.lang.Override
  public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getMetersList() {
    return meters_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
   */
  public java.util.List<? extends com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder> 
      getMetersOrBuilderList() {
    return meters_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
   */
  @java.lang.Override
  public int getMetersCount() {
    return meters_.size();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.activitylog.ActivityOffsetValue getMeters(int index) {
    return meters_.get(index);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
   */
  public com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder getMetersOrBuilder(
      int index) {
    return meters_.get(index);
  }
  private void ensureMetersIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> tmp = meters_;
    if (!tmp.isModifiable()) {
      meters_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
   */
  private void setMeters(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureMetersIsMutable();
    meters_.set(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
   */
  private void addMeters(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureMetersIsMutable();
    meters_.add(value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
   */
  private void addMeters(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureMetersIsMutable();
    meters_.add(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
   */
  private void addAllMeters(
      java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
    ensureMetersIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, meters_);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
   */
  private void clearMeters() {
    meters_ = emptyProtobufList();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
   */
  private void removeMeters(int index) {
    ensureMetersIsMutable();
    meters_.remove(index);
  }

  public static final int MPS_FIELD_NUMBER = 7;
  private com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> mps_;
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
   */
  @java.lang.Override
  public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getMpsList() {
    return mps_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
   */
  public java.util.List<? extends com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder> 
      getMpsOrBuilderList() {
    return mps_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
   */
  @java.lang.Override
  public int getMpsCount() {
    return mps_.size();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.activitylog.ActivityOffsetValue getMps(int index) {
    return mps_.get(index);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
   */
  public com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder getMpsOrBuilder(
      int index) {
    return mps_.get(index);
  }
  private void ensureMpsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> tmp = mps_;
    if (!tmp.isModifiable()) {
      mps_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
   */
  private void setMps(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureMpsIsMutable();
    mps_.set(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
   */
  private void addMps(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureMpsIsMutable();
    mps_.add(value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
   */
  private void addMps(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureMpsIsMutable();
    mps_.add(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
   */
  private void addAllMps(
      java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
    ensureMpsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, mps_);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
   */
  private void clearMps() {
    mps_ = emptyProtobufList();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
   */
  private void removeMps(int index) {
    ensureMpsIsMutable();
    mps_.remove(index);
  }

  public static final int RESISTANCE_FIELD_NUMBER = 8;
  private com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> resistance_;
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
   */
  @java.lang.Override
  public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getResistanceList() {
    return resistance_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
   */
  public java.util.List<? extends com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder> 
      getResistanceOrBuilderList() {
    return resistance_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
   */
  @java.lang.Override
  public int getResistanceCount() {
    return resistance_.size();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.activitylog.ActivityOffsetValue getResistance(int index) {
    return resistance_.get(index);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
   */
  public com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder getResistanceOrBuilder(
      int index) {
    return resistance_.get(index);
  }
  private void ensureResistanceIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> tmp = resistance_;
    if (!tmp.isModifiable()) {
      resistance_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
   */
  private void setResistance(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureResistanceIsMutable();
    resistance_.set(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
   */
  private void addResistance(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureResistanceIsMutable();
    resistance_.add(value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
   */
  private void addResistance(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureResistanceIsMutable();
    resistance_.add(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
   */
  private void addAllResistance(
      java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
    ensureResistanceIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, resistance_);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
   */
  private void clearResistance() {
    resistance_ = emptyProtobufList();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
   */
  private void removeResistance(int index) {
    ensureResistanceIsMutable();
    resistance_.remove(index);
  }

  public static final int RPM_FIELD_NUMBER = 9;
  private com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> rpm_;
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
   */
  @java.lang.Override
  public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getRpmList() {
    return rpm_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
   */
  public java.util.List<? extends com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder> 
      getRpmOrBuilderList() {
    return rpm_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
   */
  @java.lang.Override
  public int getRpmCount() {
    return rpm_.size();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.activitylog.ActivityOffsetValue getRpm(int index) {
    return rpm_.get(index);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
   */
  public com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder getRpmOrBuilder(
      int index) {
    return rpm_.get(index);
  }
  private void ensureRpmIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> tmp = rpm_;
    if (!tmp.isModifiable()) {
      rpm_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
   */
  private void setRpm(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureRpmIsMutable();
    rpm_.set(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
   */
  private void addRpm(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureRpmIsMutable();
    rpm_.add(value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
   */
  private void addRpm(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureRpmIsMutable();
    rpm_.add(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
   */
  private void addAllRpm(
      java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
    ensureRpmIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, rpm_);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
   */
  private void clearRpm() {
    rpm_ = emptyProtobufList();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
   */
  private void removeRpm(int index) {
    ensureRpmIsMutable();
    rpm_.remove(index);
  }

  public static final int WATTS_FIELD_NUMBER = 10;
  private com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> watts_;
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
   */
  @java.lang.Override
  public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getWattsList() {
    return watts_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
   */
  public java.util.List<? extends com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder> 
      getWattsOrBuilderList() {
    return watts_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
   */
  @java.lang.Override
  public int getWattsCount() {
    return watts_.size();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.activitylog.ActivityOffsetValue getWatts(int index) {
    return watts_.get(index);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
   */
  public com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder getWattsOrBuilder(
      int index) {
    return watts_.get(index);
  }
  private void ensureWattsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> tmp = watts_;
    if (!tmp.isModifiable()) {
      watts_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
   */
  private void setWatts(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureWattsIsMutable();
    watts_.set(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
   */
  private void addWatts(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureWattsIsMutable();
    watts_.add(value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
   */
  private void addWatts(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureWattsIsMutable();
    watts_.add(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
   */
  private void addAllWatts(
      java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
    ensureWattsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, watts_);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
   */
  private void clearWatts() {
    watts_ = emptyProtobufList();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
   */
  private void removeWatts(int index) {
    ensureWattsIsMutable();
    watts_.remove(index);
  }

  public static final int CADENCE_FIELD_NUMBER = 11;
  private com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> cadence_;
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
   */
  @java.lang.Override
  public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getCadenceList() {
    return cadence_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
   */
  public java.util.List<? extends com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder> 
      getCadenceOrBuilderList() {
    return cadence_;
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
   */
  @java.lang.Override
  public int getCadenceCount() {
    return cadence_.size();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
   */
  @java.lang.Override
  public com.ifit.glassos.activitylog.ActivityOffsetValue getCadence(int index) {
    return cadence_.get(index);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
   */
  public com.ifit.glassos.activitylog.ActivityOffsetValueOrBuilder getCadenceOrBuilder(
      int index) {
    return cadence_.get(index);
  }
  private void ensureCadenceIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.ifit.glassos.activitylog.ActivityOffsetValue> tmp = cadence_;
    if (!tmp.isModifiable()) {
      cadence_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
   */
  private void setCadence(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureCadenceIsMutable();
    cadence_.set(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
   */
  private void addCadence(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureCadenceIsMutable();
    cadence_.add(value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
   */
  private void addCadence(
      int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
    value.getClass();
  ensureCadenceIsMutable();
    cadence_.add(index, value);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
   */
  private void addAllCadence(
      java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
    ensureCadenceIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, cadence_);
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
   */
  private void clearCadence() {
    cadence_ = emptyProtobufList();
  }
  /**
   * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
   */
  private void removeCadence(int index) {
    ensureCadenceIsMutable();
    cadence_.remove(index);
  }

  public static com.ifit.glassos.activitylog.ActivityLogStats parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.activitylog.ActivityLogStats parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.activitylog.ActivityLogStats parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.activitylog.ActivityLogStats parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.activitylog.ActivityLogStats parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.ifit.glassos.activitylog.ActivityLogStats parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.ifit.glassos.activitylog.ActivityLogStats parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.ifit.glassos.activitylog.ActivityLogStats parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.ifit.glassos.activitylog.ActivityLogStats parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.ifit.glassos.activitylog.ActivityLogStats parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.ifit.glassos.activitylog.ActivityLogStats parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.ifit.glassos.activitylog.ActivityLogStats parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.ifit.glassos.activitylog.ActivityLogStats prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code com.ifit.glassos.ActivityLogStats}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.ifit.glassos.activitylog.ActivityLogStats, Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ifit.glassos.ActivityLogStats)
      com.ifit.glassos.activitylog.ActivityLogStatsOrBuilder {
    // Construct using com.ifit.glassos.activitylog.ActivityLogStats.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getBpmList() {
      return java.util.Collections.unmodifiableList(
          instance.getBpmList());
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
     */
    @java.lang.Override
    public int getBpmCount() {
      return instance.getBpmCount();
    }/**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.activitylog.ActivityOffsetValue getBpm(int index) {
      return instance.getBpm(index);
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
     */
    public Builder setBpm(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.setBpm(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
     */
    public Builder setBpm(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.setBpm(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
     */
    public Builder addBpm(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addBpm(value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
     */
    public Builder addBpm(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addBpm(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
     */
    public Builder addBpm(
        com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addBpm(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
     */
    public Builder addBpm(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addBpm(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
     */
    public Builder addAllBpm(
        java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
      copyOnWrite();
      instance.addAllBpm(values);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
     */
    public Builder clearBpm() {
      copyOnWrite();
      instance.clearBpm();
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue bpm = 1;</code>
     */
    public Builder removeBpm(int index) {
      copyOnWrite();
      instance.removeBpm(index);
      return this;
    }

    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getCaloriesList() {
      return java.util.Collections.unmodifiableList(
          instance.getCaloriesList());
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
     */
    @java.lang.Override
    public int getCaloriesCount() {
      return instance.getCaloriesCount();
    }/**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.activitylog.ActivityOffsetValue getCalories(int index) {
      return instance.getCalories(index);
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
     */
    public Builder setCalories(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.setCalories(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
     */
    public Builder setCalories(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.setCalories(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
     */
    public Builder addCalories(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addCalories(value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
     */
    public Builder addCalories(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addCalories(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
     */
    public Builder addCalories(
        com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addCalories(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
     */
    public Builder addCalories(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addCalories(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
     */
    public Builder addAllCalories(
        java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
      copyOnWrite();
      instance.addAllCalories(values);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
     */
    public Builder clearCalories() {
      copyOnWrite();
      instance.clearCalories();
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue calories = 2;</code>
     */
    public Builder removeCalories(int index) {
      copyOnWrite();
      instance.removeCalories(index);
      return this;
    }

    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getElevationList() {
      return java.util.Collections.unmodifiableList(
          instance.getElevationList());
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
     */
    @java.lang.Override
    public int getElevationCount() {
      return instance.getElevationCount();
    }/**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.activitylog.ActivityOffsetValue getElevation(int index) {
      return instance.getElevation(index);
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
     */
    public Builder setElevation(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.setElevation(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
     */
    public Builder setElevation(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.setElevation(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
     */
    public Builder addElevation(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addElevation(value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
     */
    public Builder addElevation(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addElevation(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
     */
    public Builder addElevation(
        com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addElevation(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
     */
    public Builder addElevation(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addElevation(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
     */
    public Builder addAllElevation(
        java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
      copyOnWrite();
      instance.addAllElevation(values);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
     */
    public Builder clearElevation() {
      copyOnWrite();
      instance.clearElevation();
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue elevation = 3;</code>
     */
    public Builder removeElevation(int index) {
      copyOnWrite();
      instance.removeElevation(index);
      return this;
    }

    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
     */
    @java.lang.Override
    public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getFiveHundredSplitList() {
      return java.util.Collections.unmodifiableList(
          instance.getFiveHundredSplitList());
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
     */
    @java.lang.Override
    public int getFiveHundredSplitCount() {
      return instance.getFiveHundredSplitCount();
    }/**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.activitylog.ActivityOffsetValue getFiveHundredSplit(int index) {
      return instance.getFiveHundredSplit(index);
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
     */
    public Builder setFiveHundredSplit(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.setFiveHundredSplit(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
     */
    public Builder setFiveHundredSplit(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.setFiveHundredSplit(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
     */
    public Builder addFiveHundredSplit(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addFiveHundredSplit(value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
     */
    public Builder addFiveHundredSplit(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addFiveHundredSplit(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
     */
    public Builder addFiveHundredSplit(
        com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addFiveHundredSplit(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
     */
    public Builder addFiveHundredSplit(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addFiveHundredSplit(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
     */
    public Builder addAllFiveHundredSplit(
        java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
      copyOnWrite();
      instance.addAllFiveHundredSplit(values);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
     */
    public Builder clearFiveHundredSplit() {
      copyOnWrite();
      instance.clearFiveHundredSplit();
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue fiveHundredSplit = 4;</code>
     */
    public Builder removeFiveHundredSplit(int index) {
      copyOnWrite();
      instance.removeFiveHundredSplit(index);
      return this;
    }

    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
     */
    @java.lang.Override
    public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getInclineList() {
      return java.util.Collections.unmodifiableList(
          instance.getInclineList());
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
     */
    @java.lang.Override
    public int getInclineCount() {
      return instance.getInclineCount();
    }/**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.activitylog.ActivityOffsetValue getIncline(int index) {
      return instance.getIncline(index);
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
     */
    public Builder setIncline(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.setIncline(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
     */
    public Builder setIncline(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.setIncline(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
     */
    public Builder addIncline(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addIncline(value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
     */
    public Builder addIncline(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addIncline(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
     */
    public Builder addIncline(
        com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addIncline(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
     */
    public Builder addIncline(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addIncline(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
     */
    public Builder addAllIncline(
        java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
      copyOnWrite();
      instance.addAllIncline(values);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
     */
    public Builder clearIncline() {
      copyOnWrite();
      instance.clearIncline();
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue incline = 5;</code>
     */
    public Builder removeIncline(int index) {
      copyOnWrite();
      instance.removeIncline(index);
      return this;
    }

    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
     */
    @java.lang.Override
    public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getMetersList() {
      return java.util.Collections.unmodifiableList(
          instance.getMetersList());
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
     */
    @java.lang.Override
    public int getMetersCount() {
      return instance.getMetersCount();
    }/**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.activitylog.ActivityOffsetValue getMeters(int index) {
      return instance.getMeters(index);
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
     */
    public Builder setMeters(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.setMeters(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
     */
    public Builder setMeters(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.setMeters(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
     */
    public Builder addMeters(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addMeters(value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
     */
    public Builder addMeters(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addMeters(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
     */
    public Builder addMeters(
        com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addMeters(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
     */
    public Builder addMeters(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addMeters(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
     */
    public Builder addAllMeters(
        java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
      copyOnWrite();
      instance.addAllMeters(values);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
     */
    public Builder clearMeters() {
      copyOnWrite();
      instance.clearMeters();
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue meters = 6;</code>
     */
    public Builder removeMeters(int index) {
      copyOnWrite();
      instance.removeMeters(index);
      return this;
    }

    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
     */
    @java.lang.Override
    public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getMpsList() {
      return java.util.Collections.unmodifiableList(
          instance.getMpsList());
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
     */
    @java.lang.Override
    public int getMpsCount() {
      return instance.getMpsCount();
    }/**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.activitylog.ActivityOffsetValue getMps(int index) {
      return instance.getMps(index);
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
     */
    public Builder setMps(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.setMps(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
     */
    public Builder setMps(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.setMps(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
     */
    public Builder addMps(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addMps(value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
     */
    public Builder addMps(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addMps(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
     */
    public Builder addMps(
        com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addMps(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
     */
    public Builder addMps(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addMps(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
     */
    public Builder addAllMps(
        java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
      copyOnWrite();
      instance.addAllMps(values);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
     */
    public Builder clearMps() {
      copyOnWrite();
      instance.clearMps();
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue mps = 7;</code>
     */
    public Builder removeMps(int index) {
      copyOnWrite();
      instance.removeMps(index);
      return this;
    }

    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
     */
    @java.lang.Override
    public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getResistanceList() {
      return java.util.Collections.unmodifiableList(
          instance.getResistanceList());
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
     */
    @java.lang.Override
    public int getResistanceCount() {
      return instance.getResistanceCount();
    }/**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.activitylog.ActivityOffsetValue getResistance(int index) {
      return instance.getResistance(index);
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
     */
    public Builder setResistance(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.setResistance(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
     */
    public Builder setResistance(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.setResistance(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
     */
    public Builder addResistance(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addResistance(value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
     */
    public Builder addResistance(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addResistance(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
     */
    public Builder addResistance(
        com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addResistance(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
     */
    public Builder addResistance(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addResistance(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
     */
    public Builder addAllResistance(
        java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
      copyOnWrite();
      instance.addAllResistance(values);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
     */
    public Builder clearResistance() {
      copyOnWrite();
      instance.clearResistance();
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue resistance = 8;</code>
     */
    public Builder removeResistance(int index) {
      copyOnWrite();
      instance.removeResistance(index);
      return this;
    }

    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
     */
    @java.lang.Override
    public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getRpmList() {
      return java.util.Collections.unmodifiableList(
          instance.getRpmList());
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
     */
    @java.lang.Override
    public int getRpmCount() {
      return instance.getRpmCount();
    }/**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.activitylog.ActivityOffsetValue getRpm(int index) {
      return instance.getRpm(index);
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
     */
    public Builder setRpm(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.setRpm(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
     */
    public Builder setRpm(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.setRpm(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
     */
    public Builder addRpm(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addRpm(value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
     */
    public Builder addRpm(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addRpm(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
     */
    public Builder addRpm(
        com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addRpm(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
     */
    public Builder addRpm(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addRpm(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
     */
    public Builder addAllRpm(
        java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
      copyOnWrite();
      instance.addAllRpm(values);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
     */
    public Builder clearRpm() {
      copyOnWrite();
      instance.clearRpm();
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue rpm = 9;</code>
     */
    public Builder removeRpm(int index) {
      copyOnWrite();
      instance.removeRpm(index);
      return this;
    }

    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
     */
    @java.lang.Override
    public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getWattsList() {
      return java.util.Collections.unmodifiableList(
          instance.getWattsList());
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
     */
    @java.lang.Override
    public int getWattsCount() {
      return instance.getWattsCount();
    }/**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.activitylog.ActivityOffsetValue getWatts(int index) {
      return instance.getWatts(index);
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
     */
    public Builder setWatts(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.setWatts(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
     */
    public Builder setWatts(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.setWatts(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
     */
    public Builder addWatts(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addWatts(value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
     */
    public Builder addWatts(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addWatts(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
     */
    public Builder addWatts(
        com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addWatts(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
     */
    public Builder addWatts(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addWatts(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
     */
    public Builder addAllWatts(
        java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
      copyOnWrite();
      instance.addAllWatts(values);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
     */
    public Builder clearWatts() {
      copyOnWrite();
      instance.clearWatts();
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue watts = 10;</code>
     */
    public Builder removeWatts(int index) {
      copyOnWrite();
      instance.removeWatts(index);
      return this;
    }

    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
     */
    @java.lang.Override
    public java.util.List<com.ifit.glassos.activitylog.ActivityOffsetValue> getCadenceList() {
      return java.util.Collections.unmodifiableList(
          instance.getCadenceList());
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
     */
    @java.lang.Override
    public int getCadenceCount() {
      return instance.getCadenceCount();
    }/**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
     */
    @java.lang.Override
    public com.ifit.glassos.activitylog.ActivityOffsetValue getCadence(int index) {
      return instance.getCadence(index);
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
     */
    public Builder setCadence(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.setCadence(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
     */
    public Builder setCadence(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.setCadence(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
     */
    public Builder addCadence(com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addCadence(value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
     */
    public Builder addCadence(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue value) {
      copyOnWrite();
      instance.addCadence(index, value);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
     */
    public Builder addCadence(
        com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addCadence(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
     */
    public Builder addCadence(
        int index, com.ifit.glassos.activitylog.ActivityOffsetValue.Builder builderForValue) {
      copyOnWrite();
      instance.addCadence(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
     */
    public Builder addAllCadence(
        java.lang.Iterable<? extends com.ifit.glassos.activitylog.ActivityOffsetValue> values) {
      copyOnWrite();
      instance.addAllCadence(values);
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
     */
    public Builder clearCadence() {
      copyOnWrite();
      instance.clearCadence();
      return this;
    }
    /**
     * <code>repeated .com.ifit.glassos.ActivityOffsetValue cadence = 11;</code>
     */
    public Builder removeCadence(int index) {
      copyOnWrite();
      instance.removeCadence(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:com.ifit.glassos.ActivityLogStats)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.ifit.glassos.activitylog.ActivityLogStats();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bpm_",
            com.ifit.glassos.activitylog.ActivityOffsetValue.class,
            "calories_",
            com.ifit.glassos.activitylog.ActivityOffsetValue.class,
            "elevation_",
            com.ifit.glassos.activitylog.ActivityOffsetValue.class,
            "fiveHundredSplit_",
            com.ifit.glassos.activitylog.ActivityOffsetValue.class,
            "incline_",
            com.ifit.glassos.activitylog.ActivityOffsetValue.class,
            "meters_",
            com.ifit.glassos.activitylog.ActivityOffsetValue.class,
            "mps_",
            com.ifit.glassos.activitylog.ActivityOffsetValue.class,
            "resistance_",
            com.ifit.glassos.activitylog.ActivityOffsetValue.class,
            "rpm_",
            com.ifit.glassos.activitylog.ActivityOffsetValue.class,
            "watts_",
            com.ifit.glassos.activitylog.ActivityOffsetValue.class,
            "cadence_",
            com.ifit.glassos.activitylog.ActivityOffsetValue.class,
          };
          java.lang.String info =
              "\u0000\u000b\u0000\u0000\u0001\u000b\u000b\u0000\u000b\u0000\u0001\u001b\u0002\u001b" +
              "\u0003\u001b\u0004\u001b\u0005\u001b\u0006\u001b\u0007\u001b\b\u001b\t\u001b\n\u001b" +
              "\u000b\u001b";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.ifit.glassos.activitylog.ActivityLogStats> parser = PARSER;
        if (parser == null) {
          synchronized (com.ifit.glassos.activitylog.ActivityLogStats.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.ifit.glassos.activitylog.ActivityLogStats>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:com.ifit.glassos.ActivityLogStats)
  private static final com.ifit.glassos.activitylog.ActivityLogStats DEFAULT_INSTANCE;
  static {
    ActivityLogStats defaultInstance = new ActivityLogStats();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ActivityLogStats.class, defaultInstance);
  }

  public static com.ifit.glassos.activitylog.ActivityLogStats getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ActivityLogStats> PARSER;

  public static com.google.protobuf.Parser<ActivityLogStats> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

