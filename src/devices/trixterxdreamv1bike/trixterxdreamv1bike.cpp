#include "trixterxdreamv1bike.h"
#include "trixterxdreamv1serial.h"
#include "trixterxdreamv1settings.h"
#include "qcoreevent.h"
#include <algorithm>
#include <cmath>
#include <qmath.h>
#include <QTimer>

using namespace std;


static std::vector<std::vector<uint16_t>> powerTable =
    {
        /* 30 RPM */ { 5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,12,12,12,13,13,13,14,14,14,15,15,16,16,16,17,17,17,18,18,18,19,19,20,20,20,21,21,21,22,22,22,23,23,24,24,24,25,25,25,26,26,26,27,27,28,28,28,29,29,30,30,30,31,31,32,32,32,33,33,34,34,35,35,35,36,36,37,37,37,38,38,39,39,40,40,40,41,41,42,42,42,43,43,44,44,45,45,45,46,46,47,47,47,48,48,49,49,49,50,50,50,51,51,51,52,52,52,53,53,53,54,54,54,55,55,55,56,56,56,56,57,57,57,58,58,58,59,59,59,60,60,60,61,61,61,62,62,62,63,63,63,63,64,64,64,65,65,65,65,66,66,66,66,66,67,67,67,67,67,67,68,68,68,68,68,68,69,69,69,69,69,70,70,70,70,70,70,71,71,71,71,71,71,72,72,72,72,72,73,73,73,73,73,73,74,74,74 },
        /* 31 RPM */ { 5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,12,12,13,13,13,14,14,14,15,15,16,16,16,17,17,18,18,18,19,19,19,20,20,21,21,21,22,22,23,23,23,24,24,24,25,25,26,26,26,27,27,27,28,28,29,29,29,30,30,31,31,32,32,33,33,33,34,34,35,35,36,36,37,37,38,38,38,39,39,40,40,41,41,42,42,43,43,43,44,44,45,45,46,46,47,47,48,48,48,49,49,50,50,51,51,52,52,52,53,53,53,54,54,55,55,55,56,56,56,57,57,57,58,58,58,59,59,59,60,60,60,61,61,61,62,62,62,63,63,63,64,64,64,65,65,65,66,66,66,67,67,67,68,68,69,69,69,69,70,70,70,70,70,71,71,71,71,71,72,72,72,72,72,72,73,73,73,73,73,74,74,74,74,74,75,75,75,75,75,76,76,76,76,76,76,77,77,77,77,77,78,78,78,78,78,79,79 },
        /* 32 RPM */ { 5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,12,12,12,13,13,14,14,14,15,15,16,16,16,17,17,18,18,18,19,19,20,20,20,21,21,22,22,23,23,23,24,24,25,25,25,26,26,27,27,27,28,28,29,29,29,30,30,31,31,32,32,33,33,34,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,55,56,56,57,57,57,58,58,58,59,59,59,60,60,61,61,61,62,62,62,63,63,63,64,64,65,65,65,66,66,66,67,67,67,68,68,69,69,69,70,70,70,71,71,71,72,72,73,73,73,74,74,74,74,74,75,75,75,75,75,76,76,76,76,76,77,77,77,77,77,78,78,78,78,78,79,79,79,79,79,80,80,80,80,80,81,81,81,81,82,82,82,82,82,83,83,83,83,83,84 },
        /* 33 RPM */ { 5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,12,12,13,13,14,14,14,15,15,16,16,16,17,17,18,18,19,19,19,20,20,21,21,22,22,22,23,23,24,24,25,25,25,26,26,27,27,27,28,28,29,29,30,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,57,57,58,58,59,59,59,60,60,60,61,61,62,62,62,63,63,64,64,64,65,65,65,66,66,67,67,67,68,68,69,69,69,70,70,70,71,71,72,72,72,73,73,74,74,74,75,75,76,76,76,77,77,77,78,78,78,78,79,79,79,79,79,80,80,80,80,80,81,81,81,81,82,82,82,82,82,83,83,83,83,84,84,84,84,84,85,85,85,85,86,86,86,86,86,87,87,87,87,87,88,88,88,88 },
        /* 34 RPM */ { 5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,12,12,13,13,13,14,14,15,15,16,16,16,17,17,18,18,19,19,20,20,20,21,21,22,22,23,23,24,24,24,25,25,26,26,27,27,28,28,28,29,29,30,30,31,31,32,32,32,33,33,34,35,35,36,36,37,37,38,39,39,40,40,41,41,42,42,43,44,44,45,45,46,46,47,48,48,49,49,50,50,51,52,52,53,53,54,54,55,55,56,57,57,58,58,59,59,60,61,61,62,62,62,63,63,64,64,64,65,65,66,66,66,67,67,68,68,68,69,69,70,70,71,71,71,72,72,73,73,73,74,74,75,75,75,76,76,77,77,77,78,78,79,79,80,80,80,81,81,82,82,82,82,82,83,83,83,83,84,84,84,84,85,85,85,85,85,86,86,86,86,87,87,87,87,88,88,88,88,89,89,89,89,89,90,90,90,90,91,91,91,91,92,92,92,92,92,93,93,93 },
        /* 35 RPM */ { 5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,12,12,13,13,14,14,15,15,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,22,23,23,24,24,25,25,26,26,27,27,28,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,38,38,39,39,40,41,41,42,42,43,44,44,45,45,46,47,47,48,48,49,50,50,51,51,52,53,53,54,55,55,56,56,57,58,58,59,59,60,61,61,62,62,63,64,64,65,65,65,66,66,67,67,68,68,68,69,69,70,70,71,71,71,72,72,73,73,74,74,74,75,75,76,76,77,77,77,78,78,79,79,80,80,80,81,81,82,82,83,83,84,84,84,85,85,86,86,86,86,87,87,87,87,88,88,88,88,89,89,89,89,90,90,90,90,91,91,91,91,92,92,92,92,93,93,93,93,94,94,94,94,94,95,95,95,95,96,96,96,96,97,97,97,97,98,98 },
        /* 36 RPM */ { 5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,12,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,38,38,39,40,40,41,42,42,43,43,44,45,45,46,47,47,48,49,49,50,51,51,52,52,53,54,54,55,56,56,57,58,58,59,59,60,61,61,62,63,63,64,65,65,66,66,67,68,68,68,69,69,70,70,71,71,72,72,73,73,73,74,74,75,75,76,76,77,77,78,78,78,79,79,80,80,81,81,82,82,83,83,83,84,84,85,85,86,86,87,87,88,88,88,89,89,90,90,90,91,91,91,91,92,92,92,92,93,93,93,93,94,94,94,94,95,95,95,95,96,96,96,97,97,97,97,98,98,98,98,99,99,99,99,100,100,100,100,101,101,101,101,102,102,102,102,103 },
        /* 37 RPM */ { 5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,38,38,39,40,40,41,42,42,43,44,44,45,46,46,47,48,49,49,50,51,51,52,53,53,54,55,55,56,57,57,58,59,59,60,61,61,62,63,63,64,65,65,66,67,67,68,69,69,70,71,71,72,72,73,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,92,93,93,94,94,94,95,95,95,96,96,96,96,97,97,97,97,98,98,98,99,99,99,99,100,100,100,100,101,101,101,102,102,102,102,103,103,103,103,104,104,104,105,105,105,105,106,106,106,106,107,107,107,108 },
        /* 38 RPM */ { 6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,12,12,13,13,14,14,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,38,38,39,40,40,41,42,42,43,44,45,45,46,47,47,48,49,50,50,51,52,52,53,54,55,55,56,57,57,58,59,60,60,61,62,62,63,64,65,65,66,67,67,68,69,70,70,71,72,72,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,98,99,99,99,99,100,100,100,101,101,101,101,102,102,102,103,103,103,103,104,104,104,105,105,105,105,106,106,106,107,107,107,107,108,108,108,109,109,109,109,110,110,110,111,111,111,111,112,112,112 },
        /* 39 RPM */ { 6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,12,13,13,14,14,15,15,16,16,17,17,18,19,19,20,20,21,21,22,22,23,23,24,25,25,26,26,27,27,28,28,29,29,30,31,31,32,32,33,33,34,34,35,35,36,36,37,38,38,39,39,40,41,42,42,43,44,45,45,46,47,48,48,49,50,51,51,52,53,54,54,55,56,57,57,58,59,60,60,61,62,63,63,64,65,66,66,67,68,69,69,70,71,72,72,73,74,75,75,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,100,100,101,101,102,102,102,103,103,103,104,104,104,105,105,105,105,106,106,106,107,107,107,108,108,108,108,109,109,109,110,110,110,111,111,111,111,112,112,112,113,113,113,113,114,114,114,115,115,115,116,116,116,116,117,117 },
        /* 40 RPM */ { 6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,12,12,12,13,13,14,14,15,16,16,17,17,18,18,19,20,20,21,21,22,22,23,23,24,25,25,26,26,27,27,28,29,29,30,30,31,31,32,32,33,34,34,35,35,36,36,37,38,38,39,39,40,41,41,42,43,44,45,45,46,47,48,48,49,50,51,52,52,53,54,55,56,56,57,58,59,59,60,61,62,63,63,64,65,66,67,67,68,69,70,70,71,72,73,74,74,75,76,77,78,78,79,80,80,81,81,82,82,83,83,84,85,85,86,86,87,87,88,88,89,89,90,91,91,92,92,93,93,94,94,95,95,96,96,97,98,98,99,99,100,100,101,101,102,102,103,104,104,105,105,106,106,107,107,107,107,108,108,108,109,109,109,110,110,110,111,111,111,112,112,112,113,113,113,113,114,114,114,115,115,115,116,116,116,117,117,117,117,118,118,118,119,119,119,120,120,120,121,121,121,122,122 },
        /* 41 RPM */ { 6,6,6,6,6,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,12,12,12,12,12,13,13,14,14,15,16,16,17,17,18,18,19,20,20,21,21,22,23,23,24,24,25,25,26,27,27,28,28,29,30,30,31,31,32,32,33,34,34,35,35,36,37,37,38,38,39,39,40,41,41,42,43,44,45,45,46,47,48,49,49,50,51,52,53,54,54,55,56,57,58,59,59,60,61,62,63,64,64,65,66,67,68,68,69,70,71,72,73,73,74,75,76,77,78,78,79,80,81,82,83,83,84,84,85,85,86,87,87,88,88,89,89,90,91,91,92,92,93,93,94,95,95,96,96,97,97,98,99,99,100,100,101,101,102,103,103,104,104,105,106,106,107,107,108,108,109,110,110,111,111,112,112,112,113,113,113,114,114,114,115,115,115,116,116,116,117,117,117,118,118,118,119,119,119,120,120,120,121,121,121,122,122,122,123,123,123,123,124,124,124,125,125,125,126,126,126,127,127,127,128 },
        /* 42 RPM */ { 6,6,6,6,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,14,14,15,15,16,17,17,18,18,19,20,20,21,21,22,23,23,24,24,25,26,26,27,28,28,29,29,30,31,31,32,32,33,34,34,35,35,36,37,37,38,38,39,40,40,41,41,42,43,44,44,45,46,47,48,49,50,50,51,52,53,54,55,56,56,57,58,59,60,61,62,63,63,64,65,66,67,68,69,69,70,71,72,73,74,75,76,76,77,78,79,80,81,82,82,83,84,85,86,86,87,88,88,89,90,90,91,91,92,93,93,94,94,95,96,96,97,97,98,99,99,100,100,101,102,102,103,104,104,105,105,106,107,107,108,108,109,110,110,111,111,112,113,113,114,114,115,116,116,117,117,117,118,118,118,119,119,119,120,120,120,121,121,122,122,122,123,123,123,124,124,124,125,125,125,126,126,126,127,127,127,128,128,128,129,129,130,130,130,131,131,131,132,132,132,133,133,133,134 },
        /* 43 RPM */ { 6,6,6,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,13,13,14,15,15,16,16,17,18,18,19,20,20,21,22,22,23,23,24,25,25,26,27,27,28,28,29,30,30,31,32,32,33,33,34,35,35,36,37,37,38,38,39,40,40,41,42,42,43,43,44,45,46,47,48,49,49,50,51,52,53,54,55,56,57,58,59,59,60,61,62,63,64,65,66,67,68,68,69,70,71,72,73,74,75,76,77,78,78,79,80,81,82,83,84,85,86,87,87,88,89,90,91,91,92,92,93,94,94,95,96,96,97,98,98,99,100,100,101,101,102,103,103,104,105,105,106,107,107,108,109,109,110,110,111,112,112,113,114,114,115,116,116,117,117,118,119,119,120,121,121,122,122,122,123,123,124,124,124,125,125,125,126,126,126,127,127,128,128,128,129,129,129,130,130,130,131,131,132,132,132,133,133,133,134,134,134,135,135,136,136,136,137,137,137,138,138,139,139,139,140 },
        /* 44 RPM */ { 6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,14,14,15,16,16,17,18,18,19,20,20,21,22,22,23,23,24,25,25,26,27,27,28,29,29,30,31,31,32,33,33,34,34,35,36,36,37,38,38,39,40,40,41,42,42,43,44,44,45,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,93,94,95,95,96,97,97,98,99,99,100,101,101,102,103,103,104,105,105,106,107,107,108,109,109,110,111,112,112,113,114,114,115,116,116,117,118,118,119,120,120,121,122,122,123,124,124,125,126,126,127,127,128,128,128,129,129,129,130,130,131,131,131,132,132,133,133,133,134,134,134,135,135,136,136,136,137,137,137,138,138,139,139,139,140,140,141,141,141,142,142,142,143,143,144,144,144,145,145,146 },
        /* 45 RPM */ { 6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,15,15,16,17,17,18,19,19,20,21,21,22,23,23,24,25,25,26,27,28,28,29,30,30,31,32,32,33,34,34,35,36,36,37,38,38,39,40,40,41,42,42,43,44,44,45,46,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,97,98,99,100,100,101,102,102,103,104,104,105,106,107,107,108,109,109,110,111,112,112,113,114,114,115,116,117,117,118,119,119,120,121,121,122,123,124,124,125,126,126,127,128,129,129,130,131,131,132,132,133,133,133,134,134,135,135,135,136,136,137,137,137,138,138,139,139,139,140,140,141,141,141,142,142,143,143,143,144,144,145,145,145,146,146,147,147,147,148,148,149,149,149,150,150,151,151,151 },
        /* 46 RPM */ { 7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,15,15,16,17,17,18,19,19,20,21,21,22,23,23,24,25,26,26,27,28,28,29,30,30,31,32,32,33,34,35,35,36,37,37,38,39,39,40,41,41,42,43,43,44,45,46,46,47,48,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,102,103,104,105,105,106,107,108,108,109,110,110,111,112,113,113,114,115,116,116,117,118,119,119,120,121,122,122,123,124,125,125,126,127,128,128,129,130,131,131,132,133,133,134,135,136,136,137,137,138,138,139,139,139,140,140,141,141,141,142,142,143,143,144,144,144,145,145,146,146,146,147,147,148,148,149,149,149,150,150,151,151,151,152,152,153,153,154,154,154,155,155,156,156,157,157,157 },
        /* 47 RPM */ { 7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,15,16,16,17,18,18,19,20,21,21,22,23,23,24,25,26,26,27,28,28,29,30,31,31,32,33,33,34,35,36,36,37,38,38,39,40,40,41,42,43,43,44,45,45,46,47,48,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,103,104,105,106,107,107,108,109,110,110,111,112,113,114,114,115,116,117,117,118,119,120,121,121,122,123,124,124,125,126,127,128,128,129,130,131,131,132,133,134,134,135,136,137,138,138,139,140,141,141,142,142,143,143,144,144,145,145,145,146,146,147,147,148,148,148,149,149,150,150,151,151,151,152,152,153,153,154,154,155,155,155,156,156,157,157,158,158,158,159,159,160,160,161,161,162,162,162,163,163 },
        /* 48 RPM */ { 7,7,7,7,7,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,15,15,16,17,17,18,19,20,20,21,22,23,23,24,25,26,26,27,28,28,29,30,31,31,32,33,34,34,35,36,37,37,38,39,39,40,41,42,42,43,44,45,45,46,47,47,48,49,50,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,109,110,111,112,113,113,114,115,116,117,117,118,119,120,121,121,122,123,124,125,125,126,127,128,129,130,130,131,132,133,134,134,135,136,137,138,138,139,140,141,142,142,143,144,145,146,147,147,147,148,148,149,149,150,150,151,151,151,152,152,153,153,154,154,155,155,156,156,156,157,157,158,158,159,159,160,160,161,161,161,162,162,163,163,164,164,165,165,166,166,166,167,167,168,168,169,169 },
        /* 49 RPM */ { 7,7,7,7,8,8,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,15,15,15,16,16,17,18,19,19,20,21,22,22,23,24,25,25,26,27,28,28,29,30,31,31,32,33,34,34,35,36,37,37,38,39,40,41,41,42,43,44,44,45,46,47,47,48,49,50,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,78,79,80,81,82,83,84,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,115,116,117,118,119,120,120,121,122,123,124,125,125,126,127,128,129,130,130,131,132,133,134,135,136,136,137,138,139,140,141,141,142,143,144,145,146,146,147,148,149,150,151,152,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,168,169,169,170,170,171,171,172,172,173,173,174,174,175,175 },
        /* 50 RPM */ { 7,7,7,8,8,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,15,15,15,15,15,16,17,18,18,19,20,21,21,22,23,24,25,25,26,27,28,28,29,30,31,32,32,33,34,35,35,36,37,38,38,39,40,41,42,42,43,44,45,45,46,47,48,49,49,50,51,52,52,53,54,55,56,57,59,60,61,62,63,65,66,67,68,69,70,72,73,74,75,76,78,79,80,81,82,83,85,86,87,88,89,90,92,93,94,95,96,98,99,100,101,102,103,105,106,107,108,109,110,112,113,114,115,115,116,117,118,119,120,121,122,122,123,124,125,126,127,128,129,129,130,131,132,133,134,135,136,136,137,138,139,140,141,142,143,143,144,145,146,147,148,149,150,150,151,152,153,154,155,156,157,157,158,158,159,159,160,160,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,169,169,170,170,171,171,172,172,173,173,174,174,175,175,176,176,177,177,178,178,179,179,180,180,181,181 },
        /* 51 RPM */ { 7,7,7,8,8,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,13,13,14,14,14,14,14,14,15,15,15,15,15,15,16,17,18,19,19,20,21,22,23,23,24,25,26,27,27,28,29,30,31,31,32,33,34,35,35,36,37,38,39,39,40,41,42,43,43,44,45,46,47,47,48,49,50,51,51,52,53,54,55,55,57,58,59,60,61,63,64,65,66,68,69,70,71,72,74,75,76,77,79,80,81,82,83,85,86,87,88,90,91,92,93,94,96,97,98,99,101,102,103,104,105,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,126,127,128,129,130,131,132,133,134,135,136,137,137,138,139,140,141,142,143,144,145,146,147,147,148,149,150,151,152,153,154,155,156,157,158,158,159,160,161,162,163,163,164,164,165,165,166,166,167,167,168,168,169,169,170,170,171,171,172,172,173,174,174,175,175,176,176,177,177,178,178,179,179,180,180,181,181,182,182,183,183,184,184,185,185,186,187,187,188,188 },
        /* 52 RPM */ { 7,7,8,8,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,13,13,14,14,14,14,14,14,15,15,15,15,15,15,16,16,17,18,19,20,21,21,22,23,24,25,25,26,27,28,29,30,30,31,32,33,34,34,35,36,37,38,39,39,40,41,42,43,44,44,45,46,47,48,48,49,50,51,52,53,53,54,55,56,57,58,59,60,62,63,64,66,67,68,69,71,72,73,74,76,77,78,79,81,82,83,85,86,87,88,90,91,92,93,95,96,97,98,100,101,102,104,105,106,107,109,110,111,112,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,168,169,169,170,170,171,171,172,173,173,174,174,175,175,176,176,177,178,178,179,179,180,180,181,181,182,182,183,184,184,185,185,186,186,187,187,188,189,189,190,190,191,191,192,192,193,193,194,195,195 },
        /* 53 RPM */ { 7,7,8,8,8,8,8,8,9,9,9,9,9,10,10,10,10,10,10,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,13,13,14,14,14,14,14,14,15,15,15,15,15,15,16,16,17,17,18,19,20,21,22,22,23,24,25,26,27,28,28,29,30,31,32,33,33,34,35,36,37,38,39,39,40,41,42,43,44,44,45,46,47,48,49,50,50,51,52,53,54,55,55,56,57,58,59,61,62,63,65,66,67,68,70,71,72,74,75,76,78,79,80,82,83,84,86,87,88,90,91,92,93,95,96,97,99,100,101,103,104,105,107,108,109,111,112,113,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,174,175,175,176,177,177,178,178,179,180,180,181,181,182,182,183,184,184,185,185,186,187,187,188,188,189,189,190,191,191,192,192,193,193,194,195,195,196,196,197,198,198,199,199,200,200,201,202,202 },
        /* 54 RPM */ { 7,8,8,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,13,14,14,14,14,14,14,15,15,15,15,15,15,16,16,16,17,18,18,19,20,21,22,23,24,25,25,26,27,28,29,30,31,32,32,33,34,35,36,37,38,38,39,40,41,42,43,44,45,45,46,47,48,49,50,51,52,52,53,54,55,56,57,58,58,59,61,62,63,65,66,67,69,70,72,73,74,76,77,78,80,81,82,84,85,87,88,89,91,92,93,95,96,97,99,100,101,103,104,106,107,108,110,111,112,114,115,116,118,119,120,122,123,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,179,180,181,181,182,182,183,184,184,185,185,186,187,187,188,188,189,190,190,191,192,192,193,193,194,195,195,196,196,197,198,198,199,199,200,201,201,202,203,203,204,204,205,206,206,207,207,208,209,209 },
        /* 55 RPM */ { 7,8,8,8,8,8,8,9,9,9,9,9,10,10,10,10,10,10,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,13,13,14,14,14,14,14,14,15,15,15,15,15,16,16,16,16,17,18,19,20,21,21,22,23,24,25,26,27,28,29,29,30,31,32,33,34,35,36,37,37,38,39,40,41,42,43,44,45,46,46,47,48,49,50,51,52,53,54,54,55,56,57,58,59,60,61,62,63,65,66,68,69,71,72,73,75,76,78,79,80,82,83,85,86,87,89,90,92,93,94,96,97,99,100,101,103,104,106,107,108,110,111,113,114,115,117,118,120,121,122,124,125,127,128,129,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,185,186,187,187,188,189,189,190,191,191,192,193,193,194,194,195,196,196,197,198,198,199,200,200,201,202,202,203,203,204,205,205,206,207,207,208,209,209,210,211,211,212,212,213,214,214,215,216,216 },
        /* 56 RPM */ { 8,8,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,13,13,14,14,14,14,14,14,15,15,15,15,15,15,16,16,16,16,17,18,19,20,21,22,23,24,24,25,26,27,28,29,30,31,32,33,34,35,35,36,37,38,39,40,41,42,43,44,45,46,46,47,48,49,50,51,52,53,54,55,56,57,57,58,59,60,61,62,63,65,66,68,69,71,72,74,75,77,78,79,81,82,84,85,87,88,90,91,92,94,95,97,98,100,101,103,104,106,107,108,110,111,113,114,116,117,119,120,121,123,124,126,127,129,130,132,133,134,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,188,189,190,190,191,192,192,193,194,194,195,196,196,197,198,198,199,200,200,201,202,203,203,204,205,205,206,207,207,208,209,209,210,211,211,212,213,213,214,215,215,216,217,217,218,219,219,220,221,221,222,223,223 },
        /* 57 RPM */ { 8,8,8,8,8,8,9,9,9,9,9,10,10,10,10,10,10,11,11,11,11,11,11,12,12,12,12,12,13,13,13,13,13,13,14,14,14,14,14,14,15,15,15,15,15,15,16,16,16,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,61,62,63,65,66,68,69,71,72,74,75,77,78,80,81,83,84,86,87,89,90,92,93,95,96,98,99,101,102,104,105,107,108,110,111,113,114,116,117,119,120,122,123,125,126,128,129,131,132,134,135,137,138,139,140,142,143,144,145,146,147,148,150,151,152,153,154,155,156,158,159,160,161,162,163,164,166,167,168,169,170,171,172,174,175,176,177,178,179,180,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,197,198,199,199,200,201,202,202,203,204,204,205,206,207,207,208,209,209,210,211,211,212,213,214,214,215,216,216,217,218,218,219,220,221,221,222,223,223,224,225,226,226,227,228,228,229,230,230 },
        /* 58 RPM */ { 8,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,13,13,14,14,14,14,14,15,15,15,15,15,15,16,16,16,16,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,72,74,75,77,79,80,82,83,85,86,88,89,91,92,94,96,97,99,100,102,103,105,106,108,109,111,112,114,116,117,119,120,122,123,125,126,128,129,131,132,134,136,137,139,140,142,143,144,145,146,148,149,150,151,152,154,155,156,157,158,159,161,162,163,164,165,167,168,169,170,171,172,174,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,193,194,195,196,197,198,200,201,202,202,203,204,204,205,206,207,207,208,209,210,210,211,212,213,213,214,215,215,216,217,218,218,219,220,221,221,222,223,224,224,225,226,226,227,228,229,229,230,231,232,232,233,234,235,235,236,237,237 },
        /* 59 RPM */ { 8,8,8,8,8,9,9,9,9,9,10,10,10,10,10,10,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,13,13,14,14,14,14,14,15,15,15,15,15,15,16,16,16,16,16,16,17,18,19,20,21,22,23,24,25,26,27,28,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,71,72,74,76,77,79,80,82,83,85,87,88,90,91,93,95,96,98,99,101,103,104,106,107,109,110,112,114,115,117,118,120,122,123,125,126,128,129,131,133,134,136,137,139,141,142,144,145,147,148,149,150,151,153,154,155,156,158,159,160,161,162,164,165,166,167,168,170,171,172,173,175,176,177,178,179,181,182,183,184,186,187,188,189,190,192,193,194,195,197,198,199,200,201,203,204,205,206,207,208,209,209,210,211,212,212,213,214,215,215,216,217,218,219,219,220,221,222,222,223,224,225,225,226,227,228,228,229,230,231,232,232,233,234,235,235,236,237,238,238,239,240,241,241,242,243,244,245 },
        /* 60 RPM */ { 8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,13,14,14,14,14,14,14,15,15,15,15,15,16,16,16,16,16,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,71,72,74,76,77,79,80,82,84,85,87,89,90,92,93,95,97,98,100,102,103,105,107,108,110,111,113,115,116,118,120,121,123,124,126,128,129,131,133,134,136,138,139,141,142,144,146,147,149,150,151,153,154,155,156,158,159,160,162,163,164,165,167,168,169,170,172,173,174,175,177,178,179,180,182,183,184,185,187,188,189,190,192,193,194,195,197,198,199,201,202,203,204,206,207,208,209,211,212,213,213,214,215,216,217,217,218,219,220,221,221,222,223,224,225,225,226,227,228,229,229,230,231,232,233,233,234,235,236,236,237,238,239,240,240,241,242,243,244,244,245,246,247,248,248,249,250,251,252 },
        /* 61 RPM */ { 8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,11,11,11,11,11,11,12,12,12,12,12,13,13,13,13,13,14,14,14,14,14,14,15,15,15,15,15,16,16,16,16,16,17,17,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,72,74,75,77,79,80,82,84,85,87,89,90,92,94,95,97,99,100,102,104,105,107,109,110,112,114,115,117,119,120,122,124,125,127,129,130,132,134,135,137,139,140,142,144,145,147,149,150,152,153,155,156,157,159,160,161,163,164,165,167,168,169,171,172,173,175,176,177,179,180,181,182,184,185,186,188,189,190,192,193,194,196,197,198,200,201,202,204,205,206,208,209,210,212,213,214,215,217,218,219,220,221,221,222,223,224,225,226,226,227,228,229,230,230,231,232,233,234,235,235,236,237,238,239,239,240,241,242,243,244,244,245,246,247,248,249,249,250,251,252,253,253,254,255,256,257,258,258,259 },
        /* 62 RPM */ { 8,8,8,8,8,9,9,9,9,9,10,10,10,10,10,11,11,11,11,11,12,12,12,12,12,13,13,13,13,13,13,14,14,14,14,14,15,15,15,15,15,16,16,16,16,16,17,17,17,17,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,72,73,75,77,78,80,82,83,85,87,89,90,92,94,95,97,99,101,102,104,106,107,109,111,113,114,116,118,119,121,123,124,126,128,130,131,133,135,136,138,140,142,143,145,147,148,150,152,154,155,157,158,159,161,162,164,165,166,168,169,170,172,173,175,176,177,179,180,182,183,184,186,187,188,190,191,193,194,195,197,198,200,201,202,204,205,206,208,209,211,212,213,215,216,218,219,220,222,223,224,225,226,227,228,229,230,230,231,232,233,234,235,235,236,237,238,239,240,241,241,242,243,244,245,246,246,247,248,249,250,251,252,252,253,254,255,256,257,257,258,259,260,261,262,263,263,264,265,266,267 },
        /* 63 RPM */ { 8,8,8,8,8,9,9,9,9,9,10,10,10,10,10,11,11,11,11,11,12,12,12,12,12,13,13,13,13,13,14,14,14,14,14,15,15,15,15,15,16,16,16,16,16,17,17,17,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,73,75,76,78,80,82,83,85,87,88,90,92,94,95,97,99,101,102,104,106,108,109,111,113,115,116,118,120,122,123,125,127,129,130,132,134,136,137,139,141,143,144,146,148,150,151,153,155,157,158,160,161,163,164,166,167,169,170,171,173,174,176,177,179,180,182,183,184,186,187,189,190,192,193,195,196,197,199,200,202,203,205,206,208,209,210,212,213,215,216,218,219,221,222,223,225,226,228,229,231,232,232,233,234,235,236,237,238,239,239,240,241,242,243,244,245,246,246,247,248,249,250,251,252,253,253,254,255,256,257,258,259,260,260,261,262,263,264,265,266,267,267,268,269,270,271,272,273,273,274 },
        /* 64 RPM */ { 8,8,8,8,8,9,9,9,9,9,10,10,10,10,10,11,11,11,11,11,12,12,12,12,13,13,13,13,13,14,14,14,14,14,15,15,15,15,15,16,16,16,16,16,17,17,17,17,18,18,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,74,76,78,79,81,83,85,87,88,90,92,94,95,97,99,101,103,104,106,108,110,112,113,115,117,119,120,122,124,126,128,129,131,133,135,137,138,140,142,144,146,147,149,151,153,154,156,158,160,162,163,165,166,168,169,171,172,174,175,177,178,180,181,183,184,186,187,189,190,192,193,195,196,198,199,201,202,204,205,207,208,210,211,213,214,216,217,219,220,222,223,225,226,228,229,231,232,234,235,237,238,239,240,241,241,242,243,244,245,246,247,248,249,250,250,251,252,253,254,255,256,257,258,259,259,260,261,262,263,264,265,266,267,268,268,269,270,271,272,273,274,275,276,277,277,278,279,280,281,282 },
        /* 65 RPM */ { 7,8,8,8,8,9,9,9,9,9,10,10,10,10,10,11,11,11,11,12,12,12,12,12,13,13,13,13,13,14,14,14,14,15,15,15,15,15,16,16,16,16,17,17,17,17,17,18,18,18,18,19,20,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,75,77,79,81,83,84,86,88,90,92,94,95,97,99,101,103,104,106,108,110,112,114,115,117,119,121,123,125,126,128,130,132,134,136,137,139,141,143,145,146,148,150,152,154,156,157,159,161,163,165,166,168,169,171,173,174,176,177,179,180,182,184,185,187,188,190,191,193,195,196,198,199,201,202,204,206,207,209,210,212,213,215,217,218,220,221,223,224,226,228,229,231,232,234,235,237,239,240,242,243,244,245,246,247,248,249,250,251,252,253,253,254,255,256,257,258,259,260,261,262,263,264,265,265,266,267,268,269,270,271,272,273,274,275,276,277,278,278,279,280,281,282,283,284,285,286,287,288,289,290 },
        /* 66 RPM */ { 7,8,8,8,8,8,9,9,9,9,10,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,13,14,14,14,14,15,15,15,15,15,16,16,16,16,17,17,17,17,17,18,18,18,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,74,75,76,78,80,82,84,86,88,90,91,93,95,97,99,101,103,104,106,108,110,112,114,116,118,119,121,123,125,127,129,131,132,134,136,138,140,142,144,146,147,149,151,153,155,157,159,160,162,164,166,168,170,171,173,174,176,178,179,181,183,184,186,188,189,191,192,194,196,197,199,201,202,204,205,207,209,210,212,214,215,217,219,220,222,223,225,227,228,230,232,233,235,237,238,240,241,243,245,246,248,250,251,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,290,291,292,293,294,295,296,297 },
        /* 67 RPM */ { 7,8,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,17,18,18,18,18,19,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,50,51,52,53,54,55,56,58,59,60,61,62,63,64,66,67,68,69,70,71,72,74,75,76,78,80,82,83,85,87,89,91,93,95,97,99,101,102,104,106,108,110,112,114,116,118,120,122,123,125,127,129,131,133,135,137,139,141,143,144,146,148,150,152,154,156,158,160,162,163,165,167,169,171,173,174,176,178,180,181,183,185,186,188,190,191,193,195,197,198,200,202,203,205,207,208,210,212,213,215,217,219,220,222,224,225,227,229,230,232,234,236,237,239,241,242,244,246,247,249,251,252,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305 },
        /* 68 RPM */ { 7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,17,18,18,18,18,19,19,19,20,21,23,24,25,26,27,28,30,31,32,33,34,35,36,38,39,40,41,42,43,45,46,47,48,49,50,52,53,54,55,56,57,59,60,61,62,63,64,65,67,68,69,70,71,72,74,75,76,77,79,81,83,85,87,89,91,93,95,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,131,133,135,137,139,141,143,145,147,149,151,153,155,157,159,161,163,165,166,168,170,172,174,176,178,180,181,183,185,187,188,190,192,194,195,197,199,201,202,204,206,208,209,211,213,215,216,218,220,222,223,225,227,229,231,232,234,236,238,239,241,243,245,246,248,250,252,253,255,257,259,260,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312 },
        /* 69 RPM */ { 7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,21,22,23,24,25,26,28,29,30,31,32,34,35,36,37,38,39,41,42,43,44,45,46,48,49,50,51,52,54,55,56,57,58,59,61,62,63,64,65,66,68,69,70,71,72,74,75,76,77,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,169,171,173,175,177,179,181,183,185,187,188,190,192,194,196,197,199,201,203,205,207,208,210,212,214,216,217,219,221,223,225,227,228,230,232,234,236,238,239,241,243,245,247,248,250,252,254,256,258,259,261,263,265,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320 },
        /* 70 RPM */ { 7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,21,22,23,24,26,27,28,29,30,32,33,34,35,36,38,39,40,41,42,44,45,46,47,48,50,51,52,53,54,56,57,58,59,60,62,63,64,65,66,67,69,70,71,72,73,75,76,77,78,79,81,83,85,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,175,177,179,181,182,184,186,188,190,192,194,196,198,199,201,203,205,207,209,211,213,214,216,218,220,222,224,226,228,230,231,233,235,237,239,241,243,245,247,248,250,252,254,256,258,260,262,263,265,267,269,271,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327 },
        /* 71 RPM */ { 7,8,8,8,8,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,22,23,24,25,27,28,29,30,32,33,34,35,36,38,39,40,41,43,44,45,46,47,49,50,51,52,54,55,56,57,58,60,61,62,63,65,66,67,68,70,71,72,73,74,76,77,78,79,81,82,84,86,88,90,92,94,96,98,100,103,105,107,109,111,113,115,117,119,121,123,125,127,130,132,134,136,138,140,142,144,146,148,150,152,154,157,159,161,163,165,167,169,171,173,175,177,179,182,184,186,188,189,191,193,195,197,199,201,203,205,207,209,211,213,214,216,218,220,222,224,226,228,230,232,234,236,238,239,241,243,245,247,249,251,253,255,257,259,261,262,264,266,268,270,272,274,276,278,280,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,335,336,337 },
        /* 72 RPM */ { 8,8,8,9,9,9,9,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,15,15,15,15,16,16,16,16,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,23,24,25,26,28,29,30,31,33,34,35,36,38,39,40,41,43,44,45,46,48,49,50,51,53,54,55,56,58,59,60,61,63,64,65,67,68,69,70,72,73,74,75,77,78,79,80,82,83,84,86,88,90,93,95,97,99,101,103,105,108,110,112,114,116,118,120,122,125,127,129,131,133,135,137,140,142,144,146,148,150,152,154,157,159,161,163,165,167,169,172,174,176,178,180,182,184,186,189,191,193,195,197,199,201,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,247,249,251,253,255,257,259,261,263,265,267,269,271,273,275,277,279,281,283,285,287,289,290,291,292,293,294,295,297,298,299,300,301,302,303,305,306,307,308,309,310,312,313,314,315,316,317,318,320,321,322,323,324,325,326,328,329,330,331,332,333,334,336,337,338,339,340,341,343,344,345,346 },
        /* 73 RPM */ { 8,9,9,9,9,10,10,10,10,11,11,11,12,12,12,12,13,13,13,14,14,14,14,15,15,15,15,16,16,16,17,17,17,17,18,18,18,18,19,19,19,20,20,20,20,21,21,21,21,22,22,23,25,26,27,28,30,31,32,34,35,36,37,39,40,41,43,44,45,46,48,49,50,52,53,54,56,57,58,59,61,62,63,65,66,67,68,70,71,72,74,75,76,77,79,80,81,83,84,85,86,89,91,93,95,97,100,102,104,106,108,110,113,115,117,119,121,124,126,128,130,132,135,137,139,141,143,145,148,150,152,154,156,159,161,163,165,167,170,172,174,176,178,180,183,185,187,189,191,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,252,254,256,258,260,262,264,266,268,270,272,274,276,278,280,282,284,286,288,290,292,294,295,297,298,299,300,301,303,304,305,306,307,309,310,311,312,313,315,316,317,318,319,321,322,323,324,325,327,328,329,330,331,333,334,335,336,337,338,340,341,342,343,344,346,347,348,349,350,352,353,354,355 },
        /* 74 RPM */ { 9,9,9,10,10,10,10,11,11,11,12,12,12,12,13,13,13,13,14,14,14,15,15,15,15,16,16,16,17,17,17,17,18,18,18,19,19,19,19,20,20,20,21,21,21,21,22,22,22,23,23,24,25,27,28,29,31,32,33,35,36,37,39,40,41,43,44,45,47,48,49,50,52,53,54,56,57,58,60,61,62,64,65,66,68,69,70,72,73,74,76,77,78,80,81,82,83,85,86,87,89,91,93,95,98,100,102,104,107,109,111,113,116,118,120,122,125,127,129,131,134,136,138,140,143,145,147,149,152,154,156,158,161,163,165,167,169,172,174,176,178,181,183,185,187,190,192,194,196,199,201,203,205,207,209,211,213,215,217,219,221,223,225,227,229,231,233,235,237,239,241,244,246,248,250,252,254,256,258,260,262,264,266,268,270,272,274,276,278,280,282,284,286,288,290,292,294,296,298,300,302,304,305,306,307,309,310,311,312,314,315,316,317,319,320,321,322,324,325,326,327,328,330,331,332,333,335,336,337,338,340,341,342,343,345,346,347,348,350,351,352,353,355,356,357,358,359,361,362,363,364 },
        /* 75 RPM */ { 9,9,10,10,10,11,11,11,11,12,12,12,13,13,13,13,14,14,14,15,15,15,15,16,16,16,17,17,17,18,18,18,18,19,19,19,20,20,20,20,21,21,21,22,22,22,22,23,23,23,24,25,26,28,29,30,32,33,34,36,37,38,40,41,42,44,45,47,48,49,51,52,53,55,56,57,59,60,61,63,64,65,67,68,69,71,72,74,75,76,78,79,80,82,83,84,86,87,88,90,91,93,96,98,100,103,105,107,109,112,114,116,119,121,123,126,128,130,132,135,137,139,142,144,146,149,151,153,155,158,160,162,165,167,169,171,174,176,178,181,183,185,188,190,192,194,197,199,201,204,206,208,210,212,214,216,218,220,222,225,227,229,231,233,235,237,239,241,243,245,247,249,251,253,256,258,260,262,264,266,268,270,272,274,276,278,280,282,285,287,289,291,293,295,297,299,301,303,305,307,309,311,312,313,314,316,317,318,320,321,322,323,325,326,327,329,330,331,332,334,335,336,338,339,340,342,343,344,345,347,348,349,351,352,353,354,356,357,358,360,361,362,363,365,366,367,369,370,371,372,374 },
        /* 76 RPM */ { 10,10,10,10,11,11,11,12,12,12,12,13,13,13,14,14,14,15,15,15,15,16,16,16,17,17,17,18,18,18,18,19,19,19,20,20,20,20,21,21,21,22,22,22,23,23,23,23,24,24,24,26,27,28,30,31,33,34,35,37,38,40,41,42,44,45,46,48,49,51,52,53,55,56,57,59,60,62,63,64,66,67,69,70,71,73,74,75,77,78,80,81,82,84,85,87,88,89,91,92,93,96,98,100,103,105,108,110,112,115,117,119,122,124,126,129,131,133,136,138,140,143,145,148,150,152,155,157,159,162,164,166,169,171,173,176,178,180,183,185,187,190,192,195,197,199,202,204,206,209,211,213,215,217,219,222,224,226,228,230,232,234,236,238,240,243,245,247,249,251,253,255,257,259,262,264,266,268,270,272,274,276,278,280,283,285,287,289,291,293,295,297,299,302,304,306,308,310,312,314,316,318,319,320,322,323,324,326,327,328,330,331,332,334,335,336,338,339,340,342,343,344,346,347,348,350,351,352,354,355,356,358,359,360,362,363,364,366,367,368,370,371,372,374,375,376,378,379,380,382,383 },
        /* 77 RPM */ { 10,10,11,11,11,11,12,12,12,13,13,13,14,14,14,14,15,15,15,16,16,16,17,17,17,18,18,18,18,19,19,19,20,20,20,21,21,21,21,22,22,22,23,23,23,24,24,24,25,25,25,27,28,29,31,32,34,35,36,38,39,41,42,43,45,46,48,49,51,52,53,55,56,58,59,60,62,63,65,66,67,69,70,72,73,75,76,77,79,80,82,83,84,86,87,89,90,92,93,94,96,98,101,103,105,108,110,113,115,117,120,122,125,127,129,132,134,137,139,141,144,146,149,151,153,156,158,161,163,166,168,170,173,175,178,180,182,185,187,190,192,194,197,199,202,204,206,209,211,214,216,218,220,222,225,227,229,231,233,235,237,240,242,244,246,248,250,252,255,257,259,261,263,265,267,270,272,274,276,278,280,282,285,287,289,291,293,295,297,300,302,304,306,308,310,312,315,317,319,321,323,325,326,327,329,330,331,333,334,336,337,338,340,341,342,344,345,347,348,349,351,352,354,355,356,358,359,360,362,363,365,366,367,369,370,371,373,374,376,377,378,380,381,383,384,385,387,388,389,391,392 },
        /* 78 RPM */ { 10,11,11,11,12,12,12,13,13,13,13,14,14,14,15,15,15,16,16,16,17,17,17,18,18,18,18,19,19,19,20,20,20,21,21,21,22,22,22,22,23,23,23,24,24,24,25,25,25,26,26,27,29,30,32,33,35,36,37,39,40,42,43,45,46,48,49,50,52,53,55,56,58,59,61,62,63,65,66,68,69,71,72,74,75,76,78,79,81,82,84,85,87,88,89,91,92,94,95,97,98,101,103,105,108,110,113,115,118,120,123,125,128,130,133,135,137,140,142,145,147,150,152,155,157,160,162,165,167,169,172,174,177,179,182,184,187,189,192,194,197,199,201,204,206,209,211,214,216,219,221,223,225,228,230,232,234,236,239,241,243,245,247,249,252,254,256,258,260,263,265,267,269,271,273,276,278,280,282,284,286,289,291,293,295,297,300,302,304,306,308,310,313,315,317,319,321,324,326,328,330,332,333,334,336,337,339,340,341,343,344,346,347,349,350,351,353,354,356,357,359,360,361,363,364,366,367,369,370,371,373,374,376,377,379,380,381,383,384,386,387,389,390,391,393,394,396,397,399,400,401 },
        /* 79 RPM */ { 11,11,11,12,12,12,13,13,13,14,14,14,15,15,15,16,16,16,16,17,17,17,18,18,18,19,19,19,20,20,20,21,21,21,22,22,22,23,23,23,23,24,24,24,25,25,25,26,26,26,27,28,30,31,33,34,35,37,38,40,41,43,44,46,47,49,50,52,53,55,56,58,59,61,62,64,65,66,68,69,71,72,74,75,77,78,80,81,83,84,86,87,89,90,92,93,95,96,97,99,100,103,105,108,110,113,115,118,121,123,126,128,131,133,136,138,141,143,146,148,151,153,156,158,161,163,166,168,171,173,176,178,181,183,186,188,191,193,196,199,201,204,206,209,211,214,216,219,221,224,226,228,231,233,235,237,239,242,244,246,248,251,253,255,257,259,262,264,266,268,271,273,275,277,279,282,284,286,288,290,293,295,297,299,302,304,306,308,310,313,315,317,319,321,324,326,328,330,333,335,337,338,340,341,343,344,346,347,349,350,352,353,355,356,358,359,361,362,364,365,366,368,369,371,372,374,375,377,378,380,381,383,384,386,387,389,390,391,393,394,396,397,399,400,402,403,405,406,408,409,411 },
        /* 80 RPM */ { 11,12,12,12,13,13,13,13,14,14,14,15,15,15,16,16,16,17,17,17,18,18,18,19,19,19,20,20,20,21,21,21,22,22,22,23,23,23,24,24,24,25,25,25,25,26,26,26,27,27,27,29,30,32,33,35,36,38,39,41,42,44,45,47,49,50,52,53,55,56,58,59,61,62,64,65,67,68,70,71,73,74,76,77,79,80,82,83,85,86,88,89,91,92,94,95,97,98,100,101,103,105,108,110,113,116,118,121,123,126,128,131,134,136,139,141,144,146,149,152,154,157,159,162,164,167,170,172,175,177,180,182,185,188,190,193,195,198,200,203,206,208,211,213,216,218,221,224,226,229,231,234,236,238,240,243,245,247,249,252,254,256,258,261,263,265,267,270,272,274,276,279,281,283,285,288,290,292,294,297,299,301,303,306,308,310,312,315,317,319,321,324,326,328,330,333,335,337,339,342,344,345,347,348,350,352,353,355,356,358,359,361,362,364,365,367,368,370,371,373,374,376,377,379,380,382,383,385,386,388,390,391,393,394,396,397,399,400,402,403,405,406,408,409,411,412,414,415,417,418,420 },
        /* 81 RPM */ { 11,12,12,12,13,13,13,14,14,14,15,15,15,16,16,16,17,17,17,18,18,18,19,19,19,20,20,20,21,21,21,22,22,22,23,23,23,24,24,24,25,25,25,26,26,26,27,27,27,28,28,30,31,33,34,36,37,39,40,42,44,45,47,48,50,51,53,54,56,57,59,61,62,64,65,67,68,70,71,73,74,76,78,79,81,82,84,85,87,88,90,91,93,95,96,98,99,101,102,104,105,108,111,113,116,118,121,124,126,129,132,134,137,139,142,145,147,150,152,155,158,160,163,166,168,171,173,176,179,181,184,187,189,192,194,197,200,202,205,208,210,213,215,218,221,223,226,229,231,234,236,239,241,243,246,248,250,253,255,257,260,262,264,267,269,271,274,276,278,281,283,285,288,290,292,295,297,299,302,304,306,309,311,313,316,318,320,323,325,327,330,332,334,337,339,341,344,346,348,351,353,354,356,357,359,361,362,364,365,367,368,370,371,373,374,376,377,379,380,382,383,385,386,388,389,391,393,394,396,397,399,400,402,403,405,406,408,409,411,412,414,415,417,418,420,421,423,424,426,428,429 },
        /* 82 RPM */ { 12,12,12,13,13,13,14,14,14,15,15,15,16,16,17,17,17,18,18,18,19,19,19,20,20,20,21,21,21,22,22,22,23,23,23,24,24,24,25,25,25,26,26,26,27,27,27,28,28,28,29,30,32,34,35,37,38,40,41,43,45,46,48,49,51,52,54,56,57,59,60,62,64,65,67,68,70,71,73,75,76,78,79,81,83,84,86,87,89,90,92,94,95,97,98,100,102,103,105,106,108,111,113,116,119,121,124,127,129,132,135,137,140,143,145,148,151,153,156,159,161,164,167,169,172,175,177,180,183,185,188,191,193,196,199,201,204,207,209,212,215,217,220,223,225,228,231,233,236,239,241,244,246,249,251,254,256,258,261,263,266,268,270,273,275,278,280,282,285,287,290,292,294,297,299,302,304,307,309,311,314,316,319,321,323,326,328,331,333,335,338,340,343,345,347,350,352,355,357,360,362,363,365,367,368,370,371,373,374,376,377,379,380,382,383,385,386,388,389,391,392,394,396,397,399,400,402,403,405,406,408,409,411,412,414,415,417,418,420,421,423,425,426,428,429,431,432,434,435,437,438 },
        /* 83 RPM */ { 12,12,13,13,13,14,14,14,15,15,16,16,16,17,17,17,18,18,18,19,19,19,20,20,20,21,21,21,22,22,22,23,23,24,24,24,25,25,25,26,26,26,27,27,27,28,28,28,29,29,29,31,33,34,36,38,39,41,42,44,46,47,49,50,52,54,55,57,59,60,62,63,65,67,68,70,72,73,75,76,78,80,81,83,85,86,88,89,91,93,94,96,98,99,101,102,104,106,107,109,110,113,116,119,121,124,127,130,132,135,138,140,143,146,149,151,154,157,159,162,165,168,170,173,176,179,181,184,187,189,192,195,198,200,203,206,208,211,214,217,219,222,225,228,230,233,236,238,241,244,247,249,252,254,257,259,261,264,266,269,271,274,276,279,281,284,286,289,291,294,296,299,301,304,306,309,311,314,316,319,321,324,326,329,331,334,336,339,341,344,346,349,351,354,356,358,361,363,366,368,371,372,374,376,377,379,380,382,383,385,386,388,389,391,392,394,395,397,398,400,402,403,405,406,408,409,411,412,414,415,417,418,420,421,423,424,426,428,429,431,432,434,435,437,438,440,441,443,444,446,447 },
        /* 84 RPM */ { 12,13,13,13,14,14,14,15,15,16,16,16,17,17,17,18,18,18,19,19,19,20,20,20,21,21,22,22,22,23,23,23,24,24,24,25,25,25,26,26,27,27,27,28,28,28,29,29,29,30,30,32,33,35,37,38,40,42,43,45,47,48,50,52,53,55,57,58,60,62,63,65,67,68,70,72,73,75,77,78,80,82,83,85,87,88,90,91,93,95,96,98,100,101,103,105,106,108,110,111,113,116,119,121,124,127,130,132,135,138,141,144,146,149,152,155,157,160,163,166,169,171,174,177,180,182,185,188,191,193,196,199,202,205,207,210,213,216,218,221,224,227,229,232,235,238,241,243,246,249,252,254,257,259,262,264,267,270,272,275,277,280,282,285,288,290,293,295,298,300,303,306,308,311,313,316,318,321,323,326,329,331,334,336,339,341,344,347,349,352,354,357,359,362,365,367,370,372,375,377,380,381,383,385,386,388,389,391,392,394,395,397,398,400,401,403,404,406,408,409,411,412,414,415,417,418,420,421,423,424,426,427,429,431,432,434,435,437,438,440,441,443,444,446,447,449,450,452,454,455,457 },
        /* 85 RPM */ { 13,13,13,14,14,14,15,15,15,16,16,17,17,17,18,18,18,19,19,19,20,20,21,21,21,22,22,22,23,23,23,24,24,25,25,25,26,26,26,27,27,27,28,28,29,29,29,30,30,30,31,32,34,36,38,39,41,43,44,46,48,49,51,53,55,56,58,60,61,63,65,66,68,70,71,73,75,77,78,80,82,83,85,87,88,90,92,94,95,97,99,100,102,104,105,107,109,111,112,114,116,118,121,124,127,130,133,135,138,141,144,147,150,152,155,158,161,164,166,169,172,175,178,181,183,186,189,192,195,197,200,203,206,209,212,214,217,220,223,226,229,231,234,237,240,243,245,248,251,254,257,259,262,265,267,270,273,275,278,281,283,286,288,291,294,296,299,302,304,307,310,312,315,318,320,323,325,328,331,333,336,339,341,344,347,349,352,355,357,360,363,365,368,370,373,376,378,381,384,386,389,390,392,394,395,397,398,400,401,403,404,406,407,409,410,412,414,415,417,418,420,421,423,424,426,427,429,430,432,434,435,437,438,440,441,443,444,446,447,449,450,452,453,455,457,458,460,461,463,464,466 },
        /* 86 RPM */ { 13,13,14,14,14,15,15,15,16,16,17,17,17,18,18,18,19,19,20,20,20,21,21,21,22,22,23,23,23,24,24,24,25,25,25,26,26,27,27,27,28,28,28,29,29,30,30,30,31,31,31,33,35,37,38,40,42,44,45,47,49,51,52,54,56,57,59,61,63,64,66,68,70,71,73,75,77,78,80,82,84,85,87,89,90,92,94,96,97,99,101,103,104,106,108,110,111,113,115,116,118,121,124,127,130,133,135,138,141,144,147,150,153,156,158,161,164,167,170,173,176,179,181,184,187,190,193,196,199,202,204,207,210,213,216,219,222,225,227,230,233,236,239,242,245,247,250,253,256,259,262,265,267,270,273,275,278,281,284,286,289,292,295,297,300,303,305,308,311,314,316,319,322,324,327,330,333,335,338,341,344,346,349,352,354,357,360,363,365,368,371,373,376,379,382,384,387,390,393,395,398,400,401,403,404,406,407,409,410,412,413,415,416,418,420,421,423,424,426,427,429,430,432,433,435,436,438,440,441,443,444,446,447,449,450,452,453,455,456,458,460,461,463,464,466,467,469,470,472,473,475 },
        /* 87 RPM */ { 13,14,14,14,15,15,15,16,16,17,17,17,18,18,18,19,19,20,20,20,21,21,21,22,22,23,23,23,24,24,25,25,25,26,26,26,27,27,28,28,28,29,29,29,30,30,31,31,31,32,32,34,36,37,39,41,43,45,46,48,50,52,53,55,57,59,60,62,64,66,68,69,71,73,75,76,78,80,82,84,85,87,89,91,92,94,96,98,100,101,103,105,107,108,110,112,114,115,117,119,121,124,127,130,132,135,138,141,144,147,150,153,156,159,162,165,168,170,173,176,179,182,185,188,191,194,197,200,203,206,208,211,214,217,220,223,226,229,232,235,238,241,244,246,249,252,255,258,261,264,267,270,273,275,278,281,284,287,289,292,295,298,301,303,306,309,312,315,317,320,323,326,329,331,334,337,340,343,345,348,351,354,357,359,362,365,368,371,373,376,379,382,385,387,390,393,396,399,401,404,407,409,410,412,413,415,416,418,419,421,422,424,425,427,429,430,432,433,435,436,438,439,441,442,444,446,447,449,450,452,453,455,456,458,459,461,463,464,466,467,469,470,472,473,475,476,478,479,481,483,484 },
        /* 88 RPM */ { 13,14,14,15,15,15,16,16,16,17,17,18,18,18,19,19,20,20,20,21,21,22,22,22,23,23,23,24,24,25,25,25,26,26,27,27,27,28,28,28,29,29,30,30,30,31,31,32,32,32,33,35,36,38,40,42,44,45,47,49,51,53,55,56,58,60,62,64,65,67,69,71,73,74,76,78,80,82,84,85,87,89,91,93,94,96,98,100,102,103,105,107,109,111,113,114,116,118,120,122,123,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201,204,207,210,213,216,219,221,224,227,230,233,236,239,242,245,248,251,254,257,260,263,266,269,272,275,278,281,284,286,289,292,295,298,301,304,307,309,312,315,318,321,324,327,330,332,335,338,341,344,347,350,353,356,358,361,364,367,370,373,376,379,381,384,387,390,393,396,399,402,404,407,410,413,416,418,419,421,422,424,425,427,428,430,431,433,435,436,438,439,441,442,444,445,447,448,450,452,453,455,456,458,459,461,462,464,465,467,469,470,472,473,475,476,478,479,481,482,484,486,487,489,490,492,493 },
        /* 89 RPM */ { 14,14,14,15,15,16,16,16,17,17,18,18,18,19,19,20,20,20,21,21,22,22,22,23,23,24,24,24,25,25,26,26,26,27,27,27,28,28,29,29,29,30,30,31,31,31,32,32,33,33,33,35,37,39,41,43,45,46,48,50,52,54,56,57,59,61,63,65,67,69,70,72,74,76,78,80,82,83,85,87,89,91,93,95,96,98,100,102,104,106,107,109,111,113,115,117,119,120,122,124,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238,241,244,247,250,253,256,259,262,265,268,271,274,277,280,283,286,289,292,295,298,301,304,307,310,313,316,319,321,324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390,392,395,398,401,404,407,410,413,416,419,422,425,427,428,430,431,433,434,436,437,439,440,442,444,445,447,448,450,451,453,454,456,458,459,461,462,464,465,467,468,470,471,473,475,476,478,479,481,482,484,485,487,489,490,492,493,495,496,498,499,501,502 },
        /* 90 RPM */ { 14,14,15,15,16,16,16,17,17,18,18,18,19,19,20,20,20,21,21,22,22,22,23,23,24,24,24,25,25,26,26,26,27,27,28,28,28,29,29,30,30,30,31,31,32,32,32,33,33,34,34,36,38,40,42,44,45,47,49,51,53,55,57,59,61,62,64,66,68,70,72,74,76,78,79,81,83,85,87,89,91,93,95,96,98,100,102,104,106,108,110,112,113,115,117,119,121,123,125,127,129,132,135,138,141,144,147,150,153,156,159,162,165,169,172,175,178,181,184,187,190,193,196,199,202,205,208,212,215,218,221,224,227,230,233,236,239,242,245,248,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,307,310,313,316,319,322,325,328,331,334,337,340,343,346,349,352,355,358,361,364,367,370,373,376,379,382,385,388,392,395,398,401,404,407,410,413,416,419,422,425,428,431,434,436,437,439,440,442,443,445,446,448,450,451,453,454,456,457,459,460,462,464,465,467,468,470,471,473,474,476,477,479,481,482,484,485,487,488,490,491,493,495,496,498,499,501,502,504,505,507,509,510,512 },
        /* 91 RPM */ { 14,14,14,15,15,16,16,16,17,17,18,18,18,19,19,20,20,21,21,21,22,22,23,23,23,24,24,25,25,25,26,26,27,27,27,28,28,29,29,29,30,30,31,31,31,32,32,33,33,33,34,36,38,40,41,43,45,47,49,51,53,55,57,58,60,62,64,66,68,70,72,74,76,77,79,81,83,85,87,89,91,93,94,96,98,100,102,104,106,108,110,111,113,115,117,119,121,123,125,127,129,132,135,138,141,144,147,150,153,156,160,163,166,169,172,175,178,181,184,188,191,194,197,200,203,206,209,212,216,219,222,225,228,231,234,237,240,243,247,250,253,256,259,262,265,268,271,275,278,281,284,287,290,293,296,299,303,306,309,312,315,318,321,324,328,331,334,337,340,343,346,349,352,356,359,362,365,368,371,374,377,381,384,387,390,393,396,399,402,405,409,412,415,418,421,424,427,430,434,437,440,441,443,445,446,448,449,451,453,454,456,457,459,461,462,464,465,467,469,470,472,474,475,477,478,480,482,483,485,486,488,490,491,493,494,496,498,499,501,502,504,506,507,509,510,512,514,515,517,519,520 },
        /* 92 RPM */ { 13,14,14,15,15,15,16,16,17,17,17,18,18,19,19,19,20,20,21,21,21,22,22,23,23,23,24,24,25,25,25,26,26,27,27,28,28,28,29,29,30,30,30,31,31,32,32,32,33,33,34,36,37,39,41,43,45,47,49,51,53,54,56,58,60,62,64,66,68,70,72,73,75,77,79,81,83,85,87,89,91,92,94,96,98,100,102,104,106,108,110,111,113,115,117,119,121,123,125,127,128,132,135,138,141,144,147,150,154,157,160,163,166,169,172,176,179,182,185,188,191,194,198,201,204,207,210,213,216,220,223,226,229,232,235,238,242,245,248,251,254,257,260,263,267,270,273,276,279,282,285,289,292,295,298,301,305,308,311,314,317,321,324,327,330,333,337,340,343,346,349,353,356,359,362,366,369,372,375,378,382,385,388,391,394,398,401,404,407,410,414,417,420,423,426,430,433,436,439,442,446,447,449,451,452,454,455,457,459,460,462,464,465,467,469,470,472,474,475,477,479,480,482,484,485,487,489,490,492,494,495,497,499,500,502,504,505,507,509,510,512,514,515,517,519,520,522,524,525,527,529 },
        /* 93 RPM */ { 13,13,14,14,15,15,15,16,16,17,17,17,18,18,19,19,19,20,20,21,21,22,22,22,23,23,24,24,24,25,25,26,26,26,27,27,28,28,28,29,29,30,30,31,31,31,32,32,33,33,33,35,37,39,41,43,45,47,49,50,52,54,56,58,60,62,64,66,68,70,71,73,75,77,79,81,83,85,87,89,90,92,94,96,98,100,102,104,106,108,109,111,113,115,117,119,121,123,125,127,128,132,135,138,141,144,148,151,154,157,160,163,167,170,173,176,179,182,186,189,192,195,198,201,205,208,211,214,217,220,224,227,230,233,236,240,243,246,249,252,255,259,262,265,268,271,274,278,281,284,287,290,294,297,300,304,307,310,313,317,320,323,326,330,333,336,340,343,346,349,353,356,359,363,366,369,372,376,379,382,386,389,392,395,399,402,405,409,412,415,418,422,425,428,432,435,438,441,445,448,451,453,455,456,458,460,462,463,465,467,468,470,472,474,475,477,479,480,482,484,486,487,489,491,492,494,496,498,499,501,503,504,506,508,510,511,513,515,516,518,520,522,523,525,527,528,530,532,534,535,537 },
        /* 94 RPM */ { 13,13,13,14,14,15,15,16,16,16,17,17,18,18,18,19,19,20,20,20,21,21,22,22,22,23,23,24,24,25,25,25,26,26,27,27,27,28,28,29,29,29,30,30,31,31,31,32,32,33,33,35,37,39,41,43,45,46,48,50,52,54,56,58,60,62,64,66,67,69,71,73,75,77,79,81,83,85,87,88,90,92,94,96,98,100,102,104,106,107,109,111,113,115,117,119,121,123,125,127,128,132,135,138,141,144,148,151,154,157,161,164,167,170,173,177,180,183,186,189,193,196,199,202,205,209,212,215,218,221,225,228,231,234,237,241,244,247,250,253,257,260,263,266,269,273,276,279,282,286,289,292,295,299,302,306,309,312,316,319,322,326,329,332,336,339,343,346,349,353,356,359,363,366,370,373,376,380,383,386,390,393,396,400,403,407,410,413,417,420,423,427,430,433,437,440,444,447,450,454,457,459,461,462,464,466,468,469,471,473,475,477,478,480,482,484,485,487,489,491,492,494,496,498,500,501,503,505,507,508,510,512,514,515,517,519,521,523,524,526,528,530,531,533,535,537,538,540,542,544,546 },
        /* 95 RPM */ { 12,13,13,14,14,14,15,15,16,16,16,17,17,18,18,18,19,19,20,20,21,21,21,22,22,23,23,23,24,24,25,25,25,26,26,27,27,28,28,28,29,29,30,30,30,31,31,32,32,32,33,35,37,39,41,42,44,46,48,50,52,54,56,58,60,62,63,65,67,69,71,73,75,77,79,81,83,84,86,88,90,92,94,96,98,100,102,104,105,107,109,111,113,115,117,119,121,123,125,127,128,132,135,138,141,145,148,151,154,158,161,164,167,171,174,177,180,183,187,190,193,196,200,203,206,209,213,216,219,222,226,229,232,235,239,242,245,248,251,255,258,261,264,268,271,274,277,281,284,287,290,294,297,301,304,308,311,314,318,321,325,328,332,335,339,342,346,349,352,356,359,363,366,370,373,377,380,383,387,390,394,397,401,404,408,411,415,418,421,425,428,432,435,439,442,446,449,452,456,459,463,465,466,468,470,472,474,476,477,479,481,483,485,487,488,490,492,494,496,497,499,501,503,505,507,508,510,512,514,516,518,519,521,523,525,527,528,530,532,534,536,538,539,541,543,545,547,549,550,552,554 },
        /* 96 RPM */ { 12,12,13,13,14,14,14,15,15,16,16,17,17,17,18,18,19,19,19,20,20,21,21,21,22,22,23,23,24,24,24,25,25,26,26,26,27,27,28,28,29,29,29,30,30,31,31,31,32,32,33,35,36,38,40,42,44,46,48,50,52,54,56,58,59,61,63,65,67,69,71,73,75,77,79,81,82,84,86,88,90,92,94,96,98,100,102,103,105,107,109,111,113,115,117,119,121,123,125,126,128,132,135,138,141,145,148,151,155,158,161,164,168,171,174,177,181,184,187,191,194,197,200,204,207,210,213,217,220,223,227,230,233,236,240,243,246,249,253,256,259,263,266,269,272,276,279,282,285,289,292,295,299,303,306,310,313,317,320,324,327,331,334,338,341,345,348,352,356,359,363,366,370,373,377,380,384,387,391,394,398,401,405,409,412,416,419,423,426,430,433,437,440,444,447,451,454,458,462,465,469,470,472,474,476,478,480,482,484,485,487,489,491,493,495,497,499,500,502,504,506,508,510,512,514,516,517,519,521,523,525,527,529,531,532,534,536,538,540,542,544,546,547,549,551,553,555,557,559,561,562 },
        /* 97 RPM */ { 12,12,12,13,13,14,14,15,15,15,16,16,17,17,17,18,18,19,19,20,20,20,21,21,22,22,22,23,23,24,24,25,25,25,26,26,27,27,27,28,28,29,29,29,30,30,31,31,32,32,32,34,36,38,40,42,44,46,48,50,52,54,55,57,59,61,63,65,67,69,71,73,75,77,78,80,82,84,86,88,90,92,94,96,98,100,101,103,105,107,109,111,113,115,117,119,121,123,125,126,128,132,135,138,142,145,148,151,155,158,161,165,168,171,175,178,181,185,188,191,194,198,201,204,208,211,214,218,221,224,227,231,234,237,241,244,247,251,254,257,261,264,267,270,274,277,280,284,287,290,294,297,301,304,308,312,315,319,322,326,330,333,337,341,344,348,351,355,359,362,366,369,373,377,380,384,388,391,395,398,402,406,409,413,416,420,424,427,431,435,438,442,445,449,453,456,460,464,467,471,474,476,478,480,482,484,486,488,490,492,494,496,498,499,501,503,505,507,509,511,513,515,517,519,521,523,525,526,528,530,532,534,536,538,540,542,544,546,548,550,552,554,555,557,559,561,563,565,567,569,571 },
        /* 98 RPM */ { 11,12,12,13,13,13,14,14,15,15,15,16,16,17,17,18,18,18,19,19,20,20,20,21,21,22,22,23,23,23,24,24,25,25,25,26,26,27,27,28,28,28,29,29,30,30,30,31,31,32,32,34,36,38,40,42,44,46,48,49,51,53,55,57,59,61,63,65,67,69,71,73,74,76,78,80,82,84,86,88,90,92,94,96,98,99,101,103,105,107,109,111,113,115,117,119,121,123,124,126,128,132,135,138,142,145,148,152,155,158,162,165,168,172,175,178,182,185,188,192,195,198,202,205,208,212,215,218,222,225,228,232,235,238,242,245,248,252,255,258,262,265,268,272,275,278,282,285,289,292,295,299,303,306,310,314,317,321,325,328,332,336,340,343,347,351,354,358,362,365,369,373,377,380,384,388,391,395,399,402,406,410,414,417,421,425,428,432,436,439,443,447,451,454,458,462,465,469,473,476,480,482,484,486,488,490,492,494,496,498,500,502,504,506,508,510,512,514,516,518,520,522,524,526,528,530,532,534,536,538,540,542,544,546,548,550,552,554,556,558,560,562,563,565,567,569,571,573,575,577,579 },
        /* 99 RPM */ { 11,11,12,12,13,13,13,14,14,15,15,16,16,16,17,17,18,18,19,19,19,20,20,21,21,21,22,22,23,23,24,24,24,25,25,26,26,26,27,27,28,28,29,29,29,30,30,31,31,31,32,34,36,38,40,42,43,45,47,49,51,53,55,57,59,61,63,65,67,69,70,72,74,76,78,80,82,84,86,88,90,92,94,96,97,99,101,103,105,107,109,111,113,115,117,119,121,123,124,126,128,132,135,138,142,145,149,152,155,159,162,165,169,172,175,179,182,186,189,192,196,199,202,206,209,213,216,219,223,226,229,233,236,240,243,246,250,253,256,260,263,266,270,273,277,280,283,287,290,293,297,301,304,308,312,316,319,323,327,331,335,338,342,346,350,354,357,361,365,369,372,376,380,384,388,391,395,399,403,406,410,414,418,422,425,429,433,437,441,444,448,452,456,459,463,467,471,475,478,482,486,488,490,492,494,496,498,500,502,504,506,508,510,512,514,516,519,521,523,525,527,529,531,533,535,537,539,541,543,545,547,549,551,553,555,557,559,561,563,565,567,569,572,574,576,578,580,582,584,586,588 },
        /* 100 RPM */ { 11,11,12,12,12,13,13,14,14,14,15,15,16,16,17,17,17,18,18,19,19,19,20,20,21,21,22,22,22,23,23,24,24,25,25,25,26,26,27,27,27,28,28,29,29,30,30,30,31,31,32,34,36,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,95,97,99,101,103,105,107,109,111,113,115,117,119,121,122,124,126,128,132,135,138,142,145,149,152,156,159,162,166,169,173,176,179,183,186,190,193,196,200,203,207,210,213,217,220,224,227,230,234,237,241,244,247,251,254,258,261,264,268,271,275,278,281,285,288,292,295,298,302,306,310,314,318,322,325,329,333,337,341,345,349,353,356,360,364,368,372,376,380,383,387,391,395,399,403,407,410,414,418,422,426,430,434,438,441,445,449,453,457,461,465,468,472,476,480,484,488,492,494,496,498,500,502,504,506,508,510,513,515,517,519,521,523,525,527,529,531,534,536,538,540,542,544,546,548,550,552,554,557,559,561,563,565,567,569,571,573,575,577,580,582,584,586,588,590,592,594,596 },
        /* 101 RPM */ { 11,11,11,12,12,13,13,14,14,14,15,15,16,16,17,17,17,18,18,19,19,20,20,20,21,21,22,22,23,23,23,24,24,25,25,26,26,26,27,27,28,28,29,29,29,30,30,31,31,32,32,34,36,38,40,42,44,46,48,50,52,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,133,137,140,144,147,151,154,157,161,164,168,171,175,178,182,185,188,192,195,199,202,206,209,213,216,220,223,226,230,233,237,240,244,247,251,254,257,261,264,268,271,275,278,282,285,289,292,295,299,302,306,310,314,318,322,326,330,334,338,342,346,350,353,357,361,365,369,373,377,381,385,389,393,397,401,405,409,412,416,420,424,428,432,436,440,444,448,452,456,460,464,468,471,475,479,483,487,491,495,499,501,503,505,508,510,512,514,516,518,520,523,525,527,529,531,533,536,538,540,542,544,546,548,551,553,555,557,559,561,563,566,568,570,572,574,576,578,581,583,585,587,589,591,594,596,598,600,602,604,606 },
        /* 102 RPM */ { 11,11,11,12,12,13,13,14,14,14,15,15,16,16,17,17,18,18,18,19,19,20,20,21,21,21,22,22,23,23,24,24,24,25,25,26,26,27,27,27,28,28,29,29,30,30,31,31,31,32,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,111,113,115,117,119,121,123,125,127,129,131,135,138,142,145,149,152,156,159,163,166,170,173,177,180,184,187,191,194,198,201,205,208,212,215,219,222,226,229,233,236,240,243,247,250,254,257,261,264,268,271,275,278,282,285,289,292,296,299,303,306,310,314,318,322,326,330,334,338,342,346,350,354,358,362,366,370,374,378,382,386,390,394,398,402,406,410,414,418,422,426,430,434,438,442,446,450,454,458,462,466,470,474,478,482,486,490,494,498,502,506,509,511,513,515,517,520,522,524,526,528,531,533,535,537,539,542,544,546,548,550,553,555,557,559,561,564,566,568,570,572,575,577,579,581,583,586,588,590,592,595,597,599,601,603,606,608,610,612,614,617 },
        /* 103 RPM */ { 11,11,11,12,12,13,13,14,14,15,15,15,16,16,17,17,18,18,18,19,19,20,20,21,21,22,22,22,23,23,24,24,25,25,26,26,26,27,27,28,28,29,29,29,30,30,31,31,32,32,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,99,101,103,105,107,109,111,113,115,117,119,121,123,125,127,129,131,133,136,140,143,147,151,154,158,161,165,168,172,175,179,182,186,190,193,197,200,204,207,211,214,218,221,225,229,232,236,239,243,246,250,253,257,260,264,268,271,275,278,282,285,289,292,296,299,303,307,310,314,318,322,326,330,335,339,343,347,351,355,359,363,367,371,375,379,383,387,392,396,400,404,408,412,416,420,424,428,432,436,440,444,448,453,457,461,465,469,473,477,481,485,489,493,497,501,505,510,514,516,518,520,523,525,527,529,532,534,536,539,541,543,545,548,550,552,554,557,559,561,563,566,568,570,572,575,577,579,581,584,586,588,591,593,595,597,600,602,604,606,609,611,613,615,618,620,622,624,627 },
        /* 104 RPM */ { 11,11,11,12,12,13,13,14,14,15,15,15,16,16,17,17,18,18,19,19,19,20,20,21,21,22,22,23,23,23,24,24,25,25,26,26,27,27,27,28,28,29,29,30,30,31,31,32,32,32,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,138,142,145,149,152,156,159,163,167,170,174,177,181,185,188,192,195,199,203,206,210,213,217,221,224,228,231,235,239,242,246,249,253,256,260,264,267,271,274,278,282,285,289,292,296,300,303,307,310,314,318,322,326,331,335,339,343,347,351,355,360,364,368,372,376,380,384,388,393,397,401,405,409,413,417,422,426,430,434,438,442,446,451,455,459,463,467,471,475,480,484,488,492,496,500,504,509,513,517,521,523,526,528,530,533,535,537,539,542,544,546,549,551,553,556,558,560,563,565,567,570,572,574,577,579,581,584,586,588,590,593,595,597,600,602,604,607,609,611,614,616,618,621,623,625,628,630,632,635,637 },
        /* 105 RPM */ { 10,11,11,12,12,13,13,14,14,15,15,15,16,16,17,17,18,18,19,19,20,20,20,21,21,22,22,23,23,24,24,25,25,25,26,26,27,27,28,28,29,29,30,30,30,31,31,32,32,33,33,35,37,39,41,43,45,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,87,89,91,93,95,97,99,101,103,105,107,109,111,113,115,117,119,121,123,126,128,130,132,134,136,139,143,147,150,154,158,161,165,169,172,176,180,183,187,190,194,198,201,205,209,212,216,220,223,227,230,234,238,241,245,249,252,256,260,263,267,271,274,278,281,285,289,292,296,300,303,307,311,314,318,322,326,331,335,339,343,347,352,356,360,364,368,373,377,381,385,389,394,398,402,406,410,415,419,423,427,432,436,440,444,448,453,457,461,465,469,474,478,482,486,490,495,499,503,507,511,516,520,524,528,531,533,535,538,540,543,545,547,550,552,554,557,559,562,564,566,569,571,573,576,578,581,583,585,588,590,592,595,597,600,602,604,607,609,611,614,616,619,621,623,626,628,630,633,635,637,640,642,645,647 },
        /* 106 RPM */ { 10,11,11,12,12,13,13,14,14,15,15,16,16,16,17,17,18,18,19,19,20,20,21,21,21,22,22,23,23,24,24,25,25,26,26,27,27,27,28,28,29,29,30,30,31,31,32,32,33,33,33,35,38,40,42,44,46,48,50,52,54,56,58,60,63,65,67,69,71,73,75,77,79,81,83,85,87,90,92,94,96,98,100,102,104,106,108,110,112,114,117,119,121,123,125,127,129,131,133,135,137,141,145,148,152,156,159,163,167,171,174,178,182,185,189,193,196,200,204,207,211,215,218,222,226,230,233,237,241,244,248,252,255,259,263,266,270,274,278,281,285,289,292,296,300,303,307,311,314,318,322,326,330,335,339,343,347,352,356,360,365,369,373,377,382,386,390,394,399,403,407,412,416,420,424,429,433,437,442,446,450,454,459,463,467,471,476,480,484,489,493,497,501,506,510,514,519,523,527,531,536,538,540,543,545,548,550,553,555,557,560,562,565,567,570,572,574,577,579,582,584,587,589,592,594,596,599,601,604,606,609,611,613,616,618,621,623,626,628,630,633,635,638,640,643,645,647,650,652,655,657 },
        /* 107 RPM */ { 10,11,11,12,12,13,13,14,14,15,15,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,30,31,31,32,32,33,33,34,36,38,40,42,44,46,48,51,53,55,57,59,61,63,65,67,69,72,74,76,78,80,82,84,86,88,90,93,95,97,99,101,103,105,107,109,112,114,116,118,120,122,124,126,128,130,133,135,137,139,143,146,150,154,158,161,165,169,172,176,180,184,187,191,195,199,202,206,210,214,217,221,225,229,232,236,240,243,247,251,255,258,262,266,270,273,277,281,285,288,292,296,300,303,307,311,314,318,322,326,330,334,339,343,347,352,356,360,365,369,373,378,382,387,391,395,400,404,408,413,417,421,426,430,434,439,443,447,452,456,460,465,469,473,478,482,486,491,495,499,504,508,513,517,521,526,530,534,539,543,545,548,550,553,555,558,560,563,565,568,570,573,575,578,580,583,585,588,590,593,595,598,600,603,605,608,610,613,615,618,620,623,625,627,630,632,635,637,640,642,645,647,650,652,655,657,660,662,665,667 },
        /* 108 RPM */ { 10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,36,38,40,43,45,47,49,51,53,55,57,60,62,64,66,68,70,72,74,77,79,81,83,85,87,89,91,94,96,98,100,102,104,106,108,111,113,115,117,119,121,123,125,128,130,132,134,136,138,140,144,148,152,155,159,163,167,171,174,178,182,186,190,193,197,201,205,208,212,216,220,224,227,231,235,239,243,246,250,254,258,261,265,269,273,277,280,284,288,292,296,299,303,307,311,314,318,322,326,330,334,338,343,347,352,356,360,365,369,374,378,383,387,391,396,400,405,409,413,418,422,427,431,436,440,444,449,453,458,462,466,471,475,480,484,488,493,497,502,506,511,515,519,524,528,533,537,541,546,550,553,555,558,560,563,566,568,571,573,576,578,581,583,586,588,591,593,596,599,601,604,606,609,611,614,616,619,621,624,627,629,632,634,637,639,642,644,647,649,652,655,657,660,662,665,667,670,672,675,677 },
        /* 109 RPM */ { 10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,30,31,31,32,32,33,33,34,34,36,39,41,43,45,47,49,52,54,56,58,60,62,64,67,69,71,73,75,77,79,82,84,86,88,90,92,95,97,99,101,103,105,107,110,112,114,116,118,120,122,125,127,129,131,133,135,138,140,142,146,150,153,157,161,165,169,173,176,180,184,188,192,195,199,203,207,211,215,218,222,226,230,234,238,241,245,249,253,257,261,264,268,272,276,280,284,287,291,295,299,303,307,310,314,318,322,326,330,333,338,342,347,351,356,360,365,369,374,378,383,387,392,396,401,405,410,414,419,423,428,432,437,441,446,450,454,459,463,468,472,477,481,486,490,495,499,504,508,513,517,522,526,531,535,540,544,549,553,558,560,563,565,568,571,573,576,578,581,584,586,589,591,594,597,599,602,604,607,610,612,615,617,620,623,625,628,630,633,636,638,641,643,646,649,651,654,656,659,662,664,667,669,672,675,677,680,682,685,688 },
        /* 110 RPM */ { 10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,37,39,41,43,45,48,50,52,54,56,59,61,63,65,67,69,72,74,76,78,80,82,85,87,89,91,93,95,98,100,102,104,106,109,111,113,115,117,119,122,124,126,128,130,132,135,137,139,141,143,147,151,155,159,163,167,171,174,178,182,186,190,194,198,202,205,209,213,217,221,225,229,233,236,240,244,248,252,256,260,264,268,271,275,279,283,287,291,295,299,302,306,310,314,318,322,326,330,333,337,342,346,351,356,360,365,369,374,378,383,387,392,397,401,406,410,415,419,424,428,433,437,442,447,451,456,460,465,469,474,478,483,488,492,497,501,506,510,515,519,524,529,533,538,542,547,551,556,560,565,568,570,573,576,578,581,584,586,589,591,594,597,599,602,605,607,610,613,615,618,621,623,626,629,631,634,637,639,642,645,647,650,653,655,658,661,663,666,668,671,674,676,679,682,684,687,690,692,695,698 },
        /* 111 RPM */ { 11,11,12,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,37,40,42,44,46,49,51,53,55,57,60,62,64,66,68,71,73,75,77,80,82,84,86,88,91,93,95,97,100,102,104,106,108,111,113,115,117,119,122,124,126,128,131,133,135,137,139,142,144,146,150,154,158,162,166,170,174,178,182,186,190,194,197,201,205,209,213,217,221,225,229,233,237,241,245,249,253,257,261,265,269,273,277,281,284,288,292,296,300,304,308,312,316,320,324,328,332,336,340,344,348,353,358,362,367,372,376,381,386,390,395,399,404,409,413,418,423,427,432,437,441,446,450,455,460,464,469,474,478,483,488,492,497,501,506,511,515,520,525,529,534,539,543,548,552,557,562,566,571,576,578,581,584,586,589,592,595,597,600,603,605,608,611,614,616,619,622,624,627,630,632,635,638,641,643,646,649,651,654,657,660,662,665,668,670,673,676,678,681,684,687,689,692,695,697,700,703,706,708,711 },
        /* 112 RPM */ { 11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,38,40,43,45,47,49,52,54,56,58,61,63,65,68,70,72,74,77,79,81,83,86,88,90,92,95,97,99,101,104,106,108,110,113,115,117,119,122,124,126,128,131,133,135,138,140,142,144,147,149,153,157,161,165,169,173,177,181,185,189,193,197,201,205,209,213,217,221,225,229,233,237,241,245,249,254,258,262,266,270,274,278,282,286,290,294,298,302,306,310,314,318,322,326,330,334,338,342,346,350,355,360,364,369,374,379,383,388,393,397,402,407,412,416,421,426,430,435,440,445,449,454,459,464,468,473,478,482,487,492,497,501,506,511,516,520,525,530,534,539,544,549,553,558,563,567,572,577,582,586,589,592,595,597,600,603,606,608,611,614,617,619,622,625,628,630,633,636,639,642,644,647,650,653,655,658,661,664,666,669,672,675,677,680,683,686,688,691,694,697,699,702,705,708,710,713,716,719,721,724 },
        /* 113 RPM */ { 11,11,12,12,13,13,14,14,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,35,35,36,36,37,39,41,43,46,48,50,53,55,57,60,62,64,66,69,71,73,76,78,80,83,85,87,89,92,94,96,99,101,103,106,108,110,112,115,117,119,122,124,126,129,131,133,135,138,140,142,145,147,149,152,156,160,164,168,172,176,180,184,188,193,197,201,205,209,213,217,221,225,229,234,238,242,246,250,254,258,262,266,270,275,279,283,287,291,295,299,303,307,311,316,320,324,328,332,336,340,344,348,352,357,361,366,371,376,381,385,390,395,400,405,410,414,419,424,429,434,438,443,448,453,458,462,467,472,477,482,486,491,496,501,506,511,515,520,525,530,535,539,544,549,554,559,563,568,573,578,583,588,592,597,600,603,606,608,611,614,617,620,622,625,628,631,634,636,639,642,645,648,650,653,656,659,662,664,667,670,673,676,679,681,684,687,690,693,695,698,701,704,707,709,712,715,718,721,723,726,729,732,735,737 },
        /* 114 RPM */ { 11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,33,33,34,34,35,35,36,36,37,37,40,42,44,47,49,51,54,56,58,61,63,65,68,70,72,75,77,79,82,84,86,89,91,93,96,98,100,103,105,107,110,112,114,117,119,121,124,126,129,131,133,136,138,140,143,145,147,150,152,154,158,163,167,171,175,179,183,188,192,196,200,204,209,213,217,221,225,229,234,238,242,246,250,254,259,263,267,271,275,280,284,288,292,296,300,305,309,313,317,321,325,330,334,338,342,346,350,355,359,363,368,373,378,383,387,392,397,402,407,412,417,422,427,432,436,441,446,451,456,461,466,471,476,481,485,490,495,500,505,510,515,520,525,530,534,539,544,549,554,559,564,569,574,578,583,588,593,598,603,608,611,614,616,619,622,625,628,631,634,636,639,642,645,648,651,654,656,659,662,665,668,671,674,676,679,682,685,688,691,694,696,699,702,705,708,711,714,716,719,722,725,728,731,734,736,739,742,745,748,751 },
        /* 115 RPM */ { 11,12,12,13,13,14,14,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,32,32,33,33,34,34,35,35,36,36,37,37,38,40,43,45,47,50,52,55,57,59,62,64,66,69,71,74,76,78,81,83,86,88,90,93,95,97,100,102,105,107,109,112,114,116,119,121,124,126,128,131,133,136,138,140,143,145,147,150,152,155,157,161,165,170,174,178,182,187,191,195,199,204,208,212,216,221,225,229,233,238,242,246,250,255,259,263,267,272,276,280,284,289,293,297,301,306,310,314,318,323,327,331,335,340,344,348,352,357,361,365,369,374,379,384,389,394,399,404,409,414,419,424,429,434,439,444,449,454,459,464,469,474,479,484,489,494,499,504,509,514,519,524,529,534,539,544,549,554,559,564,569,574,579,584,589,594,599,604,609,614,619,622,624,627,630,633,636,639,642,645,648,651,654,656,659,662,665,668,671,674,677,680,683,685,688,691,694,697,700,703,706,709,712,715,717,720,723,726,729,732,735,738,741,744,747,749,752,755,758,761,764 },
        /* 116 RPM */ { 11,12,13,13,14,14,15,15,16,16,17,17,18,19,19,20,20,21,21,22,22,23,23,24,24,25,26,26,27,27,28,28,29,29,30,30,31,32,32,33,33,34,34,35,35,36,36,37,37,38,39,41,43,46,48,51,53,55,58,60,63,65,68,70,72,75,77,80,82,85,87,89,92,94,97,99,102,104,106,109,111,114,116,119,121,123,126,128,131,133,135,138,140,143,145,148,150,152,155,157,160,164,168,173,177,181,186,190,194,199,203,207,212,216,220,225,229,233,238,242,246,250,255,259,263,268,272,276,281,285,289,294,298,302,307,311,315,320,324,328,333,337,341,346,350,354,359,363,367,372,376,381,386,391,396,401,406,411,416,421,427,432,437,442,447,452,457,462,467,472,477,482,487,492,498,503,508,513,518,523,528,533,538,543,548,553,558,563,569,574,579,584,589,594,599,604,609,614,619,624,629,632,635,638,641,644,647,650,653,656,659,662,665,668,671,674,677,680,683,686,689,691,694,697,700,703,706,709,712,715,718,721,724,727,730,733,736,739,742,745,748,751,754,757,760,762,765,768,771,774,777 },
        /* 117 RPM */ { 12,12,13,13,14,14,15,16,16,17,17,18,18,19,19,20,20,21,22,22,23,23,24,24,25,25,26,27,27,28,28,29,29,30,30,31,31,32,33,33,34,34,35,35,36,36,37,38,38,39,39,42,44,47,49,52,54,56,59,61,64,66,69,71,74,76,79,81,84,86,88,91,93,96,98,101,103,106,108,111,113,116,118,121,123,125,128,130,133,135,138,140,143,145,148,150,153,155,157,160,162,167,171,176,180,184,189,193,198,202,206,211,215,220,224,228,233,237,242,246,250,255,259,264,268,272,277,281,286,290,294,299,303,308,312,316,321,325,329,334,338,343,347,351,356,360,365,369,373,378,382,387,393,398,403,408,413,418,424,429,434,439,444,449,454,460,465,470,475,480,485,491,496,501,506,511,516,521,527,532,537,542,547,552,558,563,568,573,578,583,589,594,599,604,609,614,619,625,630,635,640,643,646,649,652,655,658,661,664,667,670,673,676,679,682,685,688,691,694,697,700,703,706,709,712,715,718,721,724,727,730,733,736,739,742,745,748,751,754,757,760,763,766,769,772,775,778,781,785,788,791 },
        /* 118 RPM */ { 12,12,13,14,14,15,15,16,16,17,17,18,19,19,20,20,21,21,22,23,23,24,24,25,25,26,26,27,28,28,29,29,30,30,31,31,32,33,33,34,34,35,35,36,36,37,38,38,39,39,40,42,45,47,50,52,55,57,60,62,65,67,70,72,75,77,80,82,85,87,90,92,95,97,100,102,105,108,110,113,115,118,120,123,125,128,130,133,135,138,140,143,145,148,150,153,155,158,160,163,165,170,174,179,183,187,192,196,201,205,210,214,219,223,228,232,237,241,246,250,255,259,263,268,272,277,281,286,290,295,299,304,308,313,317,322,326,331,335,339,344,348,353,357,362,366,371,375,380,384,389,394,399,404,410,415,420,425,431,436,441,446,452,457,462,467,473,478,483,488,494,499,504,509,515,520,525,530,535,541,546,551,556,562,567,572,577,583,588,593,598,604,609,614,619,625,630,635,640,646,651,654,657,660,663,666,669,672,675,678,681,684,688,691,694,697,700,703,706,709,712,715,718,721,724,727,730,733,736,740,743,746,749,752,755,758,761,764,767,770,773,776,779,782,785,788,792,795,798,801,804 },
        /* 119 RPM */ { 12,13,13,14,14,15,15,16,17,17,18,18,19,19,20,21,21,22,22,23,23,24,25,25,26,26,27,27,28,29,29,30,30,31,31,32,33,33,34,34,35,35,36,37,37,38,38,39,39,40,41,43,46,48,51,53,56,58,61,63,66,69,71,74,76,79,81,84,86,89,91,94,97,99,102,104,107,109,112,114,117,119,122,125,127,130,132,135,137,140,142,145,147,150,153,155,158,160,163,165,168,172,177,182,186,191,195,200,204,209,213,218,222,227,231,236,241,245,250,254,259,263,268,272,277,281,286,291,295,300,304,309,313,318,322,327,331,336,341,345,350,354,359,363,368,372,377,381,386,391,395,400,406,411,416,422,427,432,438,443,448,454,459,464,470,475,480,486,491,496,502,507,512,518,523,528,534,539,544,550,555,560,566,571,576,582,587,592,598,603,608,614,619,624,630,635,640,646,651,656,662,665,668,671,674,677,680,683,686,690,693,696,699,702,705,708,711,714,718,721,724,727,730,733,736,739,742,746,749,752,755,758,761,764,767,770,774,777,780,783,786,789,792,795,798,802,805,808,811,814,817 },
        /* 120 RPM */ { 12,13,13,14,15,15,16,16,17,17,18,19,19,20,20,21,22,22,23,23,24,24,25,26,26,27,27,28,28,29,30,30,31,31,32,33,33,34,34,35,35,36,37,37,38,38,39,39,40,41,41,44,46,49,52,54,57,59,62,64,67,70,72,75,77,80,83,85,88,90,93,96,98,101,103,106,108,111,114,116,119,121,124,127,129,132,134,137,140,142,145,147,150,152,155,158,160,163,165,168,171,175,180,184,189,194,198,203,208,212,217,221,226,231,235,240,244,249,254,258,263,268,272,277,281,286,291,295,300,305,309,314,318,323,328,332,337,341,346,351,355,360,365,369,374,378,383,388,392,397,401,407,412,418,423,429,434,439,445,450,456,461,466,472,477,483,488,494,499,504,510,515,521,526,531,537,542,548,553,559,564,569,575,580,586,591,596,602,607,613,618,624,629,634,640,645,651,656,661,667,672,675,679,682,685,688,691,694,698,701,704,707,710,713,717,720,723,726,729,732,736,739,742,745,748,751,754,758,761,764,767,770,773,777,780,783,786,789,792,796,799,802,805,808,811,815,818,821,824,827,830 }
};

trixterxdreamv1bike::trixterxdreamv1bike(bool noWriteResistance, bool noHeartService, bool noVirtualDevice) {
    // Initialize metrics
    m_watt.setType(metric::METRIC_WATT);
    Speed.setType(metric::METRIC_SPEED);

    // Set the fake bluetooth device info
    this->bluetoothDevice =
            QBluetoothDeviceInfo(QBluetoothUuid {QStringLiteral("774f25bd-6636-4cdc-9398-839de026be1d")}, "Trixter X-Dream V1 Bike", 0);

    // Set the wheel diameter for speed and distance calculations
    this->set_wheelDiameter(DefaultWheelDiameter);

    // Create the settings object and load from QSettings.
    this->appSettings = new trixterxdreamv1settings();

    // QZ things from expected constructor
    this->noWriteResistance = noWriteResistance;
    this->noHeartService = noHeartService;
    this->noVirtualDevice = noVirtualDevice;
    this->noSteering = !appSettings->get_steeringEnabled();

    // Calculate the steering mapping
    this->calculateSteeringMap();

    // fake hardware support for ERG mode
    this->ergModeSupported = true;

    // create the objects that monitor the activation of the gear buttons
    const double buttonSamplePeriod = 50; // the sampling period for the button, in the units of the chronometer used for its updates
    const double activationThreshold = 0.9; // button pressed for this proportion of the sampling period is interpreted as pressed
    const double deactivationThreshold = 0.1; // button pressed for this proportion of the sampling period is interpreted as released

    this->gearUpButton = new ActivationMonitor(buttonSamplePeriod, activationThreshold, deactivationThreshold);
    this->gearUpButton->setActivationCallback([this](bool active){ if(active) this->gearUp();});

    this->gearDownButton = new ActivationMonitor(buttonSamplePeriod, activationThreshold, deactivationThreshold);
    this->gearDownButton->setActivationCallback([this](bool active){ if(active) this->gearDown();});
}

bool trixterxdreamv1bike::connect(QString portName) {
    // In case already connected, disconnect.
    this->disconnectPort();

    // Get the current time in milliseconds since ancient times.
    this->t0 = getTime();

    // create the port object and connect it
    auto thisObject = this;
    this->port = new trixterxdreamv1serial(this);
    this->port->set_receiveBytes([thisObject](const QByteArray& bytes)->void{thisObject->receiveBytes(bytes);});
    this->port->set_getTime(getTime);

    // tell the client where to get the time
    this->client.set_GetTime(getTime);

    // tell the client how to send data to the device
    if(!noWriteResistance) {
        auto device=this->port;
        this->client.set_WriteBytes([device](uint8_t * bytes, int length)->void{ device->write(QByteArray((const char *)bytes, length));});
    }
    // Set up a stopwatch to time the connection operations
    QElapsedTimer stopWatch;
    stopWatch.start();

    // open the port.
    if(!this->port->open(portName)) {
        qDebug() << "Failed to open port, determined after " << stopWatch.elapsed() << "milliseconds";
        return false;
    }

    // Start the metrics update timer
    this->metricsUpdateTimerId = this->startTimer(UpdateMetricsInterval, Qt::PreciseTimer);
    if(this->metricsUpdateTimerId==0)
    {
        qDebug() << "Failed to start metrics update timer";
        throw "Failed to start metrics timer";
    }

    // wait for up to the configured connection timeout for some packets to arrive
    for(uint32_t start = getTime(), limit=start+this->appSettings->get_connectionTimeoutMilliseconds(); getTime()<limit;) {
        if(this->connected()) {
            qDebug() << "Connected after " << stopWatch.elapsed() << "milliseconds";
            break;
        }
        QThread::msleep(20);
    }

    if(!this->connected())
    {
        qDebug() << "Failed to connect to device, after " << stopWatch.elapsed() << "milliseconds";
        this->disconnectPort();
        return false;
    }

    if(!this->noWriteResistance)
    {
        // latch onto the port accessor's pulse to send the resistance signal
        this->port->set_pulse([thisObject]()->void{thisObject->updateResistance();},
                              trixterxdreamv1client::ResistancePulseIntervalMilliseconds);
    }

    this->settingsUpdateTimerId = this->startTimer(SettingsUpdateTimerIntervalMilliseconds, Qt::VeryCoarseTimer);
    if(this->settingsUpdateTimerId==0)
    {
        qDebug() << "Failed to start settings update timer. Too bad.";
    }

    this->configureVirtualBike();

    return true;
}

void trixterxdreamv1bike::disconnectPort() {
    if(this->port) {
        qDebug() << "Disconnecting from serial port";
        delete this->port;
        this->port = nullptr;
    }
    if(this->metricsUpdateTimerId) {
        qDebug() << "Killing metricsUpdate timer";
        this->killTimer(this->metricsUpdateTimerId);
        this->metricsUpdateTimerId = 0;
    }
    if(this->settingsUpdateTimerId) {
        qDebug() << "Killing settings update timer";
        this->killTimer(this->settingsUpdateTimerId);
        this->settingsUpdateTimerId = 0;
    }
}

void trixterxdreamv1bike::configureVirtualBike(){
// ******************************************* virtual bike init *************************************

    bool haveVirtualDevice = this->hasVirtualDevice();

    #ifdef Q_OS_IOS
    #ifndef IO_UNDER_QT
    if(h)
        haveVirtualDevice = true;
    #endif
    #endif

    if(!haveVirtualDevice){
        QSettings settings;
        bool virtual_device_enabled = settings.value(QZSettings::virtual_device_enabled, QZSettings::default_virtual_device_enabled).toBool();

    #ifdef Q_OS_IOS
    #ifndef IO_UNDER_QT
        bool cadence = settings.value(QZSettings::bike_cadence_sensor, QZSettings::default_bike_cadence_sensor).toBool();
        bool ios_peloton_workaround = settings.value(QZSettings::ios_peloton_workaround, QZSettings::default_ios_peloton_workaround).toBool();
        if (ios_peloton_workaround && cadence) {
            qDebug() << "ios_peloton_workaround activated!";
            h = new lockscreen();
            h->virtualbike_ios();
        } else
    #endif
    #endif
        if (virtual_device_enabled) {
            qDebug() << QStringLiteral("creating virtual bike interface...");

            double bikeResistanceOffset = settings.value(QZSettings::bike_resistance_offset, QZSettings::default_bike_resistance_offset).toInt();
            double bikeResistanceGain = settings.value(QZSettings::bike_resistance_gain_f, QZSettings::default_bike_resistance_gain_f).toDouble();
            auto virtualBike = new virtualbike(this, noWriteResistance, noHeartService, bikeResistanceOffset, bikeResistanceGain);
            bike::connect(virtualBike, &virtualbike::changeInclination, this, &trixterxdreamv1bike::changeInclination);

            this->setVirtualDevice(virtualBike, VIRTUAL_DEVICE_MODE::PRIMARY);
        }
    }
    // ********************************************************************************************************
}

uint16_t trixterxdreamv1bike::powerFromResistanceRequest(resistance_t requestedResistance) {
    return this->calculatePower((int)this->Cadence.value(), requestedResistance);
}

resistance_t trixterxdreamv1bike::resistanceFromPowerRequest(uint16_t power) {

    if(power<=0)
        return 0;

    // round the current cadence
    int32_t c = (int32_t)(this->Cadence.value() + 0.5);

    if(c==0)
        return 0; // don't use resistance if there's no cadence

    c = std::min(120, std::max(c, 30));

    auto& cadencePower = powerTable[c-30];
    auto item = std::lower_bound(cadencePower.begin(), cadencePower.end(), power) - cadencePower.begin();

    return item;
}

double trixterxdreamv1bike::calculatePower(int cadenceRPM, int resistance) {
    if(cadenceRPM==0.0)
        return 0.0;

    int32_t c = std::max(30, std::min(120, (int32_t)(cadenceRPM+0.5)));
    int32_t r = std::max(0, std::min(250, resistance));

    double result = powerTable[c-30][r];

    return result;
}

uint16_t trixterxdreamv1bike::calculatePowerFromInclination(double inclination, double speedMetresPerSecond) {
    QSettings settings;

    double riderMass = settings.value(QZSettings::weight, QZSettings::default_weight).toFloat();
    double bikeMass = settings.value(QZSettings::bike_weight, QZSettings::default_bike_weight).toFloat();
    double totalMass = riderMass+bikeMass;
    double fg = 9.8067*sin(atan(0.01*inclination))*totalMass;

    uint16_t power = (uint16_t)(fg * speedMetresPerSecond);

    qDebug() << "Inclination:" << inclination
             << " Speed:" << speedMetresPerSecond << "m/s "
             << " Total Mass:"<< totalMass << "kg "
             << "= Power:" << power << "W ";

    return power;
}

bool trixterxdreamv1bike::connected() {
    // If this is called from the connect() method, the timer won't have called the update() method
    // so go directly to the queue of states.
    QMutexLocker lockerA(&this->statesMutex);
    if(!this->states.empty())
        return true;
    lockerA.unlock();

    // Queue of states is empty...
    QMutexLocker lockerB(&this->updateMutex);
    return (this->getTime()-this->lastPacketProcessedTime) < DisconnectionTimeout;
}


uint32_t trixterxdreamv1bike::getTime() {
    auto ms = QDateTime::currentMSecsSinceEpoch();
    return static_cast<uint32_t>(ms);
}

void trixterxdreamv1bike::timerEvent(QTimerEvent *event) {
    int timerId = event->timerId();

    // check the options, most frequent to least frequent
    if(timerId==this->metricsUpdateTimerId) {
        event->accept();
        this->update();
    } else if(timerId==this->settingsUpdateTimerId) {
        event->accept();
        this->appSettings->Load();
    }
}

void trixterxdreamv1bike::receiveBytes(const QByteArray &bytes) {

    // send the bytes to the client and return if there's no change of state
    bool stateChanged = false;
    queue<trixterxdreamv1client::state> * ups = &this->states;

    for(int i=0; i<bytes.length();i++) {
        if(this->client.ReceiveChar(bytes[i])) {
            QMutexLocker locker(&this->statesMutex);
            ups->push(this->client.getLastState());
            stateChanged = true;
        }
    }

    if(!stateChanged)
        return;

    QMutexLocker locker(&this->statesMutex);
    auto timeLimit = getTime() - SmoothingInterval;
    while(!ups->empty() && ups->front().LastEventTime < timeLimit)
        ups->pop();

}

void trixterxdreamv1bike::update() {
    QMutexLocker locker(&this->updateMutex);

    // check that the gears have been engaged, because when this was written, this defaulted to 0
    if(this->gears()==0.0)
        this->gearUp();

    // get the current time
    auto currentTime = getTime();

    // Lock the states mutex and grab a copy of the queue
    QMutexLocker statesLocker(&this->statesMutex);
    queue<trixterxdreamv1client::state> ups = this->states;
    statesLocker.unlock();

    // If there are no states waiting to be processed, clear the metrics and return.
    if(ups.empty()) {
        qDebug() << "no states in queue";
        this->stopping = false;
        this->Speed.setValue(0);
        this->brakeLevel = 0;
        this->m_steeringAngle.setValue(0);
        this->Cadence.setValue(0);
        this->Heart.setValue(0);        
        return;
    }

    // sweep the recent states calculating some averages over the last update interval
    // steering can ba a particularly wobbly signal so smoothing is important
    double steering=0, cadence=0, flywheel=0, brakeLevel=0, heartRate = 0;
    int count = ups.size();

    trixterxdreamv1client::state state{};

    while(!ups.empty()) {
        this->lastPacketProcessedTime = currentTime;

        state = ups.front();
        ups.pop();

        constexpr double brakeScale = 125.0/(trixterxdreamv1client::MaxBrake-trixterxdreamv1client::MinBrake);
        uint8_t b1 = 125 - (state.Brake1 - trixterxdreamv1client::MinBrake) * brakeScale;
        uint8_t b2 = 125 - (state.Brake2 - trixterxdreamv1client::MinBrake) * brakeScale;
        brakeLevel+= b1+b2;

        flywheel += state.FlywheelRPM;
        cadence += state.CrankRPM;

        // Set the steering
        if(!this->noSteering) {
            steering += this->steeringMap[state.Steering];
        }

        if(!this->noHeartRate) {
            heartRate += state.HeartRate;
        }

        const auto gearUpButtons = trixterxdreamv1client::buttons::BackGearUp | trixterxdreamv1client::buttons::FrontGearUp;
        const auto gearDownButtons = trixterxdreamv1client::buttons::BackGearDown | trixterxdreamv1client::buttons::FrontGearDown;

        bool gearUpPressed = (state.Buttons & gearUpButtons)!=0;
        bool gearDownPressed = (state.Buttons & gearDownButtons)!=0;
        this->gearDownButton->update(gearDownPressed, state.LastEventTime);
        this->gearUpButton->update(gearUpPressed, state.LastEventTime);
    }

    if(count>1) {
        double scale = 1.0/count;
        steering *= scale;
        cadence *= scale;
        flywheel *= scale;
        brakeLevel *= scale;
        heartRate *= scale;
    }

    // Determine if the user is pressing the button to stop.
    this->stopping = (state.Buttons & trixterxdreamv1client::buttons::Red) != 0 && flywheel>0.0 ? 1:0;

    // update the metrics
    if(!this->noHeartRate)
        this->Heart.setValue(heartRate);
    this->Distance.setValue(state.CumulativeWheelRevolutions * this->wheelCircumference);
    this->Cadence.setValue(cadence);
    this->LastCrankEventTime = state.LastEventTime;
    this->CrankRevs = state.CumulativeCrankRevolutions;
    this->brakeLevel = brakeLevel;
    constexpr double minutesPerHour = 60.0;
    this->Speed.setValue(flywheel * minutesPerHour * this->wheelCircumference);
    bool steeringAngleChanged = false;
    if(!this->noSteering) {
        double newValue = steering;
        steeringAngleChanged = this->m_steeringAngle.value()!=newValue;
        if(steeringAngleChanged)
            this->m_steeringAngle.setValue(newValue);
    }

    if(this->requestPower > -1) {
        // there's been a request to change power.
        bool changedMode = !this->requestIsPower;
        this->requestIsPower = true; // switch to ERG mode
        this->requestedResistanceInput = this->requestPower;
        this->requestPower = -1;

        if(changedMode) {
            qDebug() << "Changed to ERG mode detected";
            this->Inclination.setValue(0.0); // remove the inclination from the previous mode from the UI tile
        }
    }

    if(this->requestInclination>-100) {
        // there's been a request to change inclination
        bool changedMode = this->requestIsPower;
        this->requestIsPower = false; // set to indoor bike simulation parameters mode
        this->requestedResistanceInput = this->requestInclination;
        this->requestInclination = -100;

        if(changedMode) {
            qDebug() << "Changed to Indoor Bike Simulation Parameters mode";
            this->RequestedPower.setValue(0.0); // get rid of the target power from the UI tile
        }
    }

    if(this->requestedResistanceInput.has_value()) {
        // Get the value. This value is retained between update requests because the resistance that is
        // calculated from it can change due to cadence or flywheel speed.
        int16_t value = this->requestedResistanceInput.value();

        if(this->requestIsPower) {
            // simulate ERG hardware - value is target power in watts
            this->requestResistance = this->resistanceFromPowerRequest(value);

            qDebug() << "Power request: "
                     << this->requestedResistanceInput.value()
                     << "W with cadence "
                     << this->Cadence.value()
                     << "RPM --> setting resistance request: "
                     << this->requestResistance;
        } else {
            // simulate inclination - value is inclination percentage
            double groundSpeed = flywheel / 60.0 * 1000.0 * this->wheelCircumference;
            uint16_t reqPower = this->calculatePowerFromInclination(value, groundSpeed);
            this->requestResistance = this->resistanceFromPowerRequest(reqPower);

            qDebug()  << "Inclination request: "
                      << value
                      << "% speed:"
                      << groundSpeed << "m/s --> setting resistance request: "
                      << this->requestResistance;
        }
    }

    if (this->requestResistance > -1) {
        this->set_resistance(requestResistance);
    }
    this->requestResistance = -1;

    // update the power output
    this->update_metrics(true, this->watts());

    // check if the settings have been updated and adjust accordingly
    if(this->appSettings->get_version()!=this->lastAppSettingsVersion) {

        this->noHeartRate = this->noHeartService || !this->appSettings->get_heartRateEnabled();
        if(this->noHeartRate)
            this->Heart.setValue(0.0);

        this->noSteering = !this->appSettings->get_steeringEnabled();
        if(this->noSteering) {
            if(this->m_steeringAngle.value()!=0) {
                this->m_steeringAngle.setValue(0.0);
                steeringAngleChanged = true;
            }
        } else
            QTimer::singleShot(10ms, this, &trixterxdreamv1bike::calculateSteeringMap);

        this->lastAppSettingsVersion = this->appSettings->get_version();
    }

    // set the elapsed time
    this->elapsed = (currentTime - this->t0) * 0.001;

    if(steeringAngleChanged)
        emit this->steeringAngleChanged(this->m_steeringAngle.value());

    // get the current time
    auto updateTime = getTime()-currentTime;

    // Check the update was quick enough.
    if(updateTime>UpdateMetricsInterval/4)
        qDebug() << "WARNING: Update took too long: " << updateTime << "ms";
}

void trixterxdreamv1bike::calculateSteeringMap() {

    trixterxdreamv1settings::steeringCalibrationInfo info = this->appSettings->get_steeringCalibration();

    vector<double> newMap;

    // Map the calibration values from [-info.max,+info.max] to [0, 2*info.max]
    double mid = info.max, max = 2*mid;

    double l = mid+info.left;
    double cl = mid+info.centerLeft;
    double cr = mid+info.centerRight;
    double r = mid+info.right;

    double scale = max / trixterxdreamv1client::MaxSteering;
    double scaleLeft = mid / (cl-l);
    double scaleRight = mid / (r-cr);

    for(int i=0; i<=trixterxdreamv1client::MaxSteering; i++) {
        double mappedValue = i *scale;

        if(mappedValue>=cl && mappedValue<=cr) {
            mappedValue = mid;
        } else if (mappedValue<=l) {
            mappedValue = 0;
        } else if (mappedValue>=r) {
            mappedValue = max;
        } else if(mappedValue<cl) {
            mappedValue = mid-(cl-mappedValue) * scaleLeft;
        } else {
            mappedValue = mid+(mappedValue-cr) * scaleRight;
        }
        mappedValue = std::max(0.0, std::min(max, mappedValue));
        newMap.push_back(mappedValue-mid);
    }

    QMutexLocker locker(&this->updateMutex);
    this->steeringMap=newMap;
}

void trixterxdreamv1bike::set_resistance(resistance_t resistanceLevel) {
    qDebug() << "setting resistance: " << resistanceLevel << this->noWriteResistance;

    // ignore the resistance if this option was selected
    if(this->noWriteResistance)
        return;

    QMutexLocker locker(&this->updateMutex);

    // Clip the incoming values
    resistance_t unclipped = resistanceLevel;
    if(resistanceLevel<0) resistanceLevel = 0;
    if(resistanceLevel>maxResistance()) resistanceLevel = maxResistance();
    if(unclipped!=resistanceLevel)
        qDebug() << "clipped resistance of " << unclipped << " to " << resistanceLevel;

    // store the resistance level as a metric for the UI
    constexpr double pelotonScaleFactor = 100.0 / trixterxdreamv1client::MaxResistance;
    bool resistanceChanged = false;

    if(resistanceLevel != (resistance_t)this->Resistance.value()) {
        this->Resistance.setValue(resistanceLevel);
        resistanceChanged = true;
    }
    this->m_pelotonResistance.setValue(round(pelotonScaleFactor * resistanceLevel));

    // store the new resistance level. This might be the same as lastRequestedResistance(),Value
    // but it doesn't involve a function call and a cast to get the value.
    this->resistanceLevel = resistanceLevel;

    // if there's been a change of resistance, signal it.
    if(resistanceChanged)
        emit this->resistanceRead(resistanceLevel);

}

uint16_t trixterxdreamv1bike::watts() {
    if(this->Cadence.value()==0)
        return 0;
    return this->calculatePower(this->Cadence.value(), this->Resistance.value());
}

void trixterxdreamv1bike::updateResistance() {

    resistance_t actualResistance = this->stopping ?  (resistance_t)trixterxdreamv1client::MaxResistance : std::min((uint32_t)this->resistanceLevel,(uint32_t)trixterxdreamv1client::MaxResistance );

    // get the time the request is made
    uint32_t t = getTime();

    this->client.SendResistance(actualResistance);

    // determine if the request was late
    int32_t late = t - this->lastResistancePacketTime - trixterxdreamv1client::ResistancePulseIntervalMilliseconds;
    this->lastResistancePacketTime = t;

    if(late>0) {
        qDebug() << QStringLiteral("WARNING: resistance packet was sent %1ms too late").arg(late);
    }
}

trixterxdreamv1bike::~trixterxdreamv1bike() {
    if(this->port) delete this->port;
    if(this->appSettings) delete this->appSettings;

    // NOTE: bluetooth::restart() deletes this object, then deletes the bike object
    //if(this->virtualBike) delete this->virtualBike;
}

void trixterxdreamv1bike::set_wheelDiameter(double value) {
    QMutexLocker locker(&this->updateMutex);

    // clip the value
    value = std::min(MaxWheelDiameter, std::max(value, MinWheelDiameter));

    // stored as km to avoid dividing by 1000 every time it's used
    this->wheelCircumference = value * M_PI / 1000.0;
}


resistance_t trixterxdreamv1bike::pelotonToBikeResistance(int pelotonResistance) {
    pelotonResistance = std::max(0, std::min(100, pelotonResistance));
    return round(0.01*pelotonResistance*trixterxdreamv1client::MaxResistance);
}

trixterxdreamv1bike * trixterxdreamv1bike::tryCreate(bool noWriteResistance, bool noHeartService, bool noVirtualDevice, const QString &portName) {

#if defined(Q_OS_IOS) || defined(Q_OS_ANDROID)
    // Not supported in iOS or Android
    return nullptr;
#endif

    // first check if there's a port specified
    if(portName!=nullptr && !portName.isEmpty())
    {
        qDebug() << "Looking for Trixter X-Dream V1 device on port: " << portName;
        trixterxdreamv1bike * result = new trixterxdreamv1bike(noWriteResistance, noHeartService, noVirtualDevice);
        try {
            if(result->connect(portName)) {
                qDebug() << "Found Trixter X-Dream V1 device on port: " << portName;
                return result;
            }
            delete result;
        } catch(...) {
            qDebug() << "Error thrown looking for Trixter X-Dream V1 device on port: " << portName;

            // make absolutely sure the object is delete otherwise the serial port it opened will remain blocked.
            if(result) {
                qDebug() << "Deleting object that was not able to connect";
                delete result;
            }
            throw;
        }
        qDebug() << "No Trixter X-Dream V1 device found on port: " << portName;
        return nullptr;
    }

    // Find the available ports and return the first success
    auto availablePorts = trixterxdreamv1serial::availablePorts();

    for(int i=0; i<availablePorts.length(); i++)
    {
        auto portName = availablePorts[i];

        trixterxdreamv1bike * result = tryCreate(noWriteResistance, noHeartService, noVirtualDevice, portName);
        if(result)
            return result;
    }

    return nullptr;
}

trixterxdreamv1bike * trixterxdreamv1bike::tryCreate(const QString& portName) {
    return tryCreate(false, false, false, portName);
}


